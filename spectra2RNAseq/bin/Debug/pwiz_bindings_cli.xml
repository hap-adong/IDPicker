<?xml version="1.0"?>
<doc>
    <assembly>
        tradatafile
    </assembly>
    <members>
        <member name="M:pwiz.CLI.msdata.MSDataFile.write(System.String,pwiz.CLI.msdata.MSDataFile.WriteConfig)">
            <summary>
member write function with the specified configuration
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.MSDataFile.write(System.String)">
            <summary>
member write function with the default configuration (mzML, 64-bit, no compression)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.MSDataFile.write(pwiz.CLI.msdata.MSData,System.String,pwiz.CLI.msdata.MSDataFile.WriteConfig)">
            <summary>
static write function for any MSData object with the specified configuration
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.MSDataFile.write(pwiz.CLI.msdata.MSData,System.String)">
            <summary>
static write function for any MSData object with the default configuration (mzML, 64-bit, no compression)
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.MSDataFile.WriteConfig">
            <summary>
configuration options for write()
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.MSDataFile.Format">
            <summary>
supported data formats for write()
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.MSDataFile.#ctor(System.String)">
            <summary>
constructs MSData object backed by file
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.MSDataFile">
            <summary>
MSData object plus file I/O
</summary>
        </member>
        <member name="M:pwiz.msdata.calculateSourceFileSHA1(pwiz.msdata.SourceFile*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
calculates and adds a CV term for the SHA1 checksum of a source file element
</member>
        <member name="M:pwiz.msdata.MSDataFile.write(std.basic_ostream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.MSDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.util.IterationListenerRegistry!System.Runtime.CompilerServices.IsConst*)">
member write function 
</member>
        <member name="M:pwiz.msdata.MSDataFile.write(pwiz.msdata.MSData!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_ostream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.MSDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.util.IterationListenerRegistry!System.Runtime.CompilerServices.IsConst*)">
static write function for any MSData object;
iterationListenerRegistry may be used for progress updates
</member>
        <member name="M:pwiz.msdata.MSDataFile.write(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.MSDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.util.IterationListenerRegistry!System.Runtime.CompilerServices.IsConst*)">
member write function 
</member>
        <member name="M:pwiz.msdata.MSDataFile.write(pwiz.msdata.MSData!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.MSDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.util.IterationListenerRegistry!System.Runtime.CompilerServices.IsConst*)">
static write function for any MSData object;
iterationListenerRegistry may be used for progress updates
</member>
        <member name="T:pwiz.msdata.MSDataFile.WriteConfig">
configuration for write()
</member>
        <member name="T:pwiz.msdata.MSDataFile.Format">
data format for write()
</member>
        <member name="M:pwiz.msdata.MSDataFile.#ctor(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.Reader!System.Runtime.CompilerServices.IsConst*,System.Boolean)">
constructs MSData object backed by file;
reader==0 -&gt; use DefaultReaderList 
</member>
        <member name="T:pwiz.msdata.MSDataFile">
MSData object plus file I/O
</member>
        <member name="M:pwiz.msdata.BinaryDataEncoder.decode(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
decode text-encoded data as binary 
</member>
        <member name="M:pwiz.msdata.BinaryDataEncoder.encode(System.Double!System.Runtime.CompilerServices.IsConst*,System.UInt32,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.UInt32*)">
encode binary data as a text string
</member>
        <member name="M:pwiz.msdata.BinaryDataEncoder.encode(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.UInt32*)">
encode binary data as a text string
</member>
        <member name="T:pwiz.msdata.BinaryDataEncoder.Config">
encoding/decoding configuration 
</member>
        <member name="T:pwiz.msdata.BinaryDataEncoder">
binary-to-text encoding
</member>
        <member name="M:pwiz.CLI.proteome.Diff.op_Implicit(pwiz.CLI.proteome.Diff)~System.Boolean">
            <summary>
conversion to bool, with same semantics as *nix diff command:
 true == different
 false == not different
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Diff">
            <summary>
Calculate diffs of objects in the ProteomeData structure hierarchy.
<para /><para>A diff between two objects a and b calculates the set differences
a\b and b\a.</para><para /><para>The Diff struct acts as a functor, but also stores the 
results of the diff calculation.</para><para /><para>The bool conversion operator is provided to indicate whether 
the two objects are different (either a\b or b\a is non-empty).</para></summary>
        </member>
        <member name="T:pwiz.CLI.proteome.DiffConfig">
            <summary>
configuration struct for diffs
</summary>
        </member>
        <member name="T:pwiz.proteome.DiffConfig">
configuration struct for diffs
</member>
        <member name="M:pwiz.CLI.tradata.Diff.op_Implicit(pwiz.CLI.tradata.Diff)~System.Boolean">
            <summary>
conversion to bool, with same semantics as *nix diff command:
 true == different
 false == not different
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.Diff">
            <summary>
Calculate diffs of objects in the TraData structure hierarchy.
<para /><para>A diff between two objects a and b calculates the set differences
a\b and b\a.</para><para /><para>The Diff struct acts as a functor, but also stores the 
results of the diff calculation.</para><para /><para>The bool conversion operator is provided to indicate whether 
the two objects are different (either a\b or b\a is non-empty).</para></summary>
        </member>
        <member name="F:pwiz.CLI.tradata.DiffConfig.precision">
            <summary>
precision with which two doubles are compared
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.DiffConfig">
            <summary>
configuration struct for diffs
</summary>
        </member>
        <member name="T:pwiz.tradata.DiffConfig">
configuration struct for diffs
</member>
        <member name="T:pwiz.CLI.analysis.ThresholdFilter.ThresholdingOrientation">
            <summary>
determines the orientation of the thresholding
</summary>
        </member>
        <member name="F:pwiz.CLI.analysis.ThresholdFilter.ThresholdingBy_Type.ThresholdingBy_FractionOfTotalIntensityCutoff">
            <summary>
keep data points that are part of the {threshold} [most|least] intense fraction
- {threshold} is the fraction of TIC to keep, i.e. the TIC of the kept data points is {threshold} * original TIC
</summary>
        </member>
        <member name="F:pwiz.CLI.analysis.ThresholdFilter.ThresholdingBy_Type.ThresholdingBy_FractionOfTotalIntensity">
            <summary>
keep data points [more|less] relatively intense than {threshold}
- {threshold} is each data point's fraction of the total intensity, aka total ion current (in the range [0,1])
</summary>
        </member>
        <member name="F:pwiz.CLI.analysis.ThresholdFilter.ThresholdingBy_Type.ThresholdingBy_FractionOfBasePeakIntensity">
            <summary>
keep data points [more|less] relatively intense than {threshold}
- {threshold} is each data point's fraction of the base peak intensity (in the range [0,1])
</summary>
        </member>
        <member name="F:pwiz.CLI.analysis.ThresholdFilter.ThresholdingBy_Type.ThresholdingBy_AbsoluteIntensity">
keep data points ranked [better|worse] than {threshold}
- {threshold} is rounded to the nearest integer
- rank 1 is the most intense
keep data points ranked [better|worse] than {threshold}
- rank 1 is the most intense
<summary>
keep data points [more|less] absolutely intense than {threshold}
</summary></member>
        <member name="F:pwiz.CLI.analysis.ThresholdFilter.ThresholdingBy_Type.ThresholdingBy_CountAfterTies">
            <summary>
keep the {threshold} [most|least] intense data points
- {threshold} is rounded to the nearest integer
- if the {threshold} falls within equally intense data points, all data points with that intensity are kept
</summary>
        </member>
        <member name="F:pwiz.CLI.analysis.ThresholdFilter.ThresholdingBy_Type.ThresholdingBy_Count">
            <summary>
keep the {threshold} [most|least] intense data points
- {threshold} is rounded to the nearest integer
- if the {threshold} falls within equally intense data points, all data points with that intensity are removed
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.ThresholdFilter.ThresholdingBy_Type">
            <summary>
determines the method of thresholding and the meaning of the threshold value
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_PeakFilter">
            <summary>
SpectrumList implementation to filter data points by a user-specified functor
</summary>
        </member>
        <member name="F:pwiz.analysis.PrecursorMassFilter.Config.useBlanketFiltering">
flag indicates neutral loss removal by applying a charge scaled 60 Da exclusion window below the charge reduced precursor
</member>
        <member name="F:pwiz.analysis.PrecursorMassFilter.Config.neutralLossSpecies">
intact precursors can undergo loss of neutral molecules after the dissociation event
          * this flag specifies the removal of these "neutral loss" ions (precursor mass - neutral loss mass)/charge 
</member>
        <member name="F:pwiz.analysis.PrecursorMassFilter.Config.removeReducedChargePrecursors">
electron transfer in ETD or ECD creates intact precursors with reduced charge states
          * this flag specifies their removal. 
</member>
        <member name="F:pwiz.analysis.PrecursorMassFilter.Config.removePrecursor">
remove the precursor m/z from the MS2 spectrum
</member>
        <member name="T:pwiz.analysis.PrecursorMassFilter.Config">
PrecursorMassFilter's parameters
</member>
        <member name="M:pwiz.analysis.lessThanTolerance(System.Double,System.Double,pwiz.analysis.MZTolerance!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff b - a is greater than the value in tolerance (useful for matching sorted mass lists)
</member>
        <member name="M:pwiz.analysis.isWithinTolerance(System.Double,System.Double,pwiz.analysis.MZTolerance!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff a is in (b-tolerance, b+tolerance)
</member>
        <member name="T:pwiz.analysis.MZTolerance">

struct for expressing m/z tolerance in either amu or ppm

</member>
        <member name="T:pwiz.analysis.ThresholdFilter.ThresholdingOrientation">
determines the orientation of the thresholding
</member>
        <member name="T:pwiz.analysis.ThresholdFilter.ThresholdingBy_Type">
determines the method of thresholding and the meaning of the threshold value
</member>
        <member name="M:pwiz.analysis.SpectrumList_PeakFilter.accept(boost.shared_ptr&lt;pwiz.msdata.SpectrumList&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
peak filters work on any SpectrumList
</member>
        <member name="T:pwiz.analysis.SpectrumList_PeakFilter">
SpectrumList implementation that returns spectra with the specified SpectrumDataFilter operation applied
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.read(System.String,System.String,pwiz.CLI.tradata.TraDataList)">
fill in the TraDataList with TraData for all samples
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.read(System.String,pwiz.CLI.tradata.TraDataList)">
fill in the TraDataList with TraData for all samples
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.read(System.String,System.String,pwiz.CLI.tradata.TraData,System.Int32)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.read(System.String,System.String,pwiz.CLI.tradata.TraData)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.read(System.String,pwiz.CLI.tradata.TraData,System.Int32)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.read(System.String,pwiz.CLI.tradata.TraData)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.identify(System.String,System.String)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.CLI.tradata.ReaderList.identify(System.String)">
returns child name iff some child identifies, else empty string
</member>
        <member name="T:pwiz.CLI.tradata.ReaderList">
Reader container (composite pattern).

The template get&lt;reader_type&gt;() gives access to child Readers by type, to facilitate
Reader-specific configuration at runtime.

</member>
        <member name="M:pwiz.CLI.tradata.Reader.read(System.String,System.String,pwiz.CLI.tradata.TraDataList)">
fill in the TraData structure
</member>
        <member name="M:pwiz.CLI.tradata.Reader.read(System.String,System.String,pwiz.CLI.tradata.TraData,System.Int32)">
fill in the TraData structure
</member>
        <member name="M:pwiz.CLI.tradata.Reader.read(System.String,System.String,pwiz.CLI.tradata.TraData)">
fill in the TraData structure
</member>
        <member name="M:pwiz.CLI.tradata.Reader.accept(System.String,System.String)">
return true iff Reader can handle the file;
Reader may filter based on filename and/or head of the file
</member>
        <member name="T:pwiz.CLI.tradata.Reader">
interface for file readers
</member>
        <member name="T:pwiz.CLI.tradata.Version">
            <summary>
version information for the msdata namespace
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Diff.op_Implicit(pwiz.CLI.msdata.Diff)~System.Boolean">
            <summary>
conversion to bool, with same semantics as *nix diff command:
 true == different
 false == not different
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Diff">
            <summary>
Calculate diffs of objects in the MSData structure hierarchy.
<para /><para>A diff between two objects a and b calculates the set differences
a\b and b\a.</para><para /><para>The Diff struct acts as a functor, but also stores the 
results of the diff calculation.</para><para /><para>The bool conversion operator is provided to indicate whether 
the two objects are different (either a\b or b\a is non-empty).</para></summary>
        </member>
        <member name="F:pwiz.CLI.msdata.DiffConfig.ignoreMetadata">
            <summary>
ignore all file level metadata, and most scan level metadata,
i.e. verify scan binary data, plus important scan metadata:
<para>- msLevel</para><para>- scanNumber</para><para>- precursor.ionSelection</para></summary>
        </member>
        <member name="F:pwiz.CLI.msdata.DiffConfig.precision">
            <summary>
precision with which two doubles are compared
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.DiffConfig">
            <summary>
configuration struct for diffs
</summary>
        </member>
        <member name="F:pwiz.msdata.DiffConfig.ignoreMetadata">
ignore all file level metadata, and most scan level metadata,
i.e. verify scan binary data, plus important scan metadata:
 - msLevel
 - precursor.ionSelection
</member>
        <member name="F:pwiz.msdata.DiffConfig.ignoreIdentity">
ignore members of SpectrumIdentity and ChromatogramIdentity
</member>
        <member name="T:pwiz.msdata.DiffConfig">
configuration struct for diffing MSData types
</member>
        <member name="T:pwiz.CLI.msdata.Version">
            <summary>
version information for the msdata namespace
</summary>
        </member>
        <member name="D:pwiz.msdata.FullReaderList">
alias for ExtendedReaderList  
</member>
        <member name="T:pwiz.msdata.ExtendedReaderList">
default ReaderList, extended to include vendor readers
</member>
        <member name="T:pwiz.msdata.DefaultReaderList">
default Reader list
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.readIds(System.String,System.String)">
get MSData.Ids
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.readIds(System.String)">
get MSData.Ids
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.read(System.String,System.String,pwiz.CLI.msdata.MSDataList)">
fill in the MSDataList with MSData for all samples
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.read(System.String,pwiz.CLI.msdata.MSDataList)">
fill in the MSDataList with MSData for all samples
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.read(System.String,System.String,pwiz.CLI.msdata.MSData,System.Int32)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.read(System.String,System.String,pwiz.CLI.msdata.MSData)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.read(System.String,pwiz.CLI.msdata.MSData,System.Int32)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.read(System.String,pwiz.CLI.msdata.MSData)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.identify(System.String,System.String)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.CLI.msdata.ReaderList.identify(System.String)">
returns child name iff some child identifies, else empty string
</member>
        <member name="T:pwiz.CLI.msdata.ReaderList">
Reader container (composite pattern).

The template get&lt;reader_type&gt;() gives access to child Readers by type, to facilitate
Reader-specific configuration at runtime.

</member>
        <member name="M:pwiz.CLI.msdata.Reader.readIds(System.String,System.String)">
fill in the MSData structure
</member>
        <member name="M:pwiz.CLI.msdata.Reader.read(System.String,System.String,pwiz.CLI.msdata.MSDataList)">
fill in the MSData structure
</member>
        <member name="M:pwiz.CLI.msdata.Reader.read(System.String,System.String,pwiz.CLI.msdata.MSData,System.Int32)">
fill in the MSData structure
</member>
        <member name="M:pwiz.CLI.msdata.Reader.read(System.String,System.String,pwiz.CLI.msdata.MSData)">
fill in the MSData structure
</member>
        <member name="M:pwiz.CLI.msdata.Reader.accept(System.String,System.String)">
return true iff Reader can handle the file;
Reader may filter based on filename and/or head of the file
</member>
        <member name="T:pwiz.CLI.msdata.Reader">
interface for file readers
</member>
        <member name="M:pwiz.msdata.op_Addition(boost.shared_ptr&lt;pwiz.msdata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;pwiz.msdata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a list containing the lhs and rhs as readers
</member>
        <member name="M:pwiz.msdata.ReaderList.op_Addition(boost.shared_ptr&lt;pwiz.msdata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a concatenated list of all the Readers from the lhs and rhs operands
</member>
        <member name="M:pwiz.msdata.ReaderList.op_Addition(pwiz.msdata.ReaderList!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a concatenated list of all the Readers from the lhs and rhs operands
</member>
        <member name="M:pwiz.msdata.ReaderList.op_AdditionAssignment(boost.shared_ptr&lt;pwiz.msdata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
appends the rhs Reader to the list
</member>
        <member name="M:pwiz.msdata.ReaderList.op_AdditionAssignment(pwiz.msdata.ReaderList!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
appends all of the rhs operand's Readers to the list
</member>
        <member name="M:pwiz.msdata.ReaderList.readIds(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;std.basic_string&lt;System.SByte!Syste">
delegates to first child that identifies;
provides support for multi-run input files
</member>
        <member name="M:pwiz.msdata.ReaderList.readIds(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
delegates to first child that identifies;
provides support for multi-run input files
</member>
        <member name="M:pwiz.msdata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;boost.shared_ptr&lt;pwiz.msdata.MSData&gt;&gt;*">
delegates to first child that identifies;
provides support for multi-run input files
</member>
        <member name="M:pwiz.msdata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;boost.shared_ptr&lt;pwiz.msdata.MSData&gt;&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
delegates to first child that identifies;
provides support for multi-run input files
</member>
        <member name="M:pwiz.msdata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.MSData*!System.Runtime.CompilerServic">
delegates to first child that identifies
</member>
        <member name="M:pwiz.msdata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.MSData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)">
delegates to first child that identifies
</member>
        <member name="M:pwiz.msdata.ReaderList.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.msdata.ReaderList.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.msdata.Reader.readIds(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;std.basic_string&lt;System.SByte!System.Ru">
fill in a vector of MSData.Id values; provides support for multi-run input files
</member>
        <member name="M:pwiz.msdata.Reader.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;boost.shared_ptr&lt;pwiz.msdata.MSData&gt;&gt;*!Sys">
fill in a vector of MSData structures; provides support for multi-run input files
</member>
        <member name="M:pwiz.msdata.Reader.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.MSData*!System.Runtime.CompilerServices.I">
fill in the MSData structure from the first (or only) sample
</member>
        <member name="M:pwiz.msdata.Reader.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
return file type iff Reader recognizes the file, else empty;
note: for formats requiring a 3rd party DLL identify() should
return non-empty if it recognized the format, even though reading
may fail if the 3rd party DLL isn't actually present
Reader may filter based on filename and/or head of the file
</member>
        <member name="M:pwiz.msdata.Reader.accept(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
return true iff Reader recognizes the file as one it should handle
that's not to say one it CAN handle, necessarily, as in Thermo on linux,
see comment for identify() below
</member>
        <member name="T:pwiz.msdata.Reader">
interface for file readers
</member>
        <member name="T:pwiz.CLI.analysis.Version">
            <summary>
version information for the analysis namespace
</summary>
        </member>
        <member name="M:pwiz.analysis.SpectrumListFactory.usage">
user-friendly documentation
</member>
        <member name="M:pwiz.analysis.SpectrumListFactory.wrap(pwiz.msdata.MSData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
instantiate a list of SpectrumListWrappers
</member>
        <member name="M:pwiz.analysis.SpectrumListFactory.wrap(pwiz.msdata.MSData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
instantiate the SpectrumListWrapper indicated by wrapper
</member>
        <member name="T:pwiz.analysis.SpectrumListFactory">
Factory for instantiating and wrapping SpectrumLists
</member>
        <member name="M:pwiz.CLI.analysis.SpectrumList_ChargeStateCalculator.accept(pwiz.CLI.msdata.SpectrumList)">
charge calculation works on any SpectrumList
</member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_ChargeStateCalculator">
            <summary>
SpectrumList implementation that assigns (probable) charge states to tandem mass spectra
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_PeakPicker">
            <summary>
SpectrumList implementation to replace peak profiles with picked peaks
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_Smoother">
            <summary>
SpectrumList implementation to smooth intensities
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_Sorter">
            <summary>
SpectrumList implementation sorted by a user's predicate
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_SorterPredicate">
            <summary>
Base predicate intended to be overriden with custom predicate for comparing spectra in SpectrumList_Sorter
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_Sorter_LessThan">
            <summary>
Delegate for comparing spectra in SpectrumList_Sorter
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_Filter">
            <summary>
SpectrumList implementation filtered by a user's predicate
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumList_FilterAcceptSpectrum">
            <summary>
Delegate for filtering spectra in SpectrumList_Filter
</summary>
        </member>
        <member name="M:pwiz.CLI.analysis.SpectrumListFactory.usage">
            <summary>
user-friendly documentation
</summary>
        </member>
        <member name="M:pwiz.CLI.analysis.SpectrumListFactory.wrap(pwiz.CLI.msdata.MSData,System.Collections.Generic.IList`1{System.String})">
            <summary>
instantiate a list of SpectrumListWrappers
</summary>
        </member>
        <member name="M:pwiz.CLI.analysis.SpectrumListFactory.wrap(pwiz.CLI.msdata.MSData,System.String)">
            <summary>
instantiate the SpectrumListWrapper indicated by wrapper
</summary>
        </member>
        <member name="T:pwiz.CLI.analysis.SpectrumListFactory">
            <summary>
Factory for instantiating and wrapping SpectrumLists
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SpectrumListWrapper">
            <summary>
Inheritable pass-through implementation for wrapping a SpectrumList 
</summary>
        </member>
        <member name="M:pwiz.analysis.SpectrumList_ChargeStateCalculator.spectrum(System.UInt32,System.Boolean)">
charge calculation requires binary data to function, so returned spectra will always provide the binary data
</member>
        <member name="M:pwiz.analysis.SpectrumList_ChargeStateCalculator.accept(boost.shared_ptr&lt;pwiz.msdata.SpectrumList&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
accepts any tandem mass spectrum
</member>
        <member name="T:pwiz.analysis.SpectrumList_ChargeStateCalculator">
SpectrumList implementation that assigns (probable) charge states to tandem mass spectra
</member>
        <member name="T:pwiz.analysis.SpectrumList_PeakPicker">
SpectrumList implementation to replace peak profiles with picked peaks
</member>
        <member name="M:pwiz.analysis.LocalMaximumPeakDetector.detect(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;pwiz.analysis.Peak&gt;*)">
finds all local maxima, i.e. any point that has a greater y value than both
of its neighboring points;
note: the peaks array, if non-NULL, only provides x and y values
</member>
        <member name="M:pwiz.analysis.PeakDetector.detect(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;pwiz.analysis.Peak&gt;*)">
find peaks in the signal profile described by the x and y vectors
</member>
        <member name="T:pwiz.analysis.Peak">
represents some generic metadata about a peak detected in a signal
</member>
        <member name="T:pwiz.analysis.SpectrumList_Smoother">
SpectrumList implementation to return smoothed spectral data
</member>
        <member name="M:pwiz.analysis.WhittakerSmoother.smooth_copy(std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
smooth y values and copy back to the input vectors using Whittaker algorithm;
note: in the case of sparse vectors, smoothing may fill in samples not present
      in the original data, so make sure to check the size of the output vectors
</member>
        <member name="M:pwiz.analysis.WhittakerSmoother.smooth(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
smooth y values to existing vectors using Whittaker algorithm;
note: in the case of sparse vectors, smoothing may fill in samples not present
      in the original data, so make sure to check the size of the output vectors
</member>
        <member name="M:pwiz.analysis.SavitzkyGolaySmoother.smooth_copy(std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
smooth y values and copy back to the input vectors using Savitzky-Golay algorithm;
preconditions:
- samples within the window must be (approximately) equally spaced
</member>
        <member name="M:pwiz.analysis.SavitzkyGolaySmoother.smooth(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
smooth y values to existing vectors using Savitzky-Golay algorithm;
preconditions:
- samples within the window must be (approximately) equally spaced
</member>
        <member name="M:pwiz.analysis.Smoother.smooth_copy(std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
smooth y values and copy back to the input vectors;
note: in the case of sparse vectors, smoothing may fill in samples not present
      in the original data, so make sure to check the size of the output vectors
</member>
        <member name="M:pwiz.analysis.Smoother.smooth(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
smooth y values to existing vectors;
note: in the case of sparse vectors, smoothing may fill in samples not present
      in the original data, so make sure to check the size of the output vectors
</member>
        <member name="T:pwiz.analysis.Smoother">
interface for a one-dimensional smoothing algorithm
</member>
        <member name="M:pwiz.analysis.SpectrumList_Sorter.size">
\name SpectrumList interface
</member>
        <member name="T:pwiz.analysis.SpectrumList_Sorter.Predicate">
client-implemented sort predicate -- called during construction of
SpectrumList_Sorter to sort the underlying spectrum list
</member>
        <member name="T:pwiz.analysis.SpectrumList_Sorter">
Provides a custom-sorted spectrum list
</member>
        <member name="M:pwiz.analysis.SpectrumList_Filter.size">
\name SpectrumList interface
</member>
        <member name="M:pwiz.analysis.SpectrumList_Filter.Predicate.done">
return true iff done accepting spectra; 
this allows early termination of the iteration through the original
SpectrumList, possibly using assumptions about the order of the
iteration (e.g. index is increasing, nativeID interpreted as scan number is
increasing, ...)
</member>
        <member name="M:pwiz.analysis.SpectrumList_Filter.Predicate.accept(pwiz.msdata.Spectrum!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
return true iff Spectrum is accepted
</member>
        <member name="M:pwiz.analysis.SpectrumList_Filter.Predicate.accept(pwiz.msdata.SpectrumIdentity!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
return values:
 true: accept the Spectrum
 false: reject the Spectrum
 indeterminate: need to see the full Spectrum object to decide
</member>
        <member name="T:pwiz.analysis.SpectrumList_Filter.Predicate">
client-implemented filter predicate -- called during construction of
SpectrumList_Filter to create the filtered list of spectra
</member>
        <member name="T:pwiz.analysis.SpectrumList_Filter">
SpectrumList filter, for creating Spectrum sub-lists
</member>
        <member name="M:boost.logic.op_Inequality(boost.logic.tribool,=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t))">
\overload

</member>
        <member name="M:boost.logic.op_Inequality(=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t),boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_Inequality(System.Boolean,boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_Inequality(boost.logic.tribool,System.Boolean)">
\overload

</member>
        <member name="M:boost.logic.op_Equality(boost.logic.tribool,=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t))">
\overload

</member>
        <member name="M:boost.logic.op_Equality(=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t),boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_Equality(System.Boolean,boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_Equality(boost.logic.tribool,System.Boolean)">
\overload

</member>
        <member name="M:boost.logic.op_LogicalOr(boost.logic.tribool,=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t))">
\overload

</member>
        <member name="M:boost.logic.op_LogicalOr(=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t),boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_LogicalOr(System.Boolean,boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_LogicalOr(boost.logic.tribool,System.Boolean)">
\overload

</member>
        <member name="M:boost.logic.op_LogicalAnd(boost.logic.tribool,=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t))">
\overload

</member>
        <member name="M:boost.logic.op_LogicalAnd(=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t),boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_LogicalAnd(System.Boolean,boost.logic.tribool)">
\overload

</member>
        <member name="M:boost.logic.op_LogicalAnd(boost.logic.tribool,System.Boolean)">
\overload

</member>
        <member name="T:boost.logic.tribool.value_t">
The actual stored value in this 3-state boolean, which may be false, true,
or indeterminate.

</member>
        <member name="M:boost.logic.tribool.op_Implicit~ boost.logic.tribool.dummy::*">
 Use a 3-state boolean in a boolean context. Will evaluate true in a
 boolean context only when the 3-state boolean is definitely true.

 \returns true if the 3-state boolean is true, false otherwise
 \throws nothrow

</member>
        <member name="M:boost.logic.tribool.#ctor(=FUNC:System.Boolean(boost.logic.tribool,boost.logic.detail.indeterminate_t))">
 Construct a new 3-state boolean value with an indeterminate value.

 \throws nothrow

</member>
        <member name="M:boost.logic.tribool.#ctor(System.Boolean)">
 Construct a new 3-state boolean value with the given boolean
 value, which may be \c true or \c false.

 \throws nothrow

</member>
        <member name="M:boost.logic.tribool.#ctor">
 Construct a new 3-state boolean value with the value 'false'.

 \throws nothrow

</member>
        <member name="T:boost.logic.tribool.dummy">
INTERNAL ONLY
</member>
        <member name="T:boost.logic.tribool">
 \brief A 3-state boolean type.

 3-state boolean values are either true, false, or
 indeterminate.

</member>
        <member name="M:boost.logic.indeterminate(boost.logic.tribool,boost.logic.detail.indeterminate_t)">
 \brief Keyword and test function for the indeterminate tribool value

 The \c indeterminate function has a dual role. It's first role is
 as a unary function that tells whether the tribool value is in the
 "indeterminate" state. It's second role is as a keyword
 representing the indeterminate (just like "true" and "false"
 represent the true and false states). If you do not like the name
 "indeterminate", and would prefer to use a different name, see the
 macro \c BOOST_TRIBOOL_THIRD_STATE.

 \returns <tt>x.value == tribool::indeterminate_value</tt>
 \throws nothrow

</member>
        <member name="D:boost.logic.indeterminate_keyword_t">
INTERNAL ONLY
The type of the 'indeterminate' keyword. This has the same type as the
function 'indeterminate' so that we can recognize when the keyword is
used.

</member>
        <member name="T:boost.logic.detail.indeterminate_t">
 INTERNAL ONLY

 \brief A type used only to uniquely identify the 'indeterminate'
 function/keyword.

</member>
        <member name="M:pwiz.util.IntegerSet.size">
returns the number of integers in the set
</member>
        <member name="M:pwiz.util.IntegerSet.intervalCount">
returns the number of intervals in the set
</member>
        <member name="M:pwiz.util.IntegerSet.hasUpperBound(System.Int32)">
true iff n is an upper bound for the IntegerSet 
</member>
        <member name="M:pwiz.util.IntegerSet.contains(System.Int32)">
true iff n is in the IntegerSet
</member>
        <member name="M:pwiz.util.IntegerSet.empty">
true iff IntegerSet is empty
</member>
        <member name="D:pwiz.util.IntegerSet.const_iterator">
\name const iterator interface to the virtual container 
</member>
        <member name="M:pwiz.util.IntegerSet.parse(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
insert intervals by parsing a string representing a 
whitespace-delimited list of closed intervals:
  parse(" [-3,2]  5  8-9  10- ");  // insert(-3,2); insert(5); insert(8,9); insert(10,INT_MAX);
</member>
        <member name="M:pwiz.util.IntegerSet.insert(System.Int32,System.Int32)">
insert an interval of integers into the virtual container
</member>
        <member name="M:pwiz.util.IntegerSet.insert(System.Int32)">
insert a single integer into the virtual container
</member>
        <member name="M:pwiz.util.IntegerSet.insert(pwiz.util.IntegerSet.Interval)">
\name write access to the virtual container 
insert an interval of integers into the virtual container
</member>
        <member name="M:pwiz.util.IntegerSet.#ctor(System.Int32,System.Int32)">
construction with a single interval
</member>
        <member name="M:pwiz.util.IntegerSet.#ctor(System.Int32)">
construction with a single integer
</member>
        <member name="M:pwiz.util.IntegerSet.#ctor">
default construction
</member>
        <member name="D:pwiz.util.IntegerSet.Iterator.iterator_category">
\name standard iterator typedefs 
</member>
        <member name="M:pwiz.util.IntegerSet.Iterator.op_Increment">
\name forward iterator operators
</member>
        <member name="M:pwiz.util.IntegerSet.Iterator.#ctor(pwiz.util.IntegerSet!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
initialized to beginning of the IntegerSet
</member>
        <member name="M:pwiz.util.IntegerSet.Iterator.#ctor">
\name instantiation 
default constructed Iterator marks end of any IntegerSet
</member>
        <member name="T:pwiz.util.IntegerSet.Iterator">
forward iterator providing readonly access to the virtual container 
</member>
        <member name="D:pwiz.util.IntegerSet.Intervals">
collection of Interval objects
</member>
        <member name="T:pwiz.util.IntegerSet.Interval">
a single closed interval of integers 
</member>
        <member name="T:pwiz.util.IntegerSet">
a virtual container of integers, accessible via an iterator interface,
stored as union of intervals
</member>
        <member name="T:pwiz.msdata.SpectrumListWrapper">
Inheritable pass-through implementation for wrapping a SpectrumList 
</member>
        <member name="M:pwiz.CLI.msdata.id.abbreviate(System.String,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte)">
            <summary>
abbreviates a nativeID ("name1=value1 name2=value2" translates to "value1.value2")
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.id.abbreviate(System.String)">
            <summary>
abbreviates a nativeID ("name1=value1 name2=value2" translates to "value1.value2")
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.id.translateNativeIDToScanNumber(pwiz.CLI.cv.CVID,System.String)">
            <summary>
translates a nativeID in the given nativeID format to a simple integer "scan number";
some nativeID formats cannot be translated from and will always return an empty string
currently supported formats: Thermo, Bruker/Agilent YEP, Bruker BAF, mzXML, MGF, and mzData
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.id.translateScanNumberToNativeID(pwiz.CLI.cv.CVID,System.String)">
            <summary>
translates a "scan number" to a string that is correct for the given nativeID format;
semantic validity requires that scanNumber be parseable as an integer;
some nativeID formats cannot be translated to and will always return an empty string
currently supported formats: Thermo, Bruker/Agilent YEP, Bruker BAF, mzXML, MGF, and mzData
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.id.getDefaultNativeIDFormat(pwiz.CLI.msdata.MSData)">
            <summary>
returns the nativeID format from the defaultSourceFilePtr if set,
or from sourceFilePtrs[0] if the list isn't empty,
or CVID_Unknown
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.id.value(System.String,System.String)">
            <summary>
convenience function to extract a named value from an id string
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.MSData.version">
            <summary>
returns the version of this mzML document;
for a document created programmatically, the version is the current release version of mzML;
for a document created from a file/stream, the version is the schema version read from the file/stream
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.run">
            <summary>
a run in mzML should correspond to a single, consecutive and coherent set of scans on an instrument.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.scanSettingsList">
            <summary>
list with the descriptions of the acquisition settings applied prior to the start of data acquisition.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.dataProcessingList">
            <summary>
list and descriptions of data processing applied to this data.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.softwareList">
            <summary>
list and descriptions of software used to acquire and/or process the data in this mzML file.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.instrumentConfigurationList">
            <summary>
list and descriptions of instrument configurations.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.samples">
            <summary>
list and descriptions of samples.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.paramGroups">
            <summary>
container for a list of referenceableParamGroups
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.fileDescription">
            <summary>
information pertaining to the entire mzML file (i.e. not specific to any part of the data set) is stored here.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.cvs">
            <summary>
container for one or more controlled vocabulary definitions.
<para>- note: one of the &lt;cv&gt; elements in this list MUST be the PSI MS controlled vocabulary. All &lt;cvParam&gt; elements in the document MUST refer to one of the &lt;cv&gt; elements in this list.</para></summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.id">
            <summary>
an optional id for the mzML document. It is recommended to use LSIDs when possible.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.MSData.accession">
            <summary>
an optional accession number for the mzML document.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.MSData">
            <summary>
This is the root element of ProteoWizard; it represents the mzML element, defined as:
intended to capture the use of a mass spectrometer, the data generated, and the initial processing of that data (to the level of the peak list).
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ScanSettingsList">
            <summary>
A list of ScanSettings references; implements the IList&lt;ScanSettings&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.DataProcessingList">
            <summary>
A list of DataProcessing references; implements the IList&lt;DataProcessing&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SoftwareList">
            <summary>
A list of Software references; implements the IList&lt;Software&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.InstrumentConfigurationList">
            <summary>
A list of InstrumentConfiguration references; implements the IList&lt;InstrumentConfiguration&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SampleList">
            <summary>
A list of Sample references; implements the IList&lt;Sample&gt; interface
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Run.chromatogramList">
            <summary>
all chromatograms for this run.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Run.spectrumList">
            <summary>
all mass spectra and the acquisitions underlying them are described and attached here. Subsidiary data arrays are also both described and attached here.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Run.defaultSourceFile">
            <summary>
default source file reference.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Run.startTimeStamp">
            <summary>
the optional start timestamp of the run, in UT.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Run.sample">
            <summary>
this attribute MUST reference the 'id' of the appropriate sample.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Run.defaultInstrumentConfiguration">
            <summary>
this attribute MUST reference the 'id' of the default instrument configuration. If a scan does not reference an instrument configuration, it implicitly refers to this configuration.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Run.id">
            <summary>
a unique identifier for this run.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Run">
            <summary>
A run in mzML should correspond to a single, consecutive and coherent set of scans on an instrument.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ChromatogramListSimple">
            <summary>
Simple writeable in-memory implementation of ChromatogramList.
<para>- note: chromatogram() returns internal Chromatogram references.</para></summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Chromatograms">
            <summary>
A list of Chromatogram references; implements the IList&lt;Chromatogram&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ChromatogramList.dataProcessing">
            <summary>
returns the data processing affecting chromatograms retrieved through this interface
<para>- may return a null shared pointer</para></summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ChromatogramList.chromatogram(System.Int32,System.Boolean)">
            <summary>
retrieve a chromatogram by index
<para>- binary data arrays will be provided if (getBinaryData == true)</para><para>- client may assume the underlying Chromatogram^ is valid</para></summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ChromatogramList.chromatogram(System.Int32)">
            <summary>
retrieve a chromatogram by index without binary data
<para>- client may assume the underlying Chromatogram^ is valid</para></summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ChromatogramList.find(System.String)">
            <summary>
find id in the chromatogram index (returns size() on failure)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ChromatogramList.chromatogramIdentity(System.Int32)">
            <summary>
access to a chromatogram index
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ChromatogramList.empty">
            <summary>
returns true iff (size() == 0)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ChromatogramList.size">
            <summary>
returns the number of chromatograms 
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ChromatogramList">
            <summary>
Interface for accessing chromatograms, which may be stored in memory
or backed by a data file (RAW, mzXML, mzML).  
<para>- Implementations are expected to keep a chromatogram index in the form of
  List&lt;ChromatogramIdentity&gt; or equivalent. The default find*() functions search
  the index linearly. Implementations may provide constant time indexing.</para><para /><para>- The semantics of chromatogram() may vary slightly with implementation.  In particular,
  a ChromatogramList implementation that is backed by a file may choose either to cache 
  or discard the Chromatogram for future access, with the caveat that the client 
  may write to the underlying data.</para><para /><para>- It is the implementation's responsibility to return a valid Chromatogram from chromatogram().
  If this cannot be done, an exception must be thrown.</para><para /><para>- The 'getBinaryData' flag is a hint if false: implementations may provide valid 
  BinaryDataArrayPtrs on chromatogram(index, false); implementations *must* provide 
  valid BinaryDataArrayPtrs on chromatogram(index, true).</para></summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SpectrumListSimple">
            <summary>
Simple writeable in-memory implementation of SpectrumList.
<para>- spectrum() returns internal Spectrum references.</para></summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Spectra">
            <summary>
A list of Spectrum references; implements the IList&lt;Spectrum&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.dataProcessing">
            <summary>
returns the data processing affecting spectra retrieved through this interface
<para>- may return a null shared pointer</para></summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.spectrum(System.Int32,System.Boolean)">
            <summary>
retrieve a spectrum by index
<para>- binary data arrays will be provided if (getBinaryData == true)</para><para>- client may assume the underlying Spectrum^ is valid</para></summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.spectrum(System.Int32)">
            <summary>
retrieve a spectrum by index without binary data
<para>- client may assume the underlying Spectrum^ is valid</para></summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.findNameValue(System.String,System.String)">
            <summary>
find all spectrum indexes with specified name/value pair
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.find(System.String)">
            <summary>
find id in the spectrum index (returns size() on failure)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.spectrumIdentity(System.Int32)">
            <summary>
access to a spectrum index
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.empty">
            <summary>
returns true iff (size() == 0)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SpectrumList.size">
            <summary>
returns the number of spectra
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SpectrumList">
            <summary>
Interface for accessing spectra, which may be stored in memory
or backed by a data file (RAW, mzXML, mzML).
<para>- Implementations are expected to keep a spectrum index in the form of
  List&lt;SpectrumIdentity&gt; or equivalent. The default find*() functions search
  the index linearly. Implementations may provide constant time indexing.</para><para /><para>- The semantics of spectrum() may vary slightly with implementation.  In particular,
  a SpectrumList implementation that is backed by a file may choose either to cache 
  or discard the SpectrumPtrs for future access, with the caveat that the client 
  may write to the underlying data.</para><para /><para>- It is the implementation's responsibility to return a valid Spectrum^ from spectrum().
  If this cannot be done, an exception must be thrown.</para><para /><para>- The 'getBinaryData' flag is a hint if false: implementations may provide valid 
  BinaryDataArrayPtrs on spectrum(index, false); implementations *must* provide 
  valid BinaryDataArrayPtrs on spectrum(index, true).</para></summary>
        </member>
        <member name="T:pwiz.CLI.msdata.IndexList">
            <summary>
A list of spectrum or chromatogram indexes; implements the IList&lt;int&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Chromatogram.setTimeIntensityPairs(pwiz.CLI.msdata.TimeIntensityPairList,pwiz.CLI.cv.CVID,pwiz.CLI.cv.CVID)">
            <summary>
set binary data arrays 
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Chromatogram.getTimeIntensityPairs(pwiz.CLI.msdata.TimeIntensityPairList@)">
            <summary>
copy binary data arrays into time-intensity pair array
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Chromatogram.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.binaryDataArrays">
            <summary>
list of binary data arrays.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.product">
            <summary>
TODO: Product
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.precursor">
            <summary>
TODO: Precursor
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.dataProcessing">
            <summary>
this attribute can optionally reference the 'id' of the appropriate dataProcessing.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.defaultArrayLength">
            <summary>
default length of binary data arrays contained in this element.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.sourceFilePosition">
            <summary>
for file-based MSData implementations, this attribute may refer to the chromatogram's position in the file
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.id">
            <summary>
the native identifier for the chromatogram, used by the acquisition software.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Chromatogram.index">
            <summary>
the zero-based, consecutive index of the chromatogram in the ChromatogramList.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Chromatogram">
            <summary>
A single chromatogram.
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.setMZIntensityArrays(System.Collections.Generic.List`1{System.Double},System.Collections.Generic.List`1{System.Double},pwiz.CLI.cv.CVID)">
            <summary>
set m/z and intensity arrays separately (they must be the same size)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.setMZIntensityArrays(System.Collections.Generic.List`1{System.Double},System.Collections.Generic.List`1{System.Double})">
            <summary>
set m/z and intensity arrays separately (they must be the same size)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.setMZIntensityPairs(pwiz.CLI.msdata.MZIntensityPairList,pwiz.CLI.cv.CVID)">
            <summary>
set binary data arrays 
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.setMZIntensityPairs(pwiz.CLI.msdata.MZIntensityPairList)">
            <summary>
set binary data arrays 
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.getIntensityArray">
            <summary>
get intensity array (may be null)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.getMZArray">
            <summary>
get m/z array (may be null)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.getMZIntensityPairs(pwiz.CLI.msdata.MZIntensityPairList@)">
            <summary>
copy binary data arrays into m/z-intensity pair array
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Spectrum.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.binaryDataArrays">
            <summary>
list of binary data arrays.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.products">
            <summary>
list and descriptions of products of the spectrum currently being described.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.precursors">
            <summary>
list and descriptions of precursors to the spectrum currently being described.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.scanList">
            <summary>
list and descriptions of scans.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.sourceFile">
            <summary>
this attribute can optionally reference the 'id' of the appropriate sourceFile.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.dataProcessing">
            <summary>
this attribute can optionally reference the 'id' of the appropriate dataProcessing.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.defaultArrayLength">
            <summary>
default length of binary data arrays contained in this element.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.sourceFilePosition">
            <summary>
for file-based MSData implementations, this attribute may refer to the spectrum's position in the file
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.spotID">
            <summary>
the identifier for the spot from which this spectrum was derived, if a MALDI or similar run.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.id">
            <summary>
the native identifier for the spectrum, used by the acquisition software.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Spectrum.index">
            <summary>
the zero-based, consecutive index of the spectrum in the SpectrumList.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Spectrum">
            <summary>
The structure that captures the generation of a peak list (including the underlying scans)
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.TimeIntensityPairList">
            <summary>
A list of TimeIntensityPair references; implements the IList&lt;TimeIntensityPair&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.MZIntensityPairList">
            <summary>
A list of MZIntensityPair references; implements the IList&lt;MZIntensityPair&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.BinaryDataArrayList">
            <summary>
A list of BinaryDataArray references; implements the IList&lt;BinaryDataArray&gt; interface
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ChromatogramIdentity.sourceFilePosition">
            <summary>
for file-based MSData implementations, this attribute may refer to the chromatogram's position in the file
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ChromatogramIdentity.id">
            <summary>
a unique identifier for this chromatogram. It should be expected that external files may use this identifier together with the mzML filename or accession to reference a particular chromatogram.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ChromatogramIdentity.index">
            <summary>
the zero-based, consecutive index of the chromatogram in the ChromatogramList.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.SpectrumIdentity.sourceFilePosition">
            <summary>
for file-based MSData implementations, this attribute may refer to the spectrum's position in the file
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.SpectrumIdentity.spotID">
            <summary>
the identifier for the spot from which this spectrum was derived, if a MALDI or similar run.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.SpectrumIdentity.id">
            <summary>
a unique identifier for this spectrum. It should be expected that external files may use this identifier together with the mzML filename or accession to reference a particular spectrum.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.SpectrumIdentity.index">
            <summary>
the zero-based, consecutive index of the spectrum in the SpectrumList.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SpectrumIdentity">
            <summary>
Identifying information for a spectrum
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.TimeIntensityPair">
            <summary>
The data point type of a chromatogram.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.MZIntensityPair">
            <summary>
The data point type of a mass spectrum.
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.BinaryDataArray.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.BinaryDataArray.data">
            <summary>
the binary data.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.BinaryDataArray.dataProcessing">
            <summary>
this optional attribute may reference the 'id' attribute of the appropriate dataProcessing.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.BinaryDataArray">
            <summary>
The structure into which encoded binary data goes. Byte ordering is always little endian (Intel style). Computers using a different endian style MUST convert to/from little endian when writing/reading mzML
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.BinaryData">
            <summary>
A list of doubles; implements the IList&lt;double&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ProductList">
            <summary>
A list of Product references; implements the IList&lt;Product&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Product.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Product.isolationWindow">
            <summary>
this element captures the isolation (or 'selection') window configured to isolate one or more products.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.PrecursorList">
            <summary>
A list of Precursor references; implements the IList&lt;Precursor&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Precursor.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Precursor.activation">
            <summary>
the type and energy level used for activation.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Precursor.selectedIons">
            <summary>
this list of precursor ions that were selected.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Precursor.isolationWindow">
            <summary>
this element captures the isolation (or 'selection') window configured to isolate one or more precursors.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Precursor.externalSpectrumID">
            <summary>
for precursor spectra that are external to this document, this string MUST correspond to the 'id' attribute of a spectrum in the external document indicated by 'sourceFileRef'.
<para>this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both</para></summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Precursor.spectrumID">
            <summary>
reference to the id attribute of the spectrum from which the precursor was selected.
<para>this attribute is mutually exclusive with externalSpectrumID; i.e. use one or the other but not both</para></summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Precursor.sourceFile">
            <summary>
for precursor spectra that are external to this document, this attribute MUST reference the 'id' attribute of a sourceFile representing that external document.
<para>this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both</para></summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Precursor">
            <summary>
The method of precursor ion selection and activation
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SelectedIonList">
            <summary>
A list of SelectedIon references; implements the IList&lt;ltSelectedIon&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Activation">
            <summary>
The type and energy level used for activation.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SelectedIon">
            <summary>
TODO
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.IsolationWindow">
            <summary>
This element captures the isolation (or 'selection') window configured to isolate one or more precursors.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ScanList">
            <summary>
List and descriptions of acquisitions .
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Scans">
            <summary>
A list of Scan references; implements the IList&lt;Scan&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Scan.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Scan.scanWindows">
            <summary>
container for a list of select windows.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Scan.instrumentConfiguration">
            <summary>
this attribute MUST reference the 'id' attribute of the appropriate instrument configuration.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Scan.externalSpectrumID">
            <summary>
for scans that are external to this document, this string MUST correspond to the 'id' attribute of a spectrum in the external document indicated by 'sourceFileRef'.
<para>this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both</para></summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Scan.spectrumID">
            <summary>
for scans that are local to this document, this attribute MUST reference the 'id' attribute of the appropriate spectrum.
<para>this attribute is mutually exclusive with externalSpectrumID; i.e. use one or the other but not both</para></summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Scan.sourceFile">
            <summary>
for scans that are external to this document, this attribute MUST reference the 'id' attribute of a sourceFile representing that external document.
<para>this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both</para></summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Scan">
            <summary>
Scan or acquisition from original raw file used to create this peak list, as specified in sourceFile.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ScanWindowList">
            <summary>
A list of ScanWindow references; implements the IList&lt;ScanWindow&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ScanWindow">
            <summary>
TODO
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.DataProcessing.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.DataProcessing.processingMethods">
            <summary>
description of the default peak processing method(s). This element describes the base method used in the generation of a particular mzML file. Variable methods should be described in the appropriate acquisition section - if no acquisition-specific details are found, then this information serves as the default.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.DataProcessing.id">
            <summary>
a unique identifier for this data processing that is unique across all DataProcessingTypes.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.DataProcessing">
            <summary>
Description of the way in which a particular software was used.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ProcessingMethodList">
            <summary>
A list of ProcessingMethod references; implements the IList&lt;ProcessingMethod&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ProcessingMethod.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ProcessingMethod.software">
            <summary>
this attribute MUST reference the 'id' of the appropriate SoftwareType.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ProcessingMethod.order">
            <summary>
this attributes allows a series of consecutive steps to be placed in the correct order.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ProcessingMethod">
            <summary>
Description of the default peak processing method. This element describes the base method used in the generation of a particular mzML file. Variable methods should be described in the appropriate acquisition section - if no acquisition-specific details are found, then this information serves as the default.
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.InstrumentConfiguration.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.InstrumentConfiguration.software">
            <summary>
reference to a previously defined software element.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.InstrumentConfiguration.componentList">
            <summary>
list with the different components used in the mass spectrometer. At least one source, one mass analyzer and one detector need to be specified.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.InstrumentConfiguration.id">
            <summary>
an identifier for this instrument configuration.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.InstrumentConfiguration">
            <summary>
Description of a particular hardware configuration of a mass spectrometer. Each configuration MUST have one (and only one) of the three different components used for an analysis. For hybrid instruments, such as an LTQ-FT, there MUST be one configuration for each permutation of the components that is used in the document. For software configuration, reference the appropriate ScanSettings element.
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ScanSettings.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ScanSettings.targets">
            <summary>
target list (or 'inclusion list') configured prior to the run.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ScanSettings.sourceFiles">
            <summary>
container for a list of source file references.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.ScanSettings.id">
            <summary>
a unique identifier for this acquisition setting.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ScanSettings">
            <summary>
Description of the acquisition settings of the instrument prior to the start of the run.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.TargetList">
            <summary>
A list of Target references; implements the IList&lt;Target&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Target">
            <summary>
TODO
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Software.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Software.version">
            <summary>
the software version.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Software.id">
            <summary>
an identifier for this software that is unique across all SoftwareTypes.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Software">
            <summary>
A piece of software.
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ComponentList.detector(System.Int32)">
            <summary>
returns the detector component with ordinal &lt;index+1&gt;
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ComponentList.analyzer(System.Int32)">
            <summary>
returns the analyzer component with ordinal &lt;index+1&gt;
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.ComponentList.source(System.Int32)">
            <summary>
returns the source component with ordinal &lt;index+1&gt;
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ComponentList">
            <summary>
List with the different components used in the mass spectrometer. At least one source, one mass analyzer and one detector need to be specified.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ComponentBaseList">
            <summary>
A list of Component references; implements the IList&lt;Component&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Component.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Component.order">
            <summary>
this attribute MUST be used to indicate the order in which the components are encountered from source to detector (e.g., in a Q-TOF, the quadrupole would have the lower order number, and the TOF the higher number of the two).
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Component.type">
            <summary>
the type of component (Source, Analyzer, or Detector)
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Component">
            <summary>
A component of an instrument corresponding to a source (i.e. ion source), an analyzer (i.e. mass analyzer), or a detector (i.e. ion detector)
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.Sample.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Sample.name">
            <summary>
an optional name for the sample description, mostly intended as a quick mnemonic.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.Sample.id">
            <summary>
a unique identifier across the samples with which to reference this sample description.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Sample">
            <summary>
Expansible description of the sample used to generate the dataset, named in sampleName.
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.FileDescription.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.FileDescription.contacts">
            <summary>
structure allowing the use of a controlled (cvParam) or uncontrolled vocabulary (userParam), or a reference to a predefined set of these in this mzML file (paramGroupRef)
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.FileDescription.sourceFiles">
            <summary>
list and descriptions of the source files this mzML document was generated or derived from.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.FileDescription.fileContent">
            <summary>
this summarizes the different types of spectra that can be expected in the file. This is expected to aid processing software in skipping files that do not contain appropriate spectrum types for it.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.FileDescription">
            <summary>
Information pertaining to the entire mzML file (i.e. not specific to any part of the data set) is stored here.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.ContactList">
            <summary>
A list of Contact references; implements the IList&lt;Contact&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SourceFileList">
            <summary>
A list of SourceFile references; implements the IList&lt;SourceFile&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.Contact">
            <summary>
Structure allowing the use of a controlled (cvParam) or uncontrolled vocabulary (userParam), or a reference to a predefined set of these in this mzML file (paramGroupRef).
</summary>
        </member>
        <member name="M:pwiz.CLI.msdata.SourceFile.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.SourceFile.location">
            <summary>
URI-formatted location where the file was retrieved.
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.SourceFile.name">
            <summary>
name of the source file, without reference to location (either URI or local path).
</summary>
        </member>
        <member name="P:pwiz.CLI.msdata.SourceFile.id">
            <summary>
an identifier for this file.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.SourceFile">
            <summary>
Description of the source file, including location and type.
</summary>
        </member>
        <member name="T:pwiz.CLI.msdata.FileContent">
            <summary>
This summarizes the different types of spectra that can be expected in the file. This is expected to aid processing software in skipping files that do not contain appropriate spectrum types for it.
</summary>
        </member>
        <member name="M:pwiz.msdata.id.abbreviate(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte)">
abbreviates a nativeID ("name1=value1 name2=value2" translates to "value1.value2")
</member>
        <member name="M:pwiz.msdata.id.translateNativeIDToScanNumber(pwiz.cv.CVID,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
translates a nativeID in the given nativeID format to a simple integer "scan number";
some nativeID formats cannot be translated from and will always return an empty string
currently supported formats: Thermo, Bruker/Agilent YEP, Bruker BAF, mzXML, MGF, and mzData
</member>
        <member name="M:pwiz.msdata.id.translateScanNumberToNativeID(pwiz.cv.CVID,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
translates a "scan number" to a string that is correct for the given nativeID format;
semantic validity requires that scanNumber be parseable as an integer;
some nativeID formats cannot be translated to and will always return an empty string
currently supported formats: Thermo, Bruker/Agilent YEP, Bruker BAF, mzXML, MGF, and mzData
</member>
        <member name="M:pwiz.msdata.id.getDefaultNativeIDFormat(pwiz.msdata.MSData!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns the nativeID format from the defaultSourceFilePtr if set,
or from sourceFilePtrs[0] if the list isn't empty,
or CVID_Unknown
</member>
        <member name="M:pwiz.msdata.id.value(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
convenience function to extract a named value from an id string
</member>
        <member name="M:pwiz.msdata.MSData.version">
returns the version of this mzML document;
for a document created programmatically, the version is the current release version of mzML;
for a document created from a file/stream, the version is the schema version read from the file/stream
</member>
        <member name="F:pwiz.msdata.MSData.run">
a run in mzML should correspond to a single, consecutive and coherent set of scans on an instrument.
</member>
        <member name="M:pwiz.msdata.MSData.allDataProcessingPtrs">
return dataProcessingPtrs augmented by the dataProcessingPtr() set in SpectrumList and/or ChromatogramList
</member>
        <member name="F:pwiz.msdata.MSData.dataProcessingPtrs">
list and descriptions of data processing applied to this data.
</member>
        <member name="F:pwiz.msdata.MSData.instrumentConfigurationPtrs">
list and descriptions of instrument configurations.
</member>
        <member name="F:pwiz.msdata.MSData.scanSettingsPtrs">
list with the descriptions of the acquisition settings applied prior to the start of data acquisition.
</member>
        <member name="F:pwiz.msdata.MSData.softwarePtrs">
list and descriptions of software used to acquire and/or process the data in this mzML file.
</member>
        <member name="F:pwiz.msdata.MSData.samplePtrs">
list and descriptions of samples.
</member>
        <member name="F:pwiz.msdata.MSData.paramGroupPtrs">
container for a list of referenceableParamGroups
</member>
        <member name="F:pwiz.msdata.MSData.fileDescription">
information pertaining to the entire mzML file (i.e. not specific to any part of the data set) is stored here.
</member>
        <member name="F:pwiz.msdata.MSData.id">
an optional id for the mzML document. It is recommended to use LSIDs when possible.
</member>
        <member name="F:pwiz.msdata.MSData.accession">
an optional accession number for the mzML document.
</member>
        <member name="T:pwiz.msdata.MSData">
This is the root element of ProteoWizard; it represents the mzML element, defined as:
intended to capture the use of a mass spectrometer, the data generated, and the initial processing of that data (to the level of the peak list).
</member>
        <member name="F:pwiz.msdata.Run.chromatogramListPtr">
all chromatograms for this run.
</member>
        <member name="F:pwiz.msdata.Run.spectrumListPtr">
all mass spectra and the acquisitions underlying them are described and attached here. Subsidiary data arrays are also both described and attached here.
</member>
        <member name="F:pwiz.msdata.Run.defaultSourceFilePtr">
default source file reference 
</member>
        <member name="F:pwiz.msdata.Run.startTimeStamp">
the optional start timestamp of the run, in UT.
</member>
        <member name="F:pwiz.msdata.Run.samplePtr">
this attribute MUST reference the 'id' of the appropriate sample.
</member>
        <member name="F:pwiz.msdata.Run.defaultInstrumentConfigurationPtr">
this attribute MUST reference the 'id' of the default instrument configuration. If a scan does not reference an instrument configuration, it implicitly refers to this configuration.
</member>
        <member name="F:pwiz.msdata.Run.id">
a unique identifier for this run.
</member>
        <member name="T:pwiz.msdata.Run">
A run in mzML should correspond to a single, consecutive and coherent set of scans on an instrument.
</member>
        <member name="T:pwiz.msdata.ChromatogramListSimple">
Simple writeable in-memory implementation of ChromatogramList.
Note:  This chromatogram() implementation returns internal ChromatogramPtrs.
</member>
        <member name="M:pwiz.msdata.ChromatogramList.dataProcessingPtr">
returns the data processing affecting spectra retrieved through this interface
- may return a null shared pointer
</member>
        <member name="M:pwiz.msdata.ChromatogramList.chromatogram(System.UInt32,System.Boolean)">
retrieve a chromatogram by index
- binary data arrays will be provided if (getBinaryData == true);
- client may assume the underlying Chromatogram* is valid 
</member>
        <member name="M:pwiz.msdata.ChromatogramList.find(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
find id in the chromatogram index (returns size() on failure)
</member>
        <member name="M:pwiz.msdata.ChromatogramList.chromatogramIdentity(System.UInt32)">
access to a chromatogram index
</member>
        <member name="M:pwiz.msdata.ChromatogramList.empty">
returns true iff (size() == 0) and (dataProcessingPtr.get() == NULL)
</member>
        <member name="M:pwiz.msdata.ChromatogramList.size">
returns the number of chromatograms 
</member>
        <member name="T:pwiz.msdata.SpectrumListSimple">
Simple writeable in-memory implementation of SpectrumList.
Note:  This spectrum() implementation returns internal SpectrumPtrs.
</member>
        <member name="M:pwiz.msdata.SpectrumList.dataProcessingPtr">
returns the data processing affecting spectra retrieved through this interface
- may return a null shared pointer
</member>
        <member name="M:pwiz.msdata.SpectrumList.spectrum(System.UInt32,System.Boolean)">
retrieve a spectrum by index
- binary data arrays will be provided if (getBinaryData == true);
- client may assume the underlying Spectrum* is valid 
</member>
        <member name="M:pwiz.msdata.SpectrumList.findSpotID(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
find all spectrum indexes with spotID (returns empty vector on failure)
</member>
        <member name="M:pwiz.msdata.SpectrumList.findNameValue(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
find all spectrum indexes with specified name/value pair 
</member>
        <member name="M:pwiz.msdata.SpectrumList.find(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
find id in the spectrum index (returns size() on failure)
</member>
        <member name="M:pwiz.msdata.SpectrumList.spectrumIdentity(System.UInt32)">
access to a spectrum index
</member>
        <member name="M:pwiz.msdata.SpectrumList.empty">
returns true iff (size() == 0) and (dataProcessingPtr.get() == NULL)
</member>
        <member name="M:pwiz.msdata.SpectrumList.size">
returns the number of spectra
</member>
        <member name="M:pwiz.msdata.Chromatogram.setTimeIntensityArrays(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.cv.CVID,pwiz.cv.CVID)">
set time and intensity arrays separately (they must be the same size)
</member>
        <member name="M:pwiz.msdata.Chromatogram.setTimeIntensityPairs(pwiz.msdata.TimeIntensityPair!System.Runtime.CompilerServices.IsConst*,System.UInt32,pwiz.cv.CVID,pwiz.cv.CVID)">
set binary data arrays
</member>
        <member name="M:pwiz.msdata.Chromatogram.setTimeIntensityPairs(std.vector&lt;pwiz.msdata.TimeIntensityPair&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.cv.CVID,pwiz.cv.CVID)">
set binary data arrays
</member>
        <member name="M:pwiz.msdata.Chromatogram.getIntensityArray">
get intensity array (may be null)
</member>
        <member name="M:pwiz.msdata.Chromatogram.getTimeArray">
get time array (may be null)
</member>
        <member name="M:pwiz.msdata.Chromatogram.getTimeIntensityPairs(pwiz.msdata.TimeIntensityPair*,System.UInt32)">
copy binary data arrays into time-intensity pair array
note: this overload is to allow client to allocate own buffer; the client
must determine the correct size beforehand, or an exception will be thrown
</member>
        <member name="M:pwiz.msdata.Chromatogram.getTimeIntensityPairs(std.vector&lt;pwiz.msdata.TimeIntensityPair&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
copy binary data arrays into time-intensity pair array
</member>
        <member name="M:pwiz.msdata.Chromatogram.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.Chromatogram.binaryDataArrayPtrs">
list of binary data arrays.
</member>
        <member name="F:pwiz.msdata.Chromatogram.product">
description of product ion information (i.e. Q3 settings)
</member>
        <member name="F:pwiz.msdata.Chromatogram.precursor">
description of precursor ion information (i.e. Q1 settings)
</member>
        <member name="F:pwiz.msdata.Chromatogram.dataProcessingPtr">
this attribute can optionally reference the 'id' of the appropriate dataProcessing.
</member>
        <member name="F:pwiz.msdata.Chromatogram.defaultArrayLength">
default length of binary data arrays contained in this element.
</member>
        <member name="T:pwiz.msdata.Chromatogram">
A single chromatogram.
</member>
        <member name="M:pwiz.msdata.Spectrum.setMZIntensityArrays(std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;System.Double&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.cv.CVID)">
set m/z and intensity arrays separately (they must be the same size)
</member>
        <member name="M:pwiz.msdata.Spectrum.setMZIntensityPairs(pwiz.msdata.MZIntensityPair!System.Runtime.CompilerServices.IsConst*,System.UInt32,pwiz.cv.CVID)">
set binary data arrays 
</member>
        <member name="M:pwiz.msdata.Spectrum.setMZIntensityPairs(std.vector&lt;pwiz.msdata.MZIntensityPair&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.cv.CVID)">
set binary data arrays 
</member>
        <member name="M:pwiz.msdata.Spectrum.getIntensityArray">
get intensity array (may be null)
</member>
        <member name="M:pwiz.msdata.Spectrum.getMZArray">
get m/z array (may be null)
</member>
        <member name="M:pwiz.msdata.Spectrum.getMZIntensityPairs(pwiz.msdata.MZIntensityPair*,System.UInt32)">
copy binary data arrays into m/z-intensity pair array
note: this overload is to allow client to allocate own buffer; the client
must determine the correct size beforehand, or an exception will be thrown
</member>
        <member name="M:pwiz.msdata.Spectrum.getMZIntensityPairs(std.vector&lt;pwiz.msdata.MZIntensityPair&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
copy binary data arrays into m/z-intensity pair array
</member>
        <member name="M:pwiz.msdata.Spectrum.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.Spectrum.binaryDataArrayPtrs">
list of binary data arrays.
</member>
        <member name="F:pwiz.msdata.Spectrum.products">
list and descriptions of product ion information
</member>
        <member name="F:pwiz.msdata.Spectrum.precursors">
list and descriptions of precursors to the spectrum currently being described.
</member>
        <member name="F:pwiz.msdata.Spectrum.scanList">
list of scans
</member>
        <member name="F:pwiz.msdata.Spectrum.sourceFilePtr">
this attribute can optionally reference the 'id' of the appropriate sourceFile.
</member>
        <member name="F:pwiz.msdata.Spectrum.dataProcessingPtr">
this attribute can optionally reference the 'id' of the appropriate dataProcessing.
</member>
        <member name="F:pwiz.msdata.Spectrum.defaultArrayLength">
default length of binary data arrays contained in this element.
</member>
        <member name="T:pwiz.msdata.Spectrum">
The structure that captures the generation of a peak list (including the underlying acquisitions)
</member>
        <member name="F:pwiz.msdata.ChromatogramIdentity.sourceFilePosition">
for file-based MSData implementations, this attribute may refer to the chromatogram's position in the file
</member>
        <member name="F:pwiz.msdata.ChromatogramIdentity.id">
a unique identifier for this chromatogram. It should be expected that external files may use this identifier together with the mzML filename or accession to reference a particular chromatogram.
</member>
        <member name="F:pwiz.msdata.ChromatogramIdentity.index">
the zero-based, consecutive index of the chromatogram in the ChromatogramList.
</member>
        <member name="T:pwiz.msdata.ChromatogramIdentity">
Identifying information for a chromatogram
</member>
        <member name="F:pwiz.msdata.SpectrumIdentity.sourceFilePosition">
for file-based MSData implementations, this attribute may refer to the spectrum's position in the file
</member>
        <member name="F:pwiz.msdata.SpectrumIdentity.spotID">
the identifier for the spot from which this spectrum was derived, if a MALDI or similar run.
</member>
        <member name="F:pwiz.msdata.SpectrumIdentity.id">
a unique identifier for this spectrum. It should be expected that external files may use this identifier together with the mzML filename or accession to reference a particular spectrum.
</member>
        <member name="F:pwiz.msdata.SpectrumIdentity.index">
the zero-based, consecutive index of the spectrum in the SpectrumList.
</member>
        <member name="T:pwiz.msdata.SpectrumIdentity">
Identifying information for a spectrum
</member>
        <member name="M:pwiz.msdata.TimeIntensityPair.op_Equality(pwiz.msdata.TimeIntensityPair!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff time and intensity are pairwise equal
</member>
        <member name="T:pwiz.msdata.TimeIntensityPair">
The data point type of a chromatogram.
</member>
        <member name="M:pwiz.msdata.MZIntensityPair.op_Equality(pwiz.msdata.MZIntensityPair!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff mz and intensity are pairwise equal
</member>
        <member name="T:pwiz.msdata.MZIntensityPair">
The data point type of a mass spectrum.
</member>
        <member name="M:pwiz.msdata.BinaryDataArray.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.BinaryDataArray.data">
the binary data.
</member>
        <member name="F:pwiz.msdata.BinaryDataArray.dataProcessingPtr">
this optional attribute may reference the 'id' attribute of the appropriate dataProcessing.
</member>
        <member name="T:pwiz.msdata.BinaryDataArray">
The structure into which encoded binary data goes. Byte ordering is always little endian (Intel style). Computers using a different endian style MUST convert to/from little endian when writing/reading mzML
</member>
        <member name="T:pwiz.msdata.ScanList">
List and descriptions of scans.
</member>
        <member name="M:pwiz.msdata.Scan.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.Scan.scanWindows">
container for a list of select windows.
</member>
        <member name="F:pwiz.msdata.Scan.instrumentConfigurationPtr">
this attribute MUST reference the 'id' attribute of the appropriate instrument configuration.
</member>
        <member name="F:pwiz.msdata.Scan.spectrumID">
for scans that are local to this document, this attribute can be used to reference the 'id' attribute of the spectrum corresponding to the scan.
note: this attribute is mutually exclusive with externalSpectrumID; i.e. use one or the other but not both
</member>
        <member name="F:pwiz.msdata.Scan.externalSpectrumID">
for scans that are external to this document, this string must correspond to the 'id' attribute of a spectrum in the external document indicated by 'sourceFileRef'.
note: this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both
</member>
        <member name="F:pwiz.msdata.Scan.sourceFilePtr">
if this attribute is set, it must reference the 'id' attribute of a sourceFile representing the external document containing the spectrum referred to by 'externalSpectrumID'.
note: this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both
</member>
        <member name="T:pwiz.msdata.Scan">
Scan or acquisition from original raw file used to create this peak list, as specified in sourceFile.
</member>
        <member name="T:pwiz.msdata.ScanWindow">
TODO
</member>
        <member name="M:pwiz.msdata.Product.op_Equality(pwiz.msdata.Product!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff this product's isolation window is equal to that product's
</member>
        <member name="M:pwiz.msdata.Product.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.Product.isolationWindow">
this element captures the isolation (or 'selection') window configured to isolate one or more precursors.
</member>
        <member name="T:pwiz.msdata.Product">
product ion information
</member>
        <member name="M:pwiz.msdata.Precursor.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.Precursor.activation">
the type and energy level used for activation.
</member>
        <member name="F:pwiz.msdata.Precursor.selectedIons">
this list of precursor ions that were selected.
</member>
        <member name="F:pwiz.msdata.Precursor.isolationWindow">
this element captures the isolation (or 'selection') window configured to isolate one or more precursors.
</member>
        <member name="F:pwiz.msdata.Precursor.spectrumID">
reference to the id attribute of the spectrum from which the precursor was selected.
note: this attribute is mutually exclusive with externalSpectrumID; i.e. use one or the other but not both
</member>
        <member name="F:pwiz.msdata.Precursor.externalSpectrumID">
for precursor spectra that are external to this document, this string MUST correspond to the 'id' attribute of a spectrum in the external document indicated by 'sourceFileRef'.
note: this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both
</member>
        <member name="F:pwiz.msdata.Precursor.sourceFilePtr">
for precursor spectra that are external to this document, this attribute MUST reference the 'id' attribute of a sourceFile representing that external document.
note: this attribute is mutually exclusive with spectrumID; i.e. use one or the other but not both
</member>
        <member name="T:pwiz.msdata.Precursor">
The method of precursor ion selection and activation
</member>
        <member name="T:pwiz.msdata.Activation">
The type and energy level used for activation.
</member>
        <member name="T:pwiz.msdata.SelectedIon">
TODO
</member>
        <member name="T:pwiz.msdata.IsolationWindow">
This element captures the isolation (or 'selection') window configured to isolate one or more precursors.
</member>
        <member name="M:pwiz.msdata.DataProcessing.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.DataProcessing.processingMethods">
description of the default peak processing method(s). This element describes the base method used in the generation of a particular mzML file. Variable methods should be described in the appropriate acquisition section - if no acquisition-specific details are found, then this information serves as the default.
</member>
        <member name="F:pwiz.msdata.DataProcessing.id">
a unique identifier for this data processing that is unique across all DataProcessingTypes.
</member>
        <member name="T:pwiz.msdata.DataProcessing">
Description of the way in which a particular software was used.
</member>
        <member name="M:pwiz.msdata.ProcessingMethod.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.ProcessingMethod.softwarePtr">
this attribute MUST reference the 'id' of the appropriate SoftwareType.
</member>
        <member name="F:pwiz.msdata.ProcessingMethod.order">
this attributes allows a series of consecutive steps to be placed in the correct order.
</member>
        <member name="T:pwiz.msdata.ProcessingMethod">
Description of the default peak processing method. This element describes the base method used in the generation of a particular mzML file. Variable methods should be described in the appropriate acquisition section - if no acquisition-specific details are found, then this information serves as the default.
</member>
        <member name="M:pwiz.msdata.InstrumentConfiguration.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.InstrumentConfiguration.scanSettingsPtr">
reference to a scan settings element defining global scan settings used by this configuration
</member>
        <member name="F:pwiz.msdata.InstrumentConfiguration.softwarePtr">
reference to a previously defined software element.
</member>
        <member name="F:pwiz.msdata.InstrumentConfiguration.componentList">
list with the different components used in the mass spectrometer. At least one source, one mass analyzer and one detector need to be specified.
</member>
        <member name="F:pwiz.msdata.InstrumentConfiguration.id">
an identifier for this instrument configuration.
</member>
        <member name="T:pwiz.msdata.InstrumentConfiguration">
Description of a particular hardware configuration of a mass spectrometer. Each configuration MUST have one (and only one) of the three different components used for an analysis. For hybrid instruments, such as an LTQ-FT, there MUST be one configuration for each permutation of the components that is used in the document. For software configuration, reference the appropriate ScanSettings element.
</member>
        <member name="M:pwiz.msdata.ScanSettings.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.ScanSettings.targets">
target list (or 'inclusion list') configured prior to the run.
</member>
        <member name="F:pwiz.msdata.ScanSettings.sourceFilePtrs">
container for a list of source file references.
</member>
        <member name="F:pwiz.msdata.ScanSettings.id">
a unique identifier for this acquisition setting.
</member>
        <member name="T:pwiz.msdata.ScanSettings">
Description of the acquisition settings of the instrument prior to the start of the run.
</member>
        <member name="T:pwiz.msdata.Target">
TODO
</member>
        <member name="M:pwiz.msdata.Software.empty">
returns true iff all members are empty or null
</member>
        <member name="F:pwiz.msdata.Software.version">
the software version.
</member>
        <member name="F:pwiz.msdata.Software.id">
an identifier for this software that is unique across all SoftwareTypes.
</member>
        <member name="T:pwiz.msdata.Software">
A piece of software.
</member>
        <member name="T:pwiz.msdata.ComponentList">
List with the different components used in the mass spectrometer. At least one source, one mass analyzer and one detector need to be specified.
</member>
        <member name="M:pwiz.msdata.Component.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.Component.order">
this attribute MUST be used to indicate the order in which the components are encountered from source to detector (e.g., in a Q-TOF, the quadrupole would have the lower order number, and the TOF the higher number of the two).
</member>
        <member name="F:pwiz.msdata.Component.type">
the type of component (Source, Analyzer, or Detector)
</member>
        <member name="T:pwiz.msdata.Component">
A component of an instrument corresponding to a source (i.e. ion source), an analyzer (i.e. mass analyzer), or a detector (i.e. ion detector)
</member>
        <member name="M:pwiz.msdata.Sample.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.Sample.name">
an optional name for the sample description, mostly intended as a quick mnemonic.
</member>
        <member name="F:pwiz.msdata.Sample.id">
a unique identifier across the samples with which to reference this sample description.
</member>
        <member name="T:pwiz.msdata.Sample">
Expansible description of the sample used to generate the dataset, named in sampleName.
</member>
        <member name="M:pwiz.msdata.FileDescription.empty">
returns true iff all members are empty or null
</member>
        <member name="F:pwiz.msdata.FileDescription.contacts">
structure allowing the use of a controlled (cvParam) or uncontrolled vocabulary (userParam), or a reference to a predefined set of these in this mzML file (paramGroupRef)
</member>
        <member name="F:pwiz.msdata.FileDescription.sourceFilePtrs">
list and descriptions of the source files this mzML document was generated or derived from.
</member>
        <member name="F:pwiz.msdata.FileDescription.fileContent">
this summarizes the different types of spectra that can be expected in the file. This is expected to aid processing software in skipping files that do not contain appropriate spectrum types for it.
</member>
        <member name="T:pwiz.msdata.FileDescription">
Information pertaining to the entire mzML file (i.e. not specific to any part of the data set) is stored here.
</member>
        <member name="T:pwiz.msdata.Contact">
Structure allowing the use of a controlled (cvParam) or uncontrolled vocabulary (userParam), or a reference to a predefined set of these in this mzML file (paramGroupRef).
</member>
        <member name="D:pwiz.msdata.SourceFilePtr">
Description of the source file, including location and type.
</member>
        <member name="M:pwiz.msdata.SourceFile.empty">
returns true iff the element contains no params and all members are empty or null
</member>
        <member name="F:pwiz.msdata.SourceFile.location">
URI-formatted location where the file was retrieved.
</member>
        <member name="F:pwiz.msdata.SourceFile.name">
name of the source file, without reference to location (either URI or local path).
</member>
        <member name="F:pwiz.msdata.SourceFile.id">
an identifier for this file.
</member>
        <member name="T:pwiz.msdata.SourceFile">
Description of the source file, including location and type.
</member>
        <member name="T:pwiz.msdata.FileContent">
This summarizes the different types of spectra that can be expected in the file. This is expected to aid processing software in skipping files that do not contain appropriate spectrum types for it.
</member>
        <member name="T:pwiz.proteome.DefaultReaderList">
default Reader list
</member>
        <member name="M:pwiz.CLI.proteome.ProteomeDataFile.write(System.String,pwiz.CLI.proteome.ProteomeDataFile.WriteConfig)">
            <summary>
member write function with the specified configuration
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteomeDataFile.write(System.String)">
            <summary>
member write function with the default configuration (mzML, 64-bit, no compression)
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteomeDataFile.write(pwiz.CLI.proteome.ProteomeData,System.String,pwiz.CLI.proteome.ProteomeDataFile.WriteConfig)">
            <summary>
static write function for any ProteomeData object with the specified configuration
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteomeDataFile.write(pwiz.CLI.proteome.ProteomeData,System.String)">
            <summary>
static write function for any ProteomeData object with the default configuration (mzML, 64-bit, no compression)
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ProteomeDataFile.WriteConfig">
            <summary>
configuration options for write()
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ProteomeDataFile.Format">
            <summary>
supported data formats for write()
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteomeDataFile.#ctor(System.String,pwiz.CLI.proteome.Reader)">
            <summary>
constructs ProteomeData object backed by file using the specified reader
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteomeDataFile.#ctor(System.String,System.Boolean)">
            <summary>
constructs ProteomeData object backed by file using the default reader list
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteomeDataFile.#ctor(System.String)">
            <summary>
constructs ProteomeData object backed by file using the default reader list (without indexing)
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ProteomeDataFile">
            <summary>
ProteomeData object plus file I/O
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ReaderList.read(System.String,System.String,pwiz.CLI.proteome.ProteomeData)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.proteome.ReaderList.read(System.String,pwiz.CLI.proteome.ProteomeData)">
delegates to first child that accepts
</member>
        <member name="M:pwiz.CLI.proteome.ReaderList.identify(System.String,System.String)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.CLI.proteome.ReaderList.identify(System.String)">
returns child name iff some child identifies, else empty string
</member>
        <member name="T:pwiz.CLI.proteome.ReaderList">
Reader container (composite pattern).

The template get&lt;reader_type&gt;() gives access to child Readers by type, to facilitate
Reader-specific configuration at runtime.

</member>
        <member name="M:pwiz.CLI.proteome.Reader.read(System.String,System.String,pwiz.CLI.proteome.ProteomeData)">
fill in the ProteomeData structure
</member>
        <member name="M:pwiz.CLI.proteome.Reader.identify(System.String,System.String)">
return file type iff Reader recognizes the file, else empty;
note: for formats requiring a 3rd party DLL identify() should
return non-empty if it recognized the format, even though reading
may fail if the 3rd party DLL isn't actually present
Reader may filter based on URI and/or contents of the file
</member>
        <member name="M:pwiz.CLI.proteome.Reader.accept(System.String,System.String)">
return true iff Reader can handle the file;
Reader may filter based on filename and/or head of the file
</member>
        <member name="T:pwiz.CLI.proteome.Reader">
interface for file readers
</member>
        <member name="M:pwiz.proteome.ProteomeDataFile.write(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.ProteomeDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.util.IterationListenerRegistry!System.Runtime.CompilerServices.IsConst*)">
member write function 
</member>
        <member name="M:pwiz.proteome.ProteomeDataFile.write(pwiz.proteome.ProteomeData!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.ProteomeDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.util.IterationListenerRegistry!System.Runtime.CompilerServices.IsConst*)">
static write function for any ProteomeData object;
iterationListenerRegistry may be used for progress updates
</member>
        <member name="T:pwiz.proteome.ProteomeDataFile.WriteConfig">
configuration for write()
</member>
        <member name="T:pwiz.proteome.ProteomeDataFile.Format">
data format for write()
</member>
        <member name="M:pwiz.proteome.ProteomeDataFile.#ctor(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Reader!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
constructs ProteomeData object backed by file using the specified reader
</member>
        <member name="M:pwiz.proteome.ProteomeDataFile.#ctor(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Boolean)">
constructs ProteomeData object backed by file;
indexed==true -&gt; uses DefaultReaderList with indexing
</member>
        <member name="T:pwiz.proteome.ProteomeDataFile">
ProteomeData object plus file I/O
</member>
        <member name="T:pwiz.util.IterationListenerRegistry">
handles registration of IterationListeners and broadcast of update messages
</member>
        <member name="T:pwiz.util.IterationListener">
interface to be implemented by clients who want progress callbacks
</member>
        <member name="M:pwiz.proteome.op_Addition(boost.shared_ptr&lt;pwiz.proteome.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;pwiz.proteome.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a list containing the lhs and rhs as readers
</member>
        <member name="M:pwiz.proteome.ReaderList.op_Addition(boost.shared_ptr&lt;pwiz.proteome.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a concatenated list of all the Readers from the lhs and rhs operands
</member>
        <member name="M:pwiz.proteome.ReaderList.op_Addition(pwiz.proteome.ReaderList!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a concatenated list of all the Readers from the lhs and rhs operands
</member>
        <member name="M:pwiz.proteome.ReaderList.op_AdditionAssignment(boost.shared_ptr&lt;pwiz.proteome.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
appends the rhs Reader to the list
</member>
        <member name="M:pwiz.proteome.ReaderList.op_AdditionAssignment(pwiz.proteome.ReaderList!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
appends all of the rhs operand's Readers to the list
</member>
        <member name="M:pwiz.proteome.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;std.basic_istream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;&gt;,pwiz.proteome.ProteomeData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
delegates to first child that identifies
</member>
        <member name="M:pwiz.proteome.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.ProteomeData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
delegates to first child that identifies
</member>
        <member name="M:pwiz.proteome.ReaderList.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;std.basic_istream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;&gt;)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.proteome.ReaderList.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.proteome.Reader.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;std.basic_istream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;&gt;,pwiz.proteome.ProteomeData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
fill in the ProteomeData structure from a shared URI stream
</member>
        <member name="M:pwiz.proteome.Reader.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.ProteomeData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
fill in the ProteomeData structure from a new URI stream
</member>
        <member name="M:pwiz.proteome.Reader.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;std.basic_istream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;&gt;)">
return file type iff Reader recognizes the file, else empty;
note: for formats requiring a 3rd party DLL identify() should
return non-empty if it recognized the format, even though reading
may fail if the 3rd party DLL isn't actually present
Reader may filter based on URI and/or contents of the file
</member>
        <member name="M:pwiz.proteome.Reader.accept(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;std.basic_istream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;&gt;)">
return true iff Reader recognizes the file as one it should handle
that's not to say one it CAN handle, necessarily, as in Thermo on linux,
see comment for identify() below
</member>
        <member name="T:pwiz.proteome.Reader">
interface for file readers
</member>
        <member name="T:pwiz.CLI.proteome.ProteinListSimple">
            <summary>
Simple writeable in-memory implementation of ProteinList.
<para>- protein() returns internal Protein references.</para></summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Proteins">
            <summary>
A list of Protein references; implements the IList&lt;Protein&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteinList.protein(System.Int32,System.Boolean)">
            <summary>
retrieve a protein by index
<para>- amino acid sequence will be available if (getSequence == true)</para><para>- client may assume the underlying Protein^ is valid</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteinList.protein(System.Int32)">
            <summary>
retrieve a protein by index with amino acid sequence
<para>- client may assume the underlying Protein^ is valid</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteinList.find(System.String)">
            <summary>
find id in the protein index (returns size() on failure)
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteinList.empty">
            <summary>
returns true iff (size() == 0)
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ProteinList.size">
            <summary>
returns the number of proteins
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ProteinList">
            <summary>
TODO: ProteinList comment.
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.IndexList">
            <summary>
A list of protein indexes; implements the IList&lt;int&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Protein">
            <summary>
TODO: Protein comment.
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Digestion.Enumerator">
            <summary>
provides forward-only, read-only iteration to enumerate peptides
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.find_first(System.String,System.Int32)">
            <summary>
beginning at the offset hint, returns the first instance of the given peptide in the polypeptide under digestion;
note: the filters set in Digestion::Config are respected!
</summary>
            <throws>ArgumentException if no instance of the peptide is found</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.find_first(pwiz.CLI.proteome.Peptide,System.Int32)">
            <summary>
beginning at the offset hint, returns the first instance of the given peptide in the polypeptide under digestion;
note: the filters set in Digestion::Config are respected!
</summary>
            <throws>ArgumentException if no instance of the peptide is found</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.find_first(System.String)">
            <summary>
returns the first instance of the given peptide in the polypeptide under digestion;
note: the filters set in Digestion::Config are respected!
</summary>
            <throws>ArgumentException if no instance of the peptide is found</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.find_first(pwiz.CLI.proteome.Peptide)">
            <summary>
returns the first instance of the given peptide in the polypeptide under digestion;
note: the filters set in Digestion::Config are respected!
</summary>
            <throws>ArgumentException if no instance of the peptide is found</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.find_all(System.String)">
            <summary>
returns all instances of the given peptide in the polypeptide under digestion;
note: the filters set in Digestion::Config are respected!
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.find_all(pwiz.CLI.proteome.Peptide)">
            <summary>
returns all instances of the given peptide in the polypeptide under digestion;
note: the filters set in Digestion::Config are respected!
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.#ctor(pwiz.CLI.proteome.Peptide,System.String,pwiz.CLI.proteome.Digestion.Config)">
            <summary>
specifies digestion occurs by a user-specified, zero-width Perl regular expression 
example: "(?&lt;=K)" means "cleaves after K"
example: "((?&lt;=D))|((?=D))" means "cleaves before or after D"
example: "(?=[DE])" means "cleaves before D or E"
example: "(?&lt;=[FYWLKR])(?!P)" means "cleaves after any single residue from FYWLKR except when it is followed by P"
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.#ctor(pwiz.CLI.proteome.Peptide,System.String)">
            <summary>
specifies digestion occurs by a user-specified, zero-width Perl regular expression 
example: "(?&lt;=K)" means "cleaves after K"
example: "((?&lt;=D))|((?=D))" means "cleaves before or after D"
example: "(?=[DE])" means "cleaves before D or E"
example: "(?&lt;=[FYWLKR])(?!P)" means "cleaves after any single residue from FYWLKR except when it is followed by P"
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.#ctor(pwiz.CLI.proteome.Peptide,System.Collections.Generic.IEnumerable`1{pwiz.CLI.cv.CVID},pwiz.CLI.proteome.Digestion.Config)">
            <summary>
specifies digestion occurs by a combination of commonly used cleavage agents
</summary>
            <throws>ArgumentException if any of cleavageAgents are not in getCleavageAgents()</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.#ctor(pwiz.CLI.proteome.Peptide,System.Collections.Generic.IEnumerable`1{pwiz.CLI.cv.CVID})">
            <summary>
specifies digestion occurs by a combination of commonly used cleavage agents
</summary>
            <throws>ArgumentException if any of cleavageAgents are not in getCleavageAgents()</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.#ctor(pwiz.CLI.proteome.Peptide,pwiz.CLI.cv.CVID,pwiz.CLI.proteome.Digestion.Config)">
            <summary>
specifies digestion occurs by a commonly used cleavage agent
</summary>
            <throws>ArgumentException if cleavageAgent is not in getCleavageAgents()</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.#ctor(pwiz.CLI.proteome.Peptide,pwiz.CLI.cv.CVID)">
            <summary>
specifies digestion occurs by a commonly used cleavage agent
</summary>
            <throws>ArgumentException if cleavageAgent is not in getCleavageAgents()</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.getCleavageAgentRegex(pwiz.CLI.cv.CVID)">
            <summary>
returns the Perl regular expression defining the places in a
polypeptide or protein that the agent will cut.
</summary>
            <throws>ArgumentException if the cleavageAgent is not in getCleavageAgents()</throws>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.getCleavageAgentByName(System.String)">
            <summary>
returns the cvid of the specified cleavage agent using a case-insensitive search,
or CVID_Unknown if the agent is not found
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.getCleavageAgentNames">
            <summary>
returns the names of the set of predefined cleavage agents defined in the PSI-MS CV
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.getCleavageAgents">
            <summary>
returns the set of predefined cleavage agents defined in the PSI-MS CV
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Digestion.Config.#ctor">
            <summary>
creates the default config:
* 100000 missed cleavages
* no minimum length
* 100000 maximum length
* full terminal specificity
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Digestion.Config">
            <summary>
sets constraints for valid peptides produced by iterating the digestion
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Digestion.Specificity">
            <summary>
sets the number of peptide termini that must match to a digestion motif
note: castable to int; i.e. non=0, semi=1, fully=2
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Digestion">
            <summary>
enumerates the peptides from proteolytic digestion of a polypeptide or protein;
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.DigestedPeptide.CTerminusSuffix">
            <summary>
returns residue following digestion site
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.DigestedPeptide.NTerminusPrefix">
            <summary>
returns residue preceding digestion site
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.DigestedPeptide.CTerminusIsSpecific">
            <summary>
returns true iff the C terminus matched the digestion rules
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.DigestedPeptide.NTerminusIsSpecific">
            <summary>
returns true iff the N terminus matched the digestion rules
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.DigestedPeptide.specificTermini">
            <summary>
returns the number of termini that matched to the digestion rules
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.DigestedPeptide.missedCleavages">
            <summary>
returns the number of missed cleavage sites in the peptide
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.DigestedPeptide.offset">
            <summary>
returns the offset of the N terminus of the peptide
in the polypeptide from which it was digested
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.DigestedPeptide">
            <summary>
peptide subclass that contains extra metadata provided by digestion
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ModificationMap.CTerminus">
            <summary>
returns the index for specifying C terminal mods
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ModificationMap.NTerminus">
            <summary>
returns the index for specifying N terminal mods
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ModificationMap">
            <summary>
maps peptide/protein sequence indexes (0-based) to a modification list
<para>- ModificationMap.NTerminus() returns the index for specifying N terminal mods</para><para>- ModificationMap.CTerminus() returns the index for specifying C terminal mods</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ModificationList.averageDeltaMass">
            <summary>
returns the sum of the average delta masses of all modifications in the list
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.ModificationList.monoisotopicDeltaMass">
            <summary>
returns the sum of the monoisotopic delta masses of all modifications in the list
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ModificationList">
represents a list of modifications on a single amino acid
</member>
        <member name="M:pwiz.CLI.proteome.Modification.averageDeltaMass">
            <summary>
returns the average delta mass of the modification
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Modification.monoisotopicDeltaMass">
            <summary>
returns the monoisotopic delta mass of the modification
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Modification.formula">
            <summary>
returns the difference formula;
<para>- note: throws runtime_error if hasFormula() = false</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Modification.hasFormula">
            <summary>
returns true iff the mod was constructed with formula
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Modification">
            <summary>
represents a post-translational modification (PTM)
<para>- note: modification formula or masses must be provided at instantiation</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Fragmentation.zRadical(System.Int32,System.Int32)">
            <summary>
returns the z radical ion of length &lt;length&gt;
<para>- if &lt;charge&gt; = 0: returns neutral mass</para><para>- if &lt;charge&gt; &gt; 0: returns charged m/z</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Fragmentation.z(System.Int32,System.Int32)">
            <summary>
returns the z ion of length &lt;length&gt;
<para>- if &lt;charge&gt; = 0: returns neutral mass</para><para>- if &lt;charge&gt; &gt; 0: returns charged m/z</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Fragmentation.y(System.Int32,System.Int32)">
            <summary>
returns the y ion of length &lt;length&gt;
<para>- if &lt;charge&gt; = 0: returns neutral mass</para><para>- if &lt;charge&gt; &gt; 0: returns charged m/z</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Fragmentation.x(System.Int32,System.Int32)">
            <summary>
returns the x ion of length &lt;length&gt;
<para>- if &lt;charge&gt; = 0: returns neutral mass</para><para>- if &lt;charge&gt; &gt; 0: returns charged m/z</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Fragmentation.c(System.Int32,System.Int32)">
            <summary>
returns the c ion of length &lt;length&gt;
<para>- if &lt;charge&gt; = 0: returns neutral mass</para><para>- if &lt;charge&gt; &gt; 0: returns charged m/z</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Fragmentation.b(System.Int32,System.Int32)">
            <summary>
returns the b ion of length &lt;length&gt;
<para>- if &lt;charge&gt; = 0: returns neutral mass</para><para>- if &lt;charge&gt; &gt; 0: returns charged m/z</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Fragmentation.a(System.Int32,System.Int32)">
            <summary>
returns the a ion of length &lt;length&gt;
<para>- if &lt;charge&gt; = 0: returns neutral mass</para><para>- if &lt;charge&gt; &gt; 0: returns charged m/z</para></summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Fragmentation">
            <summary>
provides fragment ion masses for a peptide
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.fragmentation(System.Boolean,System.Boolean)">
            <summary>
returns a fragmentation model for the peptide;
<para>- fragment masses can calculated as mono/avg and as modified/unmodified</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.modifications">
            <summary>
the map of sequence offsets (0-based) to modifications;
<para>- modifications can be added or removed from the peptide with this map</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.molecularWeight(System.Boolean,System.Int32)">
            <summary>
                <para>- if charge = 0: returns neutral mass</para>
                <para>- if charge &gt; 0: returns charged m/z</para>
                <para>- if modified = false: returns the molecular weight of sequence()+water</para>
                <para>- if modified = true: returns the molecular weight of sequence()+modifications()+water</para>
            </summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.molecularWeight(System.Int32)">
            <summary>
returns the molecular weight of the modified peptide at charge &lt;charge&gt;
<para>- if charge = 0: returns the molecular weight of the modified peptide at neutral charge (sequence()+modifications()+water)</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.molecularWeight(System.Boolean)">
            <summary>
returns the molecular weight of the (possibly modified) peptide at neutral charge
<para>- if modified = false: returns the molecular weight of sequence()+water</para><para>- if modified = true: returns the molecular weight of sequence()+modifications()+water</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.molecularWeight">
            <summary>
returns the molecular weight of the modified peptide at neutral charge (sequence()+modifications()+water)
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.monoisotopicMass(System.Boolean,System.Int32)">
            <summary>
                <para>if charge = 0: returns neutral mass</para>
                <para>if charge &gt; 0: returns charged m/z</para>
                <para>if modified = false: returns the monoisotopic mass of sequence()+water</para>
                <para>if modified = true: returns the monoisotopic mass of sequence()+modifications()+water</para>
            </summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.monoisotopicMass(System.Int32)">
            <summary>
returns the monoisotopic mass of the modified peptide at charge &lt;charge&gt;
<para>- if charge = 0: returns the monoisotopic mass of the modified peptide at neutral charge (sequence()+modifications()+water)</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.monoisotopicMass(System.Boolean)">
            <summary>
returns the monoisotopic mass of the (possibly modified) peptide at neutral charge
<para>- if modified = false: returns the monoisotopic mass of sequence()+water</para><para>- if modified = true: returns the monoisotopic mass of sequence()+modifications()+water</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.monoisotopicMass">
            <summary>
returns the monoisotopic mass of the modified peptide at neutral charge (sequence()+modifications()+water)
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.formula(System.Boolean)">
            <summary>
returns the (possibly modified) chemical composition of the peptide
<para>- if modified = false: returns the composition formula of sequence()+water</para><para>- if modified = true: returns the composition formula of sequence()+modifications()+water</para><para>- note: throws an exception if modified = true and any modification has only mass information</para></summary>
        </member>
        <member name="M:pwiz.CLI.proteome.Peptide.formula">
            <summary>
returns the unmodified chemical composition of the peptide (sequence()+water)
</summary>
        </member>
        <member name="P:pwiz.CLI.proteome.Peptide.sequence">
            <summary>
returns the sequence of amino acids using standard single character symbols
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Peptide">
            <summary>
represents a peptide (sequence of amino acids)
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ModificationDelimiter">
            <summary>
the delimiter expected to signify an inline modification
</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.ModificationParsing">
            <summary>
settings to enable parsing of inline modifications in peptide sequences
</summary>
        </member>
        <member name="M:pwiz.CLI.proteome.AminoAcidInfo.record(System.Char)">
            <summary>returns the amino acid's Record by symbol (may throw) </summary>
        </member>
        <member name="M:pwiz.CLI.proteome.AminoAcidInfo.record(pwiz.CLI.proteome.AminoAcid)">
            <summary>returns the amino acid's Record by type</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.AminoAcidInfo.Record">
            <summary>struct for holding data for a single amino acid</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.AminoAcidInfo">
            <summary>scope for accessing information about the amino acids</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.AminoAcid">
            <summary>enumeration of the amino acids</summary>
        </member>
        <member name="T:pwiz.CLI.proteome.Version">
            <summary>
version information for the proteome namespace
</summary>
        </member>
        <member name="M:pwiz.CLI.chemistry.Formula.op_Inequality(pwiz.CLI.chemistry.Formula,pwiz.CLI.chemistry.Formula)">
            <summary>formulas are equal iff their elemental compositions are equal</summary>
        </member>
        <member name="M:pwiz.CLI.chemistry.Formula.op_Equality(pwiz.CLI.chemistry.Formula,pwiz.CLI.chemistry.Formula)">
            <summary>formulas are equal iff their elemental compositions are equal</summary>
        </member>
        <member name="M:pwiz.CLI.chemistry.Formula.data">
            <summary>direct access to the map, for iteration</summary>
        </member>
        <member name="P:pwiz.CLI.chemistry.Formula.Item(pwiz.CLI.chemistry.Element)">
            <summary>access to the Element's count in the formula</summary>
        </member>
        <member name="M:pwiz.CLI.chemistry.Formula.#ctor(System.String)">
            <summary>formula string given by symbol/count pairs, e.g. water: "H2 O1" (whitespace optional)</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.Formula">
            <summary>class to represent a chemical formula</summary>
        </member>
        <member name="M:pwiz.CLI.chemistry.ElementInfo.record(pwiz.CLI.chemistry.Element)">
            <summary>retrieve the record for an element</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.ElementInfo.Record">
            <summary>struct for holding data for a single chemical element</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.ElementInfo">
            <summary>scope for obtaining information about elements</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.Element">
            <summary>enumeration of the elements</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.MassDistribution">
            <summary>struct for holding isotope distribution</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.MassAbundance">
            <summary>struct for holding isotope information</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.Electron">
            <summary>the mass of an electron in unified atomic mass units</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.Neutron">
            <summary>the mass of a neutron in unified atomic mass units</summary>
        </member>
        <member name="T:pwiz.CLI.chemistry.Proton">
            <summary>the mass of a proton in unified atomic mass units</summary>
        </member>
        <member name="T:pwiz.proteome.Digestion.const_iterator">
provides forward-only, read-only iteration to enumerate peptides
</member>
        <member name="T:pwiz.proteome.Digestion.Motif">
represents a rule to test whether a peptide bond is a valid digestion site
</member>
        <member name="M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;pwiz.proteome.Digestion.Motif&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
specifies digestion occurs by a combination of user-specified motifs
</member>
        <member name="M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Motif!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
specifies digestion occurs by a user-specified motif
</member>
        <member name="M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;pwiz.proteome.ProteolyticEnzyme&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
specifies digestion occurs by a combination of commonly used enzymes
</member>
        <member name="M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.ProteolyticEnzyme,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
specifies digestion occurs by a commonly used enzyme
</member>
        <member name="M:pwiz.proteome.Digestion.find_first(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.UInt32)">
returns the first instance of the given peptide in the polypeptide under digestion;
if offsetHint is provided, the search will begin at that offset;
throws runtime_error if no instance of the peptide is found;
note: the filters set in Digestion::Config are respected!
</member>
        <member name="M:pwiz.proteome.Digestion.find_all(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns all instances of the given peptide in the polypeptide under digestion;
note: the filters set in Digestion::Config are respected!
</member>
        <member name="M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;pwiz.cv.CVID&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
specifies digestion occurs by a combination of commonly used cleavage agents
</member>
        <member name="M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.cv.CVID,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
specifies digestion occurs by a commonly used cleavage agent
</member>
        <member name="M:pwiz.proteome.Digestion.getCleavageAgentRegex(pwiz.cv.CVID)">
returns the Perl regular expression defining the places in a
polypeptide or protein that the agent will cut.
</member>
        <member name="M:pwiz.proteome.Digestion.getCleavageAgentByName(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns the cvid of the specified cleavage agent using a case-insensitive search,
or CVID_Unknown if the agent is not found
</member>
        <member name="M:pwiz.proteome.Digestion.getCleavageAgentNames">
returns the names of the set of predefined cleavage agents defined in the PSI-MS CV
</member>
        <member name="M:pwiz.proteome.Digestion.getCleavageAgents">
returns the set of predefined cleavage agents defined in the PSI-MS CV
</member>
        <member name="T:pwiz.proteome.Digestion.Config">
sets constraints for valid peptides produced by iterating the digestion
</member>
        <member name="T:pwiz.proteome.Digestion.Specificity">
sets the number of peptide termini that must match to a digestion motif
note: castable to int; i.e. non=0, semi=1, fully=2
</member>
        <member name="T:pwiz.proteome.Digestion">
enumerates the peptides from proteolytic digestion of a polypeptide or protein;
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.op_Equality(pwiz.proteome.DigestedPeptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff peptide sequences, masses, and all digestion metadata are equal
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.CTerminusSuffix">
returns residue following digestion site
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.NTerminusPrefix">
returns residue preceding digestion site
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.CTerminusIsSpecific">
returns true iff the C terminus matched the digestion rules
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.NTerminusIsSpecific">
returns true iff the N terminus matched the digestion rules
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.specificTermini">
returns the number of termini that matched to the digestion rules
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.missedCleavages">
returns the number of missed cleavage sites in the peptide
</member>
        <member name="M:pwiz.proteome.DigestedPeptide.offset">
returns the zero-based offset of the N terminus of the peptide
in the polypeptide from which it was digested
</member>
        <member name="T:pwiz.proteome.DigestedPeptide">
peptide subclass that contains extra metadata provided by digestion
</member>
        <member name="T:pwiz.proteome.ProteolyticEnzyme">
enumeration of commonly used proteolytic enzymes or enzyme-like proteases
</member>
        <member name="M:pwiz.proteome.AminoAcid.Info.record(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte)">
returns the amino acid's Record by symbol (may throw) 
</member>
        <member name="M:pwiz.proteome.AminoAcid.Info.record(pwiz.proteome.AminoAcid.Type)">
returns the amino acid's Record by type
</member>
        <member name="T:pwiz.proteome.AminoAcid.Info.Record">
struct for holding data for a single amino acid
</member>
        <member name="T:pwiz.proteome.AminoAcid.Type">
enumeration of the amino acids 
</member>
        <member name="M:pwiz.proteome.ModificationMap.insert(std._Tree_iterator&lt;std._Tree_val&lt;std._Tmap_traits&lt;System.Int32,pwiz.proteome.ModificationList,std.less&lt;System.Int32&gt;,std.allocator&lt;std.pair&lt;System.Int32!System.Runtime.CompilerServices.IsConst,pwiz.proteome.ModificationList&gt;&gt;,false&gt;&gt;&gt;,std.pair&lt;System.Int32!System.Runtime.CompilerServices.IsConst,pwiz.proteome.ModificationList&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
If a value_type with the same key as x is not present in the map, then x is inserted into the map. Otherwise, the pair is not inserted. A position may be supplied as a hint regarding where to do the insertion. If the insertion is done right after position, then it takes amortized constant time. Otherwise it takes O(log N) time.
</member>
        <member name="M:pwiz.proteome.ModificationMap.insert(std.pair&lt;System.Int32!System.Runtime.CompilerServices.IsConst,pwiz.proteome.ModificationList&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
If a value_type with the same key as x is not present in the map, then x is inserted into the map. Otherwise, the pair is not inserted.
</member>
        <member name="M:pwiz.proteome.ModificationMap.erase(System.Int32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Deletes the element with the key value x from the map, if one exists. Returns 1 if x existed in the map, 0 otherwise.
</member>
        <member name="M:pwiz.proteome.ModificationMap.erase(std._Tree_iterator&lt;std._Tree_val&lt;std._Tmap_traits&lt;System.Int32,pwiz.proteome.ModificationList,std.less&lt;System.Int32&gt;,std.allocator&lt;std.pair&lt;System.Int32!System.Runtime.CompilerServices.IsConst,pwiz.proteome.ModificationList&gt;&gt;,false&gt;&gt;&gt;,std._Tree_iterator&lt;std._Tree_val&lt;std._Tmap_traits&lt;System.Int32,pwiz.proteome.ModificationList,std.less&lt;System.Int32&gt;,std.allocator&lt;std.pair&lt;System.Int32!System.Runtime.CompilerServices.IsConst,pwiz.proteome.ModificationList&gt;&gt;,false&gt;&gt;&gt;)">
If the iterators start and finish point to the same map and last is reachable from first, all elements in the range [start, finish) are deleted from the map.
</member>
        <member name="M:pwiz.proteome.ModificationMap.erase(std._Tree_iterator&lt;std._Tree_val&lt;std._Tmap_traits&lt;System.Int32,pwiz.proteome.ModificationList,std.less&lt;System.Int32&gt;,std.allocator&lt;std.pair&lt;System.Int32!System.Runtime.CompilerServices.IsConst,pwiz.proteome.ModificationList&gt;&gt;,false&gt;&gt;&gt;)">
Deletes the map element pointed to by the iterator position.
</member>
        <member name="M:pwiz.proteome.ModificationMap.clear">
Erases all elements from the self.
</member>
        <member name="M:pwiz.proteome.ModificationMap.upper_bound(System.Int32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns an iterator for the first entry with a key greater than x.
</member>
        <member name="M:pwiz.proteome.ModificationMap.lower_bound(System.Int32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns a reference to the first entry with a key greater than or equal to x.
</member>
        <member name="M:pwiz.proteome.ModificationMap.find(System.Int32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Searches the map for a pair with the key value x and returns an iterator to that pair if it is found. If such a pair is not found the value end() is returned.
</member>
        <member name="M:pwiz.proteome.ModificationMap.equal_range(System.Int32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
Returns the pair (lower_bound(x), upper_bound(x)).
</member>
        <member name="M:pwiz.proteome.ModificationMap.op_Subscript(System.Int32!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
If an element with the key x exists in the map, then a reference to its associated value is returned. Otherwise the pair x,T() is inserted into the map and a reference to the default object T() is returned.
</member>
        <member name="M:pwiz.proteome.ModificationMap.rend">
Returns a reverse_iterator pointing to the last element stored in the map; in other words, to the off-the-end value).
</member>
        <member name="M:pwiz.proteome.ModificationMap.rbegin">
Returns a reverse_iterator pointing to the first element stored in the map. First is defined by the map's comparison operator, Compare.
</member>
        <member name="M:pwiz.proteome.ModificationMap.end">
Returns an iterator pointing to the last element stored in the map; in other words, to the off-the-end value.
</member>
        <member name="M:pwiz.proteome.ModificationMap.begin">
Returns an iterator pointing to the first element stored in the map. First is defined by the map's comparison operator, Compare.
</member>
        <member name="M:pwiz.proteome.ModificationMap.averageDeltaMass">
returns the sum of the average delta masses of all modifications in the map
</member>
        <member name="M:pwiz.proteome.ModificationMap.monoisotopicDeltaMass">
returns the sum of the monoisotopic delta masses of all modifications in the map
</member>
        <member name="T:pwiz.proteome.ModificationMap">
maps peptide/protein sequence indexes (0-based) to a modification list
* ModificationMap::NTerminus() returns the index for specifying N terminal mods
* ModificationMap::CTerminus() returns the index for specifying C terminal mods
</member>
        <member name="M:pwiz.proteome.ModificationList.averageDeltaMass">
returns the sum of the average delta masses of all modifications in the list
</member>
        <member name="M:pwiz.proteome.ModificationList.monoisotopicDeltaMass">
returns the sum of the monoisotopic delta masses of all modifications in the list
</member>
        <member name="T:pwiz.proteome.ModificationList">
represents a list of modifications on a single amino acid
</member>
        <member name="M:pwiz.proteome.Modification.op_Equality(pwiz.proteome.Modification!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff delta masses are equal
</member>
        <member name="M:pwiz.proteome.Modification.formula">
returns the difference formula;
throws runtime_error if hasFormula() = false
</member>
        <member name="M:pwiz.proteome.Modification.hasFormula">
returns true iff the mod was constructed with formula
</member>
        <member name="M:pwiz.proteome.Modification.#ctor">
constructs a zero-mass modification (provided for MSVC compatibility)
</member>
        <member name="T:pwiz.proteome.Modification">
represents a post-translational modification (PTM)
modification formula or masses must be provided at instantiation
</member>
        <member name="T:pwiz.proteome.Fragmentation">
provides fragment ion masses for a peptide
</member>
        <member name="M:pwiz.proteome.Peptide.op_Equality(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff peptide sequences and masses are equal
</member>
        <member name="M:pwiz.proteome.Peptide.fragmentation(System.Boolean,System.Boolean)">
returns a fragmentation model for the peptide;
fragment masses can calculated as mono/avg and as modified/unmodified
</member>
        <member name="M:pwiz.proteome.Peptide.modifications">
the map of sequence offsets (0-based) to modifications;
modifications can be added or removed from the peptide with this map

the map of sequence offsets (0-based) to modifications
</member>
        <member name="M:pwiz.proteome.Peptide.molecularWeight(System.Int32,System.Boolean)">
if charge = 0: returns neutral mass
if charge &gt; 0: returns charged m/z
if modified = false: returns the molecular weight of sequence()+water
if modified = true: returns the molecular weight of sequence()+modifications()+water
</member>
        <member name="M:pwiz.proteome.Peptide.monoisotopicMass(System.Int32,System.Boolean)">
if charge = 0: returns neutral mass
if charge &gt; 0: returns charged m/z
if modified = false: returns the monoisotopic mass of sequence()+water
if modified = true: returns the monoisotopic mass of sequence()+modifications()+water
</member>
        <member name="M:pwiz.proteome.Peptide.formula(System.Boolean)">
if modified = false: returns the composition formula of sequence()+water
if modified = true: returns the composition formula of sequence()+modifications()+water
throws an exception if modified = true and any modification has only mass information
</member>
        <member name="M:pwiz.proteome.Peptide.sequence">
returns the sequence of amino acids making up the peptide
</member>
        <member name="T:pwiz.proteome.Peptide">
represents a peptide or polypeptide (a sequence of amino acids)
</member>
        <member name="T:pwiz.proteome.ModificationDelimiter">
the delimiter expected to signify an inline modification
</member>
        <member name="T:pwiz.proteome.ModificationParsing">
settings to enable parsing of inline modifications in peptide sequences
</member>
        <member name="M:pwiz.chemistry.op_LeftShift(std.basic_ostream&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte}&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.chemistry.Formula!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
output a Formula
</member>
        <member name="M:pwiz.chemistry.Formula.op_Equality(pwiz.chemistry.Formula!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
formulas are equal iff their elemental compositions are equal
</member>
        <member name="M:pwiz.chemistry.Formula.op_Subscript(pwiz.chemistry.Element.Type)">
access to the Element's count in the formula
</member>
        <member name="M:pwiz.chemistry.Formula.#ctor(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
formula string given by symbol/count pairs, e.g. water: "H2 O1" (whitespace optional)
</member>
        <member name="T:pwiz.chemistry.Formula">
class to represent a chemical formula
</member>
        <member name="M:pwiz.chemistry.Element.Info.record(pwiz.chemistry.Element.Type)">
retrieve the record for an element
</member>
        <member name="T:pwiz.chemistry.Element.Type">
enumeration of the elements
</member>
        <member name="D:pwiz.chemistry.MassDistribution">
struct for holding isotope distribution
</member>
        <member name="T:pwiz.chemistry.MassAbundance">
struct for holding isotope information
</member>
        <member name="M:pwiz.CLI.tradata.TraDataFile.write(System.String,pwiz.CLI.tradata.TraDataFile.WriteConfig)">
            <summary>
member write function with the specified configuration
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.TraDataFile.write(System.String)">
            <summary>
member write function with the default configuration (mzML, 64-bit, no compression)
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.TraDataFile.write(pwiz.CLI.tradata.TraData,System.String,pwiz.CLI.tradata.TraDataFile.WriteConfig)">
            <summary>
static write function for any TraData object with the specified configuration
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.TraDataFile.write(pwiz.CLI.tradata.TraData,System.String)">
            <summary>
static write function for any TraData object with the default configuration (mzML, 64-bit, no compression)
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.TraDataFile.Format">
            <summary>
data format for write()
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.TraDataFile.#ctor(System.String)">
            <summary>
constructs TraData object backed by file
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.TraDataFile">
TraData object plus file I/O
</member>
        <member name="T:pwiz.tradata.DefaultReaderList">
default Reader list
</member>
        <member name="M:pwiz.tradata.TraDataFile.write(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.tradata.TraDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
member write function 
</member>
        <member name="M:pwiz.tradata.TraDataFile.write(pwiz.tradata.TraData!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.tradata.TraDataFile.WriteConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
static write function for any TraData object;
</member>
        <member name="T:pwiz.tradata.TraDataFile.WriteConfig">
configuration for write()
</member>
        <member name="T:pwiz.tradata.TraDataFile.Format">
data format for write()
</member>
        <member name="M:pwiz.tradata.TraDataFile.#ctor(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.tradata.Reader!System.Runtime.CompilerServices.IsConst*)">
constructs TraData object backed by file;
reader==0 -&gt; use DefaultReaderList 
</member>
        <member name="T:pwiz.tradata.TraDataFile">
TraData object plus file I/O
</member>
        <member name="M:pwiz.tradata.op_Addition(boost.shared_ptr&lt;pwiz.tradata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.shared_ptr&lt;pwiz.tradata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a list containing the lhs and rhs as readers
</member>
        <member name="M:pwiz.tradata.ReaderList.op_Addition(boost.shared_ptr&lt;pwiz.tradata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a concatenated list of all the Readers from the lhs and rhs operands
</member>
        <member name="M:pwiz.tradata.ReaderList.op_Addition(pwiz.tradata.ReaderList!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a concatenated list of all the Readers from the lhs and rhs operands
</member>
        <member name="M:pwiz.tradata.ReaderList.op_AdditionAssignment(boost.shared_ptr&lt;pwiz.tradata.Reader&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
appends the rhs Reader to the list
</member>
        <member name="M:pwiz.tradata.ReaderList.op_AdditionAssignment(pwiz.tradata.ReaderList!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
delegates to first child that identifies;
provides support for multi-run input files
delegates to first child that identifies;
provides support for multi-run input files
appends all of the rhs operand's Readers to the list
</member>
        <member name="M:pwiz.tradata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;boost.shared_ptr&lt;pwiz.tradata.TraData">
delegates to first child that identifies;
provides support for multi-run input files
</member>
        <member name="M:pwiz.tradata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;boost.shared_ptr&lt;pwiz.tradata.TraData&gt;&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
delegates to first child that identifies;
provides support for multi-run input files
</member>
        <member name="M:pwiz.tradata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.tradata.TraData*!System.Runtime.CompilerSer">
delegates to first child that identifies
</member>
        <member name="M:pwiz.tradata.ReaderList.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.tradata.TraData*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)">
delegates to first child that identifies
</member>
        <member name="M:pwiz.tradata.ReaderList.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.tradata.ReaderList.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns child name iff some child identifies, else empty string
</member>
        <member name="M:pwiz.tradata.Reader.getType">
fill in a vector of MSData.Id values; provides support for multi-run input files
</member>
        <member name="M:pwiz.tradata.Reader.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.vector&lt;boost.shared_ptr&lt;pwiz.tradata.TraData&gt;&gt;*!">
fill in a vector of TraData structures; provides support for multi-run input files
</member>
        <member name="M:pwiz.tradata.Reader.read(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.tradata.TraData*!System.Runtime.CompilerService">
fill in the TraData structure from the first (or only) sample
</member>
        <member name="M:pwiz.tradata.Reader.identify(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
return file type iff Reader recognizes the file, else empty;
note: for formats requiring a 3rd party DLL identify() should
return true if it recognized the format, even though reading
may fail if the 3rd party DLL isn't actually present
Reader may filter based on filename and/or head of the file
</member>
        <member name="M:pwiz.tradata.Reader.accept(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
return true iff Reader recognizes the file as one it should handle
that's not to say one it CAN handle, necessarily, as in Thermo on linux,
see comment for identify() below
</member>
        <member name="T:pwiz.tradata.Reader">
interface for file readers
</member>
        <member name="M:pwiz.CLI.tradata.TraData.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.tradata.TraData.cvs">
            <summary>
container for one or more controlled vocabulary definitions.
<para>- note: one of the &lt;cv&gt; elements in this list MUST be the PSI MS controlled vocabulary. All &lt;cvParam&gt; elements in the document MUST refer to one of the &lt;cv&gt; elements in this list.</para></summary>
        </member>
        <member name="M:pwiz.CLI.tradata.TargetList.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.TargetListList">
            <summary>
A list of Targets; implements the IList&lt;Target&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Target.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.TransitionList">
            <summary>
A list of Transitions; implements the IList&lt;Transition&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Transition.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Product.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Precursor.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.CompoundList">
            <summary>
A list of Compound references; implements the IList&lt;Compound&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Compound.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.PeptideList">
            <summary>
A list of Peptide references; implements the IList&lt;Peptide&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Peptide.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.ModificationList">
            <summary>
A list of Modifications; implements the IList&lt;Modification&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Modification.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.Modification">
            <summary>
A molecule modification specification.
If n modifications are present on the peptide, there should be n instances of the modification element.
If multiple modifications are provided as cvParams, it is assumed the modification is ambiguous,
i.e. one modification or the other. If no cvParams are provided it is assumed that the delta has not been
matched to a known modification.
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.ProteinList">
            <summary>
A list of Protein references; implements the IList&lt;Protein&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Protein.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.InterpretationList">
            <summary>
A list of Interpretations; implements the IList&lt;Interpretation&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Interpretation.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Configuration.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.InstrumentList">
            <summary>
A list of Instrument references; implements the IList&lt;Instrument&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Instrument.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.ValidationList">
            <summary>
A list of Validations; implements the IList&lt;Validation&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Validation.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Evidence.#ctor">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Prediction.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.tradata.Prediction.software">
            <summary>
reference to a previously defined software element.
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.RetentionTimeList">
            <summary>
A list of RetentionTimes; implements the IList&lt;RetentionTime&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.RetentionTime.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.tradata.RetentionTime.software">
            <summary>
reference to a previously defined software element.
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.SoftwareList">
            <summary>
A list of Software references; implements the IList&lt;Software&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Software.empty">
            <summary>
returns true iff all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.tradata.Software.version">
            <summary>
the software version.
</summary>
        </member>
        <member name="P:pwiz.CLI.tradata.Software.id">
            <summary>
an identifier for this software that is unique across all SoftwareTypes.
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.PublicationList">
            <summary>
A list of Publications; implements the IList&lt;Publication&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Publication.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="T:pwiz.CLI.tradata.ContactList">
            <summary>
A list of Contact references; implements the IList&lt;Contact&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.tradata.Contact.empty">
            <summary>
returns true iff the element contains no params and all members are empty or null
</summary>
        </member>
        <member name="P:pwiz.CLI.tradata.Contact.id">
            <summary>
an identifier for this file.
</summary>
        </member>
        <member name="M:pwiz.tradata.TraData.version">
returns the version of this traML document;
for a document created programmatically, the version is the current release version of traML;
for a document created from a file/stream, the version is the schema version read from the file/stream
</member>
        <member name="M:pwiz.tradata.TraData.empty">
returns true iff all members are empty
</member>
        <member name="F:pwiz.tradata.TraData.targets">
List of precursor m/z targets to include or exclude
</member>
        <member name="F:pwiz.tradata.TraData.transitions">
List of transitions
</member>
        <member name="F:pwiz.tradata.TraData.peptidePtrs">
List of compounds (including peptides) for which one or more transitions are intended to identify
</member>
        <member name="F:pwiz.tradata.TraData.proteinPtrs">
List of proteins for which one or more transitions are intended to identify
</member>
        <member name="F:pwiz.tradata.TraData.softwarePtrs">
List of software packages used in the generation of one of more transitions described in the document
</member>
        <member name="F:pwiz.tradata.TraData.instrumentPtrs">
List of instruments on which transitions are validated
</member>
        <member name="F:pwiz.tradata.TraData.publications">
List of publications from which the transitions were collected or wherein they are published
</member>
        <member name="F:pwiz.tradata.TraData.contactPtrs">
List of contacts referenced in the generation or validation of transitions
</member>
        <member name="F:pwiz.tradata.TraData.id">
for internal use: not currently in the schema
</member>
        <member name="M:pwiz.tradata.TargetList.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.TargetList.targetIncludeList">
List of precursor m/z targets to include
</member>
        <member name="F:pwiz.tradata.TargetList.targetExcludeList">
List of precursor m/z targets to exclude
</member>
        <member name="T:pwiz.tradata.TargetList">
List of precursor m/z targets to include or exclude
</member>
        <member name="M:pwiz.tradata.Target.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Target.configurationList">
List of instrument configurations used in the validation or optimization of the target
</member>
        <member name="F:pwiz.tradata.Target.retentionTime">
Information about predicted or calibrated retention time
</member>
        <member name="F:pwiz.tradata.Target.precursor">
Precursor (Q1) of the target
</member>
        <member name="F:pwiz.tradata.Target.compoundPtr">
Reference to a compound for which this target is the trigger
</member>
        <member name="F:pwiz.tradata.Target.peptidePtr">
Reference to a peptide for which this target is the trigger
</member>
        <member name="F:pwiz.tradata.Target.id">
String label for this target
</member>
        <member name="T:pwiz.tradata.Target">
A peptide or compound that is to be included or excluded from a target list of precursor m/z values.
</member>
        <member name="M:pwiz.tradata.Transition.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Transition.configurationList">
List of insutrument configurations used in the validation or optimization of the transitions
</member>
        <member name="F:pwiz.tradata.Transition.interpretationList">
List of possible interprations of fragment ions for a transition
</member>
        <member name="F:pwiz.tradata.Transition.retentionTime">
Information about predicted or calibrated retention time
</member>
        <member name="F:pwiz.tradata.Transition.prediction">
Information about a prediction for a suitable transition using some software
</member>
        <member name="F:pwiz.tradata.Transition.product">
Product (Q3) of the transition
</member>
        <member name="F:pwiz.tradata.Transition.precursor">
Precursor (Q1) of the transition
</member>
        <member name="F:pwiz.tradata.Transition.compoundPtr">
Reference to a compound for this transition
</member>
        <member name="F:pwiz.tradata.Transition.peptidePtr">
Reference to a peptide which this transition is intended to identify
</member>
        <member name="F:pwiz.tradata.Transition.id">
String label for this transition
</member>
        <member name="M:pwiz.tradata.Product.empty">
returns true iff contains no params
</member>
        <member name="T:pwiz.tradata.Product">
Product (Q3) of the transition
</member>
        <member name="M:pwiz.tradata.Precursor.empty">
returns true iff contains no params
</member>
        <member name="T:pwiz.tradata.Precursor">
Precursor (Q1) of the transition
</member>
        <member name="M:pwiz.tradata.Compound.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Compound.retentionTimes">
List of retention time information entries
</member>
        <member name="F:pwiz.tradata.Compound.id">
Identifier for the compound to be used for referencing within a document
</member>
        <member name="T:pwiz.tradata.Compound">
Chemical compound other than a peptide for which one or more transitions 
</member>
        <member name="M:pwiz.tradata.Peptide.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Peptide.retentionTimes">
List of retention time information entries
</member>
        <member name="F:pwiz.tradata.Peptide.proteinPtrs">
Reference to zero or more proteins which this peptide is intended to identify
</member>
        <member name="F:pwiz.tradata.Peptide.modifications">
List of modifications on this peptide
</member>
        <member name="F:pwiz.tradata.Peptide.sequence">
Amino acid sequence of the peptide being described
</member>
        <member name="F:pwiz.tradata.Peptide.id">
Identifier for the peptide to be used for referencing within a document
</member>
        <member name="T:pwiz.tradata.Peptide">
Peptide for which one or more transitions are intended to identify
</member>
        <member name="M:pwiz.tradata.Modification.empty">
returns true iff all members are zero and contain no params
</member>
        <member name="F:pwiz.tradata.Modification.averageMassDelta">
Atomic mass delta when considering the natural distribution of isotopes in Daltons.
</member>
        <member name="F:pwiz.tradata.Modification.monoisotopicMassDelta">
Atomic mass delta when assuming only the most common isotope of elements in Daltons.
</member>
        <member name="F:pwiz.tradata.Modification.location">
Location of the modification within the peptide sequence, counted from the N-terminus, starting at position 1. Specific modifications to the N-terminus should be given the location 0. Modification to the C-terminus should be given as peptide length + 1.
</member>
        <member name="T:pwiz.tradata.Modification">
A molecule modification specification.
If n modifications are present on the peptide, there should be n instances of the modification element.
If multiple modifications are provided as cvParams, it is assumed the modification is ambiguous,
i.e. one modification or the other. If no cvParams are provided it is assumed that the delta has not been
matched to a known modification.
</member>
        <member name="M:pwiz.tradata.Protein.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Protein.sequence">
Amino acid sequence of the protein
</member>
        <member name="F:pwiz.tradata.Protein.id">
Identifier for the protein to be used for referencing within a document
</member>
        <member name="M:pwiz.tradata.Interpretation.empty">
returns true iff contains no params
</member>
        <member name="T:pwiz.tradata.Interpretation">
A possible interpration of the product ion for a transition
</member>
        <member name="M:pwiz.tradata.Configuration.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Configuration.instrumentPtr">
Reference to an instrument for which this configuration information is appropriate
</member>
        <member name="F:pwiz.tradata.Configuration.contactPtr">
Reference to a contact person originating this information
</member>
        <member name="T:pwiz.tradata.Configuration">
Instrument configuration used in the validation or optimization of the transitions
</member>
        <member name="M:pwiz.tradata.Instrument.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Instrument.id">
Identifier for the instrument to be used for referencing within a document
</member>
        <member name="T:pwiz.tradata.Instrument">
Instrument on which transitions are validated
</member>
        <member name="M:pwiz.tradata.Validation.empty">
returns true iff contain no params
</member>
        <member name="T:pwiz.tradata.Validation">
Information about the state of validation of a transition on a given instrument model
</member>
        <member name="M:pwiz.tradata.Evidence.empty">
returns true iff contain no params
</member>
        <member name="T:pwiz.tradata.Evidence">
Information about empirical mass spectrometer observations of the peptide
</member>
        <member name="M:pwiz.tradata.Prediction.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Prediction.contactPtr">
Reference to a contact person that generated this prediction
</member>
        <member name="F:pwiz.tradata.Prediction.softwarePtr">
Reference to a software package from which this prediction is derived
</member>
        <member name="T:pwiz.tradata.Prediction">
Information about a prediction for a suitable transition using some software
</member>
        <member name="M:pwiz.tradata.RetentionTime.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.RetentionTime.softwarePtr">
Software used to determine the retention time
</member>
        <member name="M:pwiz.tradata.Software.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Software.version">
Version of the software program described
</member>
        <member name="F:pwiz.tradata.Software.id">
Identifier for the software to be used for referencing within a document
</member>
        <member name="M:pwiz.tradata.Publication.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Publication.id">
Identifier for the publication to be used for referencing within a document
</member>
        <member name="M:pwiz.tradata.Contact.empty">
returns true iff all members are empty and contain no params
</member>
        <member name="F:pwiz.tradata.Contact.id">
Identifier for the contact to be used for referencing within a document
</member>
        <member name="M:pwiz.tradata.defaultCVList">
returns a default list of CVs used in an TraML document;
currently includes PSI-MS, Unit Ontology, and UNIMOD
</member>
        <member name="T:pwiz.CLI.data.UserParamList">
            <summary>
A list of UserParam references; implements the IList&lt;UserParam&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.data.CVParamList">
            <summary>
A list of CVParam references; implements the IList&lt;CVParam&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.data.ParamGroupList">
            <summary>
A list of ParamGroup references; implements the IList&lt;ParamGroup&gt; interface
</summary>
        </member>
        <member name="T:pwiz.CLI.data.CVList">
            <summary>
A list of CV references; implements the IList&lt;CV&gt; interface
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamGroup.empty">
            <summary>
returns true iff the element contains no params or param groups
</summary>
        </member>
        <member name="P:pwiz.CLI.data.ParamGroup.id">
            <summary>
the identifier with which to reference this ReferenceableParamGroup.
</summary>
        </member>
        <member name="T:pwiz.CLI.data.ParamGroup">
            <summary>
A collection of CVParam and UserParam elements that can be referenced from elsewhere in this mzML document by using the 'paramGroupRef' element in that location to reference the 'id' attribute value of this element. 
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.empty">
            <summary>
returns true iff the element contains no params or param groups
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Double,pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam with a value and units (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Single,pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam with a value and units (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.UInt64,pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam with a value and units (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.UInt32,pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam with a value and units (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Int64,pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam with a value and units (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Int32,pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam with a value and units (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Double)">
            <summary>
set/add a CVParam with a value (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Single)">
            <summary>
set/add a CVParam with a value (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.UInt64)">
            <summary>
set/add a CVParam with a value (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.UInt32)">
            <summary>
set/add a CVParam with a value (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Int64)">
            <summary>
set/add a CVParam with a value (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Int32)">
            <summary>
set/add a CVParam with a value (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.Boolean)">
            <summary>
set/add a CVParam (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.String,pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID,System.String)">
            <summary>
set/add a CVParam (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.set(pwiz.CLI.cv.CVID)">
            <summary>
set/add a CVParam (not recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.userParam(System.String)">
            <summary>
Finds and returns UserParam with specified name 
<para>- returns UserParam() if name not found</para><para>- not recursive: looks only at local userParams</para></summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.hasCVParamChild(pwiz.CLI.cv.CVID)">
            <summary>
returns true iff cvParams contains a child IS_A of cvid (recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.hasCVParam(pwiz.CLI.cv.CVID)">
            <summary>
returns true iff cvParams contains exact cvid (recursive)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.cvParamChildren(pwiz.CLI.cv.CVID)">
            <summary>
Finds all children of cvid in the container
<para>- returns all CVParam results such that (result.cvid IS_A cvid)</para><para>- if not found, returns empty list</para><para>- recursive (looks into paramGroups)</para></summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.cvParamChild(pwiz.CLI.cv.CVID)">
            <summary>
Finds child of cvid in the container
<para>- returns first CVParam result such that (result.cvid IS_A cvid)</para><para>- if not found, returns CVParam(CVID_Unknown)</para><para>- recursive (looks into paramGroups)</para></summary>
        </member>
        <member name="M:pwiz.CLI.data.ParamContainer.cvParam(pwiz.CLI.cv.CVID)">
            <summary>
Finds cvid in the container
<para>- returns first CVParam result such that (result.cvid == cvid)</para><para>- if not found, returns CVParam(CVID_Unknown)</para><para>- recursive (looks into paramGroups)</para></summary>
        </member>
        <member name="P:pwiz.CLI.data.ParamContainer.userParams">
            <summary>
a collection of uncontrolled user terms
</summary>
        </member>
        <member name="P:pwiz.CLI.data.ParamContainer.cvParams">
            <summary>
a collection of controlled vocabulary terms
</summary>
        </member>
        <member name="P:pwiz.CLI.data.ParamContainer.paramGroups">
            <summary>
a collection of references to ParamGroups
</summary>
        </member>
        <member name="T:pwiz.CLI.data.ParamContainer">
            <summary>
The base class for elements that may contain cvParams, userParams, or paramGroup references
</summary>
        </member>
        <member name="M:pwiz.CLI.data.UserParam.op_Inequality(pwiz.CLI.data.UserParam)">
            <summary>
returns !(this==that)
</summary>
        </member>
        <member name="M:pwiz.CLI.data.UserParam.op_Equality(pwiz.CLI.data.UserParam)">
            <summary>
returns true iff name, value, type, and units are all pairwise equal
</summary>
        </member>
        <member name="M:pwiz.CLI.data.UserParam.empty">
            <summary>
returns true iff name, value, type, and units are all empty
</summary>
        </member>
        <member name="P:pwiz.CLI.data.UserParam.units">
            <summary>
an optional CV parameter for the unit term associated with the value, if any (e.g. MS_electron_volt).
</summary>
        </member>
        <member name="P:pwiz.CLI.data.UserParam.type">
            <summary>
the datatype of the parameter, where appropriate (e.g.: xsd:float).
</summary>
        </member>
        <member name="P:pwiz.CLI.data.UserParam.value">
            <summary>
the value for the parameter, where appropriate.
</summary>
        </member>
        <member name="P:pwiz.CLI.data.UserParam.name">
            <summary>
the name for the parameter.
</summary>
        </member>
        <member name="T:pwiz.CLI.data.UserParam">
            <summary>
Uncontrolled user parameters (essentially allowing free text). Before using these, one should verify whether there is an appropriate CV term available, and if so, use the CV term instead
</summary>
        </member>
        <member name="T:pwiz.CLI.data.UserParamValue">
            <summary>
A convenient variant type for casting to non-string types
</summary>
        </member>
        <member name="M:pwiz.CLI.data.CVParam.timeInSeconds">
            <summary>
convenience function to return time in seconds (throws if units not a time unit)
</summary>
        </member>
        <member name="P:pwiz.CLI.data.CVParam.unitsName">
            <summary>
convenience function to return string for the units 
</summary>
        </member>
        <member name="P:pwiz.CLI.data.CVParam.name">
            <summary>
convenience function to return string for the cvid 
</summary>
        </member>
        <member name="M:pwiz.CLI.data.CVParam.#ctor">
            <summary>
constructs an empty/null CVParam with CVID_Unknown
</summary>
        </member>
        <member name="M:pwiz.CLI.data.CVParam.#ctor(pwiz.CLI.cv.CVID)">
            <summary>
constructs a non-valued CVParam
</summary>
        </member>
        <member name="P:pwiz.CLI.data.CVParam.units">
            <summary>
the enumerated CV term defining the units used to represent the value
</summary>
        </member>
        <member name="P:pwiz.CLI.data.CVParam.value">
            <summary>
the value of the term
<para>- stored as string but may represent variant types</para><para>- must be empty for controlled value terms</para></summary>
        </member>
        <member name="P:pwiz.CLI.data.CVParam.cvid">
            <summary>
the enumerated CV term the parameter represents
</summary>
        </member>
        <member name="T:pwiz.CLI.data.CVParam">
            <summary>
represents a tag-value pair, where the tag comes from the controlled vocabulary
</summary>
        </member>
        <member name="T:pwiz.CLI.data.CVParamValue">
            <summary>
A convenient variant type for casting to non-string types
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CV.cvids">
            <summary>
returns vector of all valid CVIDs
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CV.cvIsA(pwiz.CLI.cv.CVID,pwiz.CLI.cv.CVID)">
            <summary>
returns true iff child IsA parent in the CV
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CV.cvTermInfo(System.String)">
            <summary>
returns CV term info for the specified id (accession number)
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CV.cvTermInfo(pwiz.CLI.cv.CVID)">
            <summary>
returns CV term info for the specified CVID
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CV.empty">
            <summary>
returns true iff id, URI, fullName, and version are all empty
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CV.version">
            <summary>
the version of the CV from which the referred-to terms are drawn.
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CV.fullName">
            <summary>
the usual name for the resource (e.g. The PSI-MS Controlled Vocabulary).
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CV.URI">
            <summary>
the URI for the resource.
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CV.id">
            <summary>
the short label to be used as a reference tag with which to refer to this particular Controlled Vocabulary source description (e.g., from the cvLabel attribute, in CVParamType elements).
</summary>
        </member>
        <member name="T:pwiz.CLI.cv.CV">
            <summary>
Information about an ontology or CV source and a short 'lookup' tag to refer to.
</summary>
        </member>
        <member name="M:pwiz.data.ParamGroup.empty">
returns true iff the element contains no params or param groups
</member>
        <member name="F:pwiz.data.ParamGroup.id">
the identifier with which to reference this ReferenceableParamGroup.
</member>
        <member name="T:pwiz.data.ParamGroup">
A collection of CVParam and UserParam elements that can be referenced from elsewhere in this mzML document by using the 'paramGroupRef' element in that location to reference the 'id' attribute value of this element. 
</member>
        <member name="M:pwiz.data.ParamContainer.op_Inequality(pwiz.data.ParamContainer!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns !(this==that)
</member>
        <member name="M:pwiz.data.ParamContainer.op_Equality(pwiz.data.ParamContainer!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff this and that have the exact same cvParams and userParams
- recursive: looks into paramGroupPtrs
</member>
        <member name="M:pwiz.data.ParamContainer.clear">
clears the collections
</member>
        <member name="M:pwiz.data.ParamContainer.empty">
returns true iff the element contains no params or param groups
</member>
        <member name="M:pwiz.data.ParamContainer.set(pwiz.cv.CVID,std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.cv.CVID)">
set/add a CVParam (not recursive)
</member>
        <member name="M:pwiz.data.ParamContainer.userParam(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
finds UserParam with specified name 
- returns UserParam() if name not found 
- not recursive: looks only at local userParams
</member>
        <member name="M:pwiz.data.ParamContainer.hasCVParamChild(pwiz.cv.CVID)">
returns true iff cvParams contains a child (is_a) of cvid (recursive)
</member>
        <member name="M:pwiz.data.ParamContainer.hasCVParam(pwiz.cv.CVID)">
returns true iff cvParams contains exact cvid (recursive)
</member>
        <member name="M:pwiz.data.ParamContainer.cvParamChildren(pwiz.cv.CVID)">
finds all children of cvid in the container:
- returns all CVParam results such that (result.cvid is_a cvid); 
- if not found, empty vector
- recursive: looks into paramGroupPtrs
</member>
        <member name="M:pwiz.data.ParamContainer.cvParamChild(pwiz.cv.CVID)">
finds child of cvid in the container:
- returns first CVParam result such that (result.cvid is_a cvid); 
- if not found, CVParam(CVID_Unknown)
- recursive: looks into paramGroupPtrs
</member>
        <member name="M:pwiz.data.ParamContainer.cvParam(pwiz.cv.CVID)">
finds cvid in the container:
- returns first CVParam result such that (result.cvid == cvid); 
- if not found, returns CVParam(CVID_Unknown)
- recursive: looks into paramGroupPtrs
</member>
        <member name="F:pwiz.data.ParamContainer.userParams">
a collection of uncontrolled user terms
</member>
        <member name="F:pwiz.data.ParamContainer.cvParams">
a collection of controlled vocabulary terms
</member>
        <member name="F:pwiz.data.ParamContainer.paramGroupPtrs">
a collection of references to ParamGroups
</member>
        <member name="T:pwiz.data.ParamContainer">
The base class for elements that may contain cvParams, userParams, or paramGroup references
</member>
        <member name="M:pwiz.data.UserParam.op_Inequality(pwiz.data.UserParam!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns !(this==that)
</member>
        <member name="M:pwiz.data.UserParam.op_Equality(pwiz.data.UserParam!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff name, value, type, and units are all pairwise equal
</member>
        <member name="M:pwiz.data.UserParam.empty">
returns true iff name, value, type, and units are all empty
</member>
        <member name="F:pwiz.data.UserParam.units">
an optional CV parameter for the unit term associated with the value, if any (e.g. MS_electron_volt).
</member>
        <member name="F:pwiz.data.UserParam.type">
the datatype of the parameter, where appropriate (e.g.: xsd:float).
</member>
        <member name="F:pwiz.data.UserParam.value">
the value for the parameter, where appropriate.
</member>
        <member name="F:pwiz.data.UserParam.name">
the name for the parameter.
</member>
        <member name="T:pwiz.data.UserParam">
Uncontrolled user parameters (essentially allowing free text). Before using these, one should verify whether there is an appropriate CV term available, and if so, use the CV term instead
</member>
        <member name="M:pwiz.data.CVParam.op_Inequality(pwiz.data.CVParam!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
inequality operator
</member>
        <member name="M:pwiz.data.CVParam.op_Equality(pwiz.data.CVParam!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
equality operator
</member>
        <member name="M:pwiz.data.CVParam.timeInSeconds">
convenience function to return time in seconds (throws if units not a time unit)
</member>
        <member name="M:pwiz.data.CVParam.unitsName">
convenience function to return string for the units 
</member>
        <member name="M:pwiz.data.CVParam.name">
convenience function to return string for the cvid 
</member>
        <member name="M:pwiz.data.CVParam.#ctor(pwiz.cv.CVID)">
constructor for non-valued CVParams
</member>
        <member name="M:pwiz.data.CVParam.#ctor(pwiz.cv.CVID,System.Boolean,pwiz.cv.CVID)">
special case for bool (no lexical_cast)
</member>
        <member name="T:pwiz.data.CVParam">
represents a tag-value pair, where the tag comes from the controlled vocabulary
</member>
        <member name="M:pwiz.CLI.cv.CVTermInfo.prefix">
            <summary>
returns the prefix of the id, e.g. "MS" for PSI-MS terms
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CVTermInfo.shortName">
            <summary>
returns the shortest synonym from exactSynonyms()
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CVTermInfo.#ctor(System.String)">
            <summary>
returns CV term info for the specified id in the form: "prefix:number"
</summary>
        </member>
        <member name="M:pwiz.CLI.cv.CVTermInfo.#ctor(pwiz.CLI.cv.CVID)">
            <summary>
returns CV term info for the specified CVID
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CVTermInfo.exactSynonyms">
            <summary>
returns a list of term names synonymous with this term
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CVTermInfo.parentsPartOf">
            <summary>
returns a list of terms which this term has a PART_OF relationship with
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CVTermInfo.parentsIsA">
            <summary>
returns a list of terms which this term has an IS_A relationship with
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CVTermInfo.isObsolete">
            <summary>
returns true if the term is obsolete
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CVTermInfo.def">
            <summary>
returns the full text definition of the term
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CVTermInfo.name">
            <summary>
the full name of the term, e.g. "sample number"
</summary>
        </member>
        <member name="P:pwiz.CLI.cv.CVTermInfo.id">
            <summary>
returns the accession id of the term in the form: "prefix:number", e.g. "MS:1000001"
</summary>
        </member>
        <member name="T:pwiz.CLI.cv.CVTermInfo">
            <summary>
A utility class for getting detailed information about a particular CVID (CV term)
</summary>
        </member>
        <member name="T:pwiz.CLI.cv.StringList">
            <summary>
A list of enumerated System.Strings; implements IList&lt;System.String&gt;
</summary>
        </member>
        <member name="T:pwiz.CLI.cv.CVIDList">
            <summary>
A list of enumerated CVIDs (CV terms); implements IList&lt;CVID&gt;
</summary>
        </member>
        <member name="T:pwiz.CLI.cv.CVID">
            <summary>enumeration of controlled vocabulary (CV) terms, generated from OBO file(s)</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microgram_per_liter">
            <summary>microgram per liter: A mass unit density which is equal to mass of an object in micrograms divided by the volume in liters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_absorbance_unit">
            <summary>absorbance unit: A dimensionless logarithmic unit assigned to a measure of absorbance of light through a partially absorbing substance, defined as -log10(I/I_0) where I = transmitted light and I_0 = incident light.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_volt_per_meter">
            <summary>volt per meter: The volt per meter is a unit of electric field strength equal to the a potential difference of 1 volt existing between two points that are 1 meter apart.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_electric_field_strength_unit">
            <summary>electric field strength unit: The electric field strength is a derived unit which is a measure of the potential difference between two points some distance apart.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_electronvolt">
            <summary>electronvolt: A non-SI unit of energy (eV) defined as the energy acquired by a single unbound electron when it passes through an electrostatic potential difference of one volt. An electronvolt is equal to 1.602 176 53(14) x 10^-19 J.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_watt_per_meter_kelvin">
            <summary>watt per meter kelvin: An heat conduction unit which is equal to one watt divided by meter kelvin.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_siemens">
            <summary>siemens: An electrical conduction unit which is equal to A/V.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_heat_conduction_unit">
            <summary>heat conduction unit: A derived unit which represents a standard measurement of the spontaneous transfer of thermal energy through matter, from a region of higher temperature to a region of lower temperature.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_electrical_conduction_unit">
            <summary>electrical conduction unit: A derived unit which represents a standard measurement of the movement of electrically charged particles through a transmission medium (electrical conductor).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_conduction_unit">
            <summary>conduction unit: A derived unit which represents a standard measurement of the transmission of an entity through a medium.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_effective_dose_unit">
            <summary>effective dose unit: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_decibel">
            <summary>decibel: An ratio unit which is an indicator of sound power per unit area.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_poise">
            <summary>poise: A viscosity unit which is equal to one dyne second per square centimeter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_pascal_second">
            <summary>pascal second: A viscosity unit which is equal to one pascale per second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_viscosity_unit">
            <summary>viscosity unit: A derived unit which is a standard measure of the internal resistance of fluids to flow.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_dyne_per_cm">
            <summary>dyne per cm: A surface tension unit which is equal to one dyne per centimeter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_newton_per_meter">
            <summary>newton per meter: A surface tension unit which is equal to one newton per meter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_surface_tension_unit">
            <summary>surface tension unit: A unit which is a standard measure of the ability of a liguid to attraction of molecules at its surface as a result of unbalanced molecular cohesive forces.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_megavolt">
            <summary>megavolt: An electric potential difference unit which is equal to one million volts or 10^[6] V.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picovolt">
            <summary>picovolt: An electric potential difference unit which is equal to one trillionth of a volt or 10^[-12] V.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanovolt">
            <summary>nanovolt: An electric potential difference unit which is equal to one billionth of a volt or 10^[-12] V.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microvolt">
            <summary>microvolt: An electric potential difference unit which is equal to one millionth of a volt or 10^[-6] V.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilovolt">
            <summary>kilovolt: An electric potential difference unit which is equal to one thousand volts or 10^[3] V.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millivolt">
            <summary>millivolt: An electric potential difference unit which is equal to one thousandth of a volt or 10^[-3] V.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mebibyte">
            <summary>mebibyte: An information unit which is equal to 1024 KiB.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kibibyte">
            <summary>kibibyte: An information unit which is equal to 1024 B.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_base_pair">
            <summary>base pair: A count unit which contains one nucleotide.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_pixels_per_millimeter">
            <summary>pixels per millimeter: A spatial resolution unit which is a standard measure of the number of pixels in one millimeter length or width of a digital image divided by the physical length or width of a printed image.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_pixels_per_inch">
            <summary>pixels per inch: A spatial resolution unit which is a standard measure of the resolution of a computer display, related to the size of the display in inches and the total number of pixels in the horizontal and vertical directions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_micron">
            <summary>micron: A spatial resolution unit which is equal to a pixel size of one micrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_dots_per_inch">
            <summary>dots per inch: A spatial resolution unit which is a standard measure of the printing resolution, in particular the number of individual dots of ink a printer or toner can produce within a linear one-inch space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_spatial_resolution_unit">
            <summary>spatial resolution unit: An image resolution unit which is a standard measure of the way luminance and chrominance may be sampled at different levels.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_dynamic_range_unit">
            <summary>dynamic range unit: An image resolution unit which is a standard measure of the amount of contrast available in a pixel.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_chroma_sampling_unit">
            <summary>chroma sampling unit: An image resolution unit which is a standard measure of the amount of spatial detail in an image.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_image_resolution_unit">
            <summary>image resolution unit: An information unit which is a standard measure of the detail an image holds.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_megabyte">
            <summary>megabyte: An information unit which is equal to 1000 kB.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilobyte">
            <summary>kilobyte: An information unit which is equal to 1000 bytes.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_byte">
            <summary>byte: An information unit which is equal to 8 bits.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_bit">
            <summary>bit: An information unit which refers to a digit in the binary numeral system, which consists of base 2 digits (ie there are only 2 possible values: 0 or 1).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_information_unit">
            <summary>information unit: A unit which is a standard measure of the amount of information.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilovolt_hour">
            <summary>kilovolt-hour: A magnetic flux unit which is equal to one thousand volt-hours.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_volt_hour">
            <summary>volt-hour: A magnetic flux unit which is equal to 3600 Wb.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_tesla">
            <summary>tesla: A magnetic flux density unit which is equal to one weber per square meter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_magnetic_flux_density">
            <summary>magnetic flux density: A derived unit which is a standard measure of the strength of a magnetic field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_weber">
            <summary>weber: A magnetic flux unit which is equal to the amount of flux that when linked with a single turn of wire for an interval of one second will induce an electromotive force of one volt.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_magnetic_flux_unit">
            <summary>magnetic flux unit: A derived unit which is a standard measure of quantity of magnetism, taking account of the strength and the extent of a magnetic field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilowatt_hour">
            <summary>kilowatt-hour: An energy unit which is equal to 1,000 watt-hours.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_watt_hour">
            <summary>watt-hour: An energy unit which is equal to the amount of electrical energy equivalent to a one-watt load drawing power for one hour.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilodalton">
            <summary>kilodalton: A mass unit which is equal to one thousand daltons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_dalton">
            <summary>dalton: An independently to the base SI units defined mass unit which is equal to one twelfth of the mass of an unbound atom of the carbon-12 nuclide, at rest and in its ground state.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_coulomb">
            <summary>coulomb: An electrical charge unit which is equal to the amount of charge transferred by a current of 1 ampere in 1 second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_electric_charge">
            <summary>electric charge: A derived unit which is a standard measure of the quantity of unbalanced electricity in a body (either positive or negative) and construed as an excess or deficiency of electrons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_volt">
            <summary>volt: An electric potential difference unit which is equal to the work per unit charge. One volt is the potential difference required to move one coulomb of charge between two points in a circuit while using one joule of energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_electric_potential_difference">
            <summary>electric potential difference: A derived unit which is a standard measure of the work done per unit charge as a charge is moved between two points in an electric field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_disintegrations_per_second">
            <summary>disintegrations per second: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_plaque_forming_unit_per_milliliter">
            <summary>plaque forming unit per milliliter: A concentration unit which a measure of plague forming units in one milliliter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_plaque_forming_unit_per_volume">
            <summary>plaque forming unit per volume: A concentration unit which a measure of plague forming units in a given volume.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_colony_forming_unit_per_milliliter">
            <summary>colony forming unit per milliliter: A colony forming unit which a measure of viable bacterial numbers in one milliliter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_colony_forming_unit_per_volume">
            <summary>colony forming unit per volume: A concentration unit which a measure of viable bacterial numbers in a given volume.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_plaque_forming_unit">
            <summary>plaque forming unit: A dimensionless count unit which a measure of plague forming units in a given volume.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_colony_forming_unit">
            <summary>colony forming unit: A dimensionless count unit which a measure of viable bacterial numbers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_deciliter">
            <summary>deciliter: A volume unit which is equal to one tenth of a liter or 10^[-1] L.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_gram_per_deciliter">
            <summary>gram per deciliter: A mass density unit which is equal to mass of an object in grams divided by the volume in deciliters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milliliter_per_liter">
            <summary>milliliter per liter: A volume per unit volume unit which is equal to one millionth of a liter of solute in one liter of solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milliliter_per_cubic_meter">
            <summary>milliliter per cubic meter: A volume per unit volume unit which is equal to one millionth of a liter of solute in one cubic meter of solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_volume_per_unit_volume">
            <summary>volume per unit volume: A dimensionless concentration unit which denotes the given volume of the solute in the total volume of the resulting solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_katal_per_liter">
            <summary>katal per liter: A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one thousandth of a cubic meter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_katal_per_cubic_meter">
            <summary>katal per cubic meter: A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one cubic meter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_catalytic__activity__concentration_unit">
            <summary>catalytic (activity) concentration unit: A concentration unit which is a standard measure of the amount of the action of a catalyst in a given volume.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cells_per_milliliter">
            <summary>cells per milliliter: A unit of cell concentration which is equal to one cell in a volume of 1 milliliter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cell_concentration_unit">
            <summary>cell concentration unit: A concentration unit which denotes the average cell number in a given volume.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microliter_per_kilogram">
            <summary>microliter per kilogram: A specific volume unit which is equal to one millionth of a liter per kilogram or 10^[-6] l/kg.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milliliter_per_kilogram">
            <summary>milliliter per kilogram: A specific volume unit which is equal to a thousandth of a liter per kilogram or 10^[-3] l/kg.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_liter_per_kilogram">
            <summary>liter per kilogram: A specific volume unit which is equal to one liter volume occupied by one kilogram of a particular substance.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_pH">
            <summary>pH: A dimensionless concentration notation which denotes the acidity of a solution in terms of activity of hydrogen ions (H+).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_degree_fahrenheit">
            <summary>degree fahrenheit: A temperature derived unit which is equal to 5/9ths of a kelvin. Negative 40 degrees Fahrenheit is equal to negative 40 degrees Celsius.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_confluence_percentage">
            <summary>confluence percentage: A dimensionless percent unit which denotes the density of an attached or monolayer culture (e.g., cell culture).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_purity_percentage">
            <summary>purity percentage: A dimensionless percent unit which denotes the homogeneity of a biomaterial.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_molecule_count">
            <summary>molecule count: A dimensionless count unit which denotes the number of molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_fraction">
            <summary>fraction: A dimensionless ratio unit which relates the part (the numerator) to the whole (the denominator).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_ratio">
            <summary>ratio: A dimensionless unit which denotes an amount or magnitude of one quantity relative to another.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_count_unit">
            <summary>count unit: A dimensionless unit which denotes a simple count of things.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_pi">
            <summary>pi: A dimensionless unit which denoted an irrational real number, approximately equal to 3.14159 which is the ratio of a circle's circumference to its diameter in Euclidean geometry.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_percent">
            <summary>percent: A dimensionless ratio unit which denotes numbers as fractions of 100.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_dimensionless_unit">
            <summary>dimensionless unit: A derived unit which is a standard measure of physical quantity consisting of only a numerical number without any units.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_degree">
            <summary>degree: A plane angle unit which is equal to 1/360 of a full rotation or 1.7453310^[-2] rad.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilogram_per_meter">
            <summary>kilogram per meter: An area density unit which is equal to the mass of an object in kilograms divided by one meter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_linear_density_unit">
            <summary>linear density unit: A density unit which is a standard measure of the mass exerting an influence on a one-dimensional object.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_density_unit">
            <summary>density unit: A derived unit which is a standard measure of the influence exerted by some mass.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_enzyme_unit">
            <summary>enzyme unit: A catalytic unit activity which is equal to the amount of the enzyme that catalyzes the conversion of 1 micro mole of substrate per minute.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mass_per_unit_volume">
            <summary>mass per unit volume: A concentration unit which is a standard measure of the mass of a substance in a given volume (density).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_unit_per_liter">
            <summary>unit per liter: A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one liter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_unit_per_milliliter">
            <summary>unit per milliliter: A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one milliliter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_unit_per_volume_unit">
            <summary>unit per volume unit: A derived concentration unit which is a standard measure of the number of units, as an agreed arbitrary amount, of a given substance per a specific volume of solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milligram_per_milliliter">
            <summary>milligram per milliliter: A mass unit density which is equal to mass of an object in milligrams divided by the volume in milliliters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_gram_per_liter">
            <summary>gram per liter: A mass unit density which is equal to mass of an object in grams divided by the volume in liters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilogram_per_liter">
            <summary>kilogram per liter: A mass unit density which is equal to mass of an object in kilograms divided by the volume in liters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_gram_per_milliliter">
            <summary>gram per milliliter: A mass unit density which is equal to mass of an object in grams divided by the volume in milliliter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_parts_per_quadrillion">
            <summary>parts per quadrillion: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^[15].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_parts_per_trillion">
            <summary>parts per trillion: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^[12].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_parts_per_billion">
            <summary>parts per billion: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure as long as they are the same or 1 part in 10^[9].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_parts_per_million">
            <summary>parts per million: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^[6].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_parts_per_thousand">
            <summary>parts per thousand: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1000 regardless of the units of measure as long as they are the same.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_parts_per_hundred">
            <summary>parts per hundred: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 100 regardless of the units of measure as long as they are the same.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_parts_per_notation">
            <summary>parts per notation: A dimensionless concentration notation which describes the amount of one substance in another. It is the ratio of the amount of the substance of interest to the amount of that substance plus the amount of the substance.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_volume_percentage">
            <summary>volume percentage: A dimensionless concentration unit which denotes the volume of the solute in mL per 100 mL of the resulting solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mass_volume_percentage">
            <summary>mass volume percentage: A dimensionless concentration unit which denotes the mass of the substance in a mixture as a percentage of the volume of the entire mixture.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mass_percentage">
            <summary>mass percentage: A dimensionless concentration unit which denotes the mass of a substance in a mixture as a percentage of the mass of the entire mixture.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_watt_per_steradian">
            <summary>watt per steradian: A radiant intensity unit which is equal to one kilogram meter squared per second cubed per steradian.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_radiance_unit">
            <summary>radiance unit: A derived unit which is a standard measure of the power of electromagnetic radiation through space or through a material medium in the form of electromagnetic waves.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microeinstein_per_square_meter_per_second">
            <summary>microeinstein per square meter per second: An irradiance unit which is equal to one microeinstein per square meter per second or 10^[-6] microeinstein/sm^[2].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_radiant_intensity_unit">
            <summary>radiant intensity unit: A derived unit which is a standard measure of the intensity of electromagnetic radiation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_watt_per_steradian_per_square_meter">
            <summary>watt per steradian per square meter: A radiance unit which is equal to one watt of radiant power incident per steradian solid angle per one square meter projected area of the source, as viewed from the given direction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_light_unit">
            <summary>light unit: A derived unit which is a standard measure of the intensity of light.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_einstein_per_square_meter_per_second">
            <summary>einstein per square meter per second: An irradiance unit which is equal to one einstein per square meter per second. One einstein is one mole of photons, regardless of their frequency. Therefore, the number of photons in an einstein is Avogadro's number.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_watt_per_square_meter">
            <summary>watt per square meter: An irradiance unit which is equal to 1 watt of radiant power incident per one square meter surface area.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_irradiance_unit">
            <summary>irradiance unit: A derived unit which is a standard measure of the power of electromagnetic radiation at a surface, per unit area.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_foot_candle">
            <summary>foot candle: An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 foot^[2]. One footcandle is equal to 10.76 lux.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_half_life">
            <summary>half life: A time unit which represents the period over which the activity or concentration of a specified chemical or element falls to half its original activity or concentration.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_century">
            <summary>century: A time unit which is equal to 100 years.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanosecond">
            <summary>nanosecond: A time unit which is equal to one thousandth of one millionth of a second or 10^[-9] s.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_time_derived_unit">
            <summary>time derived unit: A derived unit which is a standard measure of the dimension in which events occur in sequence.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_counts_per_minute">
            <summary>counts per minute: An activity (of a radionuclide) unit which is equal to the number of light emissions produced by ionizing radiation in one minute.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_disintegrations_per_minute">
            <summary>disintegrations per minute: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per minute or there is one atom disintegration per minute.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microcurie">
            <summary>microcurie: An activity (of a radionuclide) unit which is equal to one millionth of a curie or 10^[-6] Ci.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millicurie">
            <summary>millicurie: An activity (of a radionuclide) unit which is equal to one thousandth of a curie or 10^[-3] Ci.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanosievert">
            <summary>nanosievert: A dose equivalent unit which is equal to one thousandth of a millionth of a sievert or 10^[-9] Sv.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanogray">
            <summary>nanogray: An absorbed dose unit which is equal to one thousandth of a millionth of a gray or 10^[-9] Gy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milligray">
            <summary>milligray: An absorbed dose unit which is equal to one thousandth of a gray or 10^[-3] Gy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microgray">
            <summary>microgray: An absorbed dose unit which is equal to one millionth of a gray or 10^[-6] Gy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_Roentgen_equivalent_man">
            <summary>Roentgen equivalent man: A dose equivalent unit which when multiplied by hundred is equal to one sievert or 1 Sv. 1 Sv is equal to 100 rem.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microsievert">
            <summary>microsievert: A dose equivalent unit which is equal to one millionth of a sievert or 10^[-6] Sv.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millisievert">
            <summary>millisievert: A dose equivalent unit which is equal to one thousandth of a sievert or 10^[-3] Sv.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_sievert">
            <summary>sievert: A dose equivalent unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_roentgen">
            <summary>roentgen: An exposure unit which is equal to the amount of radiation required to liberate positive and negative charges of one electrostatic unit of charge in 1 cm^[3] of air at standard temperature and pressure (STP). This corresponds to the generation of approximately 2.0810^[9] ion pairs.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_rad">
            <summary>rad: An absorbed dose unit which is equal to 0.01 gray (Gy).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_gray">
            <summary>gray: An absorbed dose unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_curie">
            <summary>curie: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which there are 3.7 x 10^[10] atom disintegration per second (dps).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_becquerel">
            <summary>becquerel: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second (dps).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_exposure_unit">
            <summary>exposure unit: A derived unit which is a standard measure of the quantity that expresses the ability of radiation to ionize air and thereby create electric charges which can be collected and measured.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_dose_equivalent_unit">
            <summary>dose equivalent unit: A derived unit which is a standard measure of the expression of dose in terms of its biological effect.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_absorbed_dose_unit">
            <summary>absorbed dose unit: A derived unit which is a standard measure of the energy imparted by ionizing radiation to unit mass of matter such as tissue.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_activity__of_a_radionuclide__unit">
            <summary>activity (of a radionuclide) unit: A derived unit which is a standard measure of the transformation (disintegration) rate of a radioactive substance.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_radiation_unit">
            <summary>radiation unit: A derived unit which is a standard measure of the amount of radiation emitted by a given radiation source as well as the amount of radiation absorbed or deposited in a specific material by a radiation source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_temperature_derived_unit">
            <summary>temperature derived unit: A derived unit which represents a standard measurement of temperature in a particular temperature scale.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_steradian">
            <summary>steradian: A solid angle unit which is equal to the solid angle subtended at the center of a sphere by an area on the surface of the sphere that is equal to the radius squared.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_solid_angle_unit">
            <summary>solid angle unit: A derived unit which is a standard measure of the angle formed by three or more planes intersecting at a common point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_radian">
            <summary>radian: A plane angle unit which is equal to the angle subtended at the center of a circle by an arc equal in length to the radius of the circle, approximately 57 degrees 17 minutes and 44.6 seconds.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_plane_angle_unit">
            <summary>plane angle unit: A derived unit which is a standard measure of the angle formed by two straight lines in the same plane.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_angle_unit">
            <summary>angle unit: A derived unit which is a standard measure of the figure or space formed by the junction of two lines or planes.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_katal">
            <summary>katal: A catalytic unit activity which is equal to the activity of a catalyst in moles per second, such as the amount of an enzyme needed to transform one mole of substrate per second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_catalytic_activity_unit">
            <summary>catalytic activity unit: A derived unit which is a standard measure of the amount of the action of a catalyst.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_lumen">
            <summary>lumen: A luminous flux unit which is equal to the luminous flux emitted into 1 steradian by a point source of 1 candela.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_luminous_flux_unit">
            <summary>luminous flux unit: A derived unit which is a standard measure of the flow of radiant energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_lux">
            <summary>lux: An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 m^[2].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_illuminance_unit">
            <summary>illuminance unit: A derived unit which is a standard measure of the luminous flux incident on a unit area.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_watt">
            <summary>watt: A power unit which is equal to the power used when work is done at the rate of 1 joule per second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_power_unit">
            <summary>power unit: A derived unit which is a standard measure power or the rate of doing work.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_joule">
            <summary>joule: An energy unit which is equal to the energy required when a force of 1 newton moves an object 1 meter in the direction of the force.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_energy_unit">
            <summary>energy unit: A derived unit which is a standard measure of the work done by a certain force (gravitational, electric, magnetic, force of inertia, etc).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_pascal">
            <summary>pascal: A pressure unit which is equal to the pressure or stress on a surface caused by a force of 1 newton spread over a surface of 1 m^[2].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_pressure_unit">
            <summary>pressure unit: A derived unit which is a standard measure of the force applied to a given area.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_newton">
            <summary>newton: A force unit which is equal to the force required to cause an acceleration of 1m/s2 of a mass of 1 Kg in the direction of the force.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_force_unit">
            <summary>force unit: A derived unit which is a standard measure of the force is applied when a mass is accelerated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_hertz">
            <summary>hertz: A frequency unit which is equal to 1 complete cycle of a recurring phenomenon in 1 second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_frequency_unit">
            <summary>frequency unit: A derived unit which is a standard measure of the number of repetitive actions in a particular time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_femtoliter">
            <summary>femtoliter: A volume unit which is equal to 10^[-15] L.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picoliter">
            <summary>picoliter: A volume unit which is equal to 10^[-12] L.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanoliter">
            <summary>nanoliter: A volume unit which is equal to one thousandth of one millionth of a liter or 10^[-9] L.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microliter">
            <summary>microliter: A volume unit which is equal to one millionth of a liter or 10^[-6] L.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cubic_decimeter">
            <summary>cubic decimeter: A volume unit which is equal to one thousand of a cubic meter or 10^[-3] m^[3], or to 1 L.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_liter">
            <summary>liter: A volume unit which is equal to one thousandth of a cubic meter or 10^[-3] m^[3], or to 1 decimeter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milliliter">
            <summary>milliliter: A volume unit which is equal to one thousandth of a liter or 10^[-3] L, or to 1 cubic centimeter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cubic_centimeter">
            <summary>cubic centimeter: A volume unit which is equal to one millionth of a cubic meter or 10^[-9] m^[3], or to 1 ml.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cubic_meter">
            <summary>cubic meter: A volume unit which is equal to the volume of a cube with edges one meter in length. One cubic meter equals to 1000 liters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_volume_unit">
            <summary>volume unit: A derived unit which is a standard measure of the amount of space occupied by any substance, whether solid, liquid, or gas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_meter_per_second">
            <summary>meter per second: A speed/velocity unit which is equal to the speed of an object traveling 1 meter distance in one second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cubic_meter_per_kilogram">
            <summary>cubic meter per kilogram: A specific volume unit which is equal to one cubic meter volume occupied by one kilogram of a particular substance.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_one_turn_per_second">
            <summary>one turn per second: A rotational frequency unit which is equal to 1 complete turn in a period of time that equals to 1 second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilogram_meter_per_second">
            <summary>kilogram meter per second: A momentum unit which is equal to the momentum of a one kilogram mass object with a speed of one meter per second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cubic_centimeter_per_mole">
            <summary>cubic centimeter per mole: A molar volume unit which is equal to 1 cubic centimeter occupied by one mole of a substance in the form of a solid, liquid, or gas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_cubic_meter_per_mole">
            <summary>cubic meter per mole: A molar volume unit which is equal to 1 cubic meter occupied by one mole of a substance in the form of a solid, liquid, or gas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_gram_per_mole">
            <summary>gram per mole: A molar mass unit which is equal to one gram of mass of one mole of chemical element or chemical compound.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilogram_per_mole">
            <summary>kilogram per mole: A molar mass unit which is equal to one kilogram of mass of one mole of chemical element or chemical compound.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilogram_per_square_meter">
            <summary>kilogram per square meter: An area density unit which is equal to the mass of an object in kilograms divided by the surface area in meters squared.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_candela_per_square_meter">
            <summary>candela per square meter: A luminance unit which is equal to a luminous intensity of one candela radiating from a surface whose area is one square meter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_gram_per_cubic_centimeter">
            <summary>gram per cubic centimeter: A mass unit density which is equal to mass of an object in grams divided by the volume in cubic centimeters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilogram_per_cubic_meter">
            <summary>kilogram per cubic meter: A mass unit density which is equal to mass of an object in kilograms divided by the volume in cubic meters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_square_millimeter">
            <summary>square millimeter: An area unit which is equal to one millionth of a square meter or 10^[-6] m^[2].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_square_centimeter">
            <summary>square centimeter: An area unit which is equal to one thousand of square meter or 10^[-3] m^[2].</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_square_meter">
            <summary>square meter: An area unit which is equal to an area enclosed by a square with sides each 1 meter long.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_radian_per_second">
            <summary>radian per second: An angular unit velocity which is equal to about 9.54930 rpm (revolutions per minute).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_radian_per_second_per_second">
            <summary>radian per second per second: An angular unit acceleration which is equal to the angular acceleration of an object changing its angular velocity by 1rad/s over a time period that equals one second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_meter_per_second_per_second">
            <summary>meter per second per second: An acceleration unit which is equal to the acceleration an object changing its velocity by 1meter/s over a time period that equals one second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mole_fraction">
            <summary>mole fraction: A concentration unit which denotes the number of moles of solute as a proportion of the total number of moles in a solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_normal">
            <summary>normal: A unit of concentration which is one gram equivalent of a solute per liter of solution. A gram equivalent weight or equivalent is a measure of the reactive capacity of a given molecule.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_unit_of_normality">
            <summary>unit of normality: A unit of concentration which highlights the chemical nature of salts.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_femtomolar">
            <summary>femtomolar: A unit of molarity which is equal to 10^[-15] M.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picomolal">
            <summary>picomolal: A molality unit which is equal to 10^[-12] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanomolal">
            <summary>nanomolal: A molality unit which is equal to one thousandth of one millionth of a molal or 10^[-9] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_micromolal">
            <summary>micromolal: A molality unit which is equal to one millionth of a molal or 10^[-6] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millimolal">
            <summary>millimolal: A molality unit which is equal to one thousandth of a molal or 10^[-3] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_molal">
            <summary>molal: A unit of concentration which expresses a concentration of a solution of 1 mole per kilogram of solvent (mol/kg).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_unit_of_molality">
            <summary>unit of molality: A derived concentration unit which is a standard measure of the number of moles of a given substance per kilogram of solvent.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picomolar">
            <summary>picomolar: A unit of molarity which is equal to 10^[-12] M.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanomolar">
            <summary>nanomolar: A unit of molarity which is equal to one thousandth of one millionth of a molar or 10^[-9] M.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_micromolar">
            <summary>micromolar: A unit of molarity which is equal to one millionth of a molar or 10^[-6] M.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millimolar">
            <summary>millimolar: A unit of molarity which is equal to one thousandth of a molar or 10^[-3] M.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_molar">
            <summary>molar: A unit of concentration which expresses a concentration of 1 mole of solute per liter of solution (mol/L).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_unit_of_molarity">
            <summary>unit of molarity: A derived concentration unit which is a standard measure of the number of moles of a given substance per liter of solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_speed_velocity_unit">
            <summary>speed/velocity unit: A derived unit which is a standard measure of the rate of movement. Speed is measured in the same physical units of measurement as velocity, but does not contain the element of direction that velocity has. Speed is thus the magnitude component of velocity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_specific_volume_unit">
            <summary>specific volume unit: A derived unit which is a standard measure of the volume of a given mass of substance (the reciprocal of density).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_rotational_frequency_unit">
            <summary>rotational frequency unit: A derived unit which is a standard measure of the number of rotations in a given time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_momentum_unit">
            <summary>momentum unit: A derived unit which is a standard measure of the quantity of motion measured by the product of mass and velocity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_molar_volume_unit">
            <summary>molar volume unit: A derived unit which is a standard measure of the volume of a homogeneous substance containing 6.02 x 1023 atoms or molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_molar_mass_unit">
            <summary>molar mass unit: A derived unit which is a standard measure of the mass of a homogeneous substance containing 6.02 x 1023 atoms or molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_area_density_unit">
            <summary>area density unit: A density unit which is a standard measure of the mass exerting an influence on a given area.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_luminance_unit">
            <summary>luminance unit: A derived unit which is a standard measure of the luminous intensity impinging on a given area.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mass_density_unit">
            <summary>mass density unit: A density unit which is a standard measure of the mass of a substance in a given volume.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_concentration_unit">
            <summary>concentration unit: A derived unit which represents a standard measurement of how much of a given substance there is mixed with another substance.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_angular_acceleration_unit">
            <summary>angular acceleration unit: A derived unit which is a standard measure of the rate of change of angular velocity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_angular_velocity_unit">
            <summary>angular velocity unit: A derived unit which is a standard measure of the rate of angular movement about an axis; the angle rotated in a given time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_acceleration_unit">
            <summary>acceleration unit: A derived unit which is a standard measure of the rate of change of velocity in either speed or direction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_area_unit">
            <summary>area unit: A derived unit which is a standard measure of the amount of a 2-dimensional flat surface.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_derived_unit">
            <summary>derived unit: A unit which is derived from base units.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_base_unit">
            <summary>base unit: A unit which is one of a particular measure to which all measures of that type can be related.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_attomole">
            <summary>attomole: A substance unit equal to 10^[-18] mol.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_femtomole">
            <summary>femtomole: A substance unit equal to 10^[-15] mol.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picomole">
            <summary>picomole: A substance unit equal to 10^[-12] mol.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanomole">
            <summary>nanomole: A substance unit equal to one thousandth of one millionth of a mole or 10^[-9] mol.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millimole">
            <summary>millimole: A substance unit equal to a thousandth of a mol or 10^[-3] mol.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_micromole">
            <summary>micromole: A substance unit equal to a millionth of a mol or 10^[-6] mol.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microampere">
            <summary>microampere: An electric current unit current which is equal to one millionth of an ampere or 10^[-6] A.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milliampere">
            <summary>milliampere: An electric current unit current which is equal to one thousandth of an ampere or 10^[-3] A.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_year">
            <summary>year: A time unit which is equal to 12 months which is science is taken to be equal to 365.25 days.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_month">
            <summary>month: A time unit which is approximately equal to the length of time of one of cycle of the moon's phases which is science is taken to be equal to 30 days.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_week">
            <summary>week: A time unit which is equal to 7 days.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_day">
            <summary>day: A time unit which is equal to 24 hours.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_hour">
            <summary>hour: A time unit which is equal to 3600 seconds or 60 minutes.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_minute">
            <summary>minute: A time unit which is equal to 60 seconds.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picosecond">
            <summary>picosecond: A time unit which is equal to 10^[-12] s.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microsecond">
            <summary>microsecond: A time unit which is equal to one millionth of a second or 10^[-6] s.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millisecond">
            <summary>millisecond: A time unit which is equal to one thousandth of a second or 10^[-3] s.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_degree_celsius">
            <summary>degree celsius: A temperature derived unit which is equal to one Kelvin degree. However, they have their zeros at different points. The Centigrade scale has its zero at 273.15 K.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_femtogram">
            <summary>femtogram: A mass unit which is equal to 10^[-15] g.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picogram">
            <summary>picogram: A mass unit which is equal to 10^[-12] g.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanogram">
            <summary>nanogram: A mass unit which is equal to one thousandth of one millionth of a gram or 10^[-9] g.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_microgram">
            <summary>microgram: A mass unit which is equal to one millionth of a gram or 10^[-6] g.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_milligram">
            <summary>milligram: A mass unit which is equal to one thousandth of a gram or 10^[-3] g.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_gram">
            <summary>gram: A mass unit which is equal to one thousandth of a kilogram or 10^[-3] kg.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_picometer">
            <summary>picometer: A length unit which is equal to 10^[-12] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_angstrom">
            <summary>angstrom: A length unit which is equal to 10 [-10] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_nanometer">
            <summary>nanometer: A length unit which is equal to one thousandth of one millionth of a meter or 10^[-9] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_micrometer">
            <summary>micrometer: A length unit which is equal to one millionth of a meter or 10^[-6] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_millimeter">
            <summary>millimeter: A length unit which is equal to one thousandth of a meter or 10^[-3] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_centimeter">
            <summary>centimeter: A length unit which is equal to one hundredth of a meter or 10^[-2] m.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_candela">
            <summary>candela: A luminous intensity unit which equal to the luminous intensity, in a given direction, of a source that emits monochromatic radiation of frequency 540 x 1012 hertz and that has a radiant intensity in that direction of 1/683 watt per steradian.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mole">
            <summary>mole: A substance unit which is equal to the amount of substance of a molecular system which contains as many elementary entities as there are atoms in 0.012 kilogram of carbon 12.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kelvin">
            <summary>kelvin: A thermodynamic temperature unit which is equal to the fraction 1/273.16 of the thermodynamic temperature of the triple point of water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_ampere">
            <summary>ampere: An electric current unit which is equal to the constant current which, if maintained in two straight parallel conductors of infinite length, of negligible circular cross-section, and placed 1 m apart in vacuum, would produce between these conductors a force equal to 2 x 10^[-7] newton per meter of length.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_second">
            <summary>second: A time unit which is equal to the duration of 9 192 631 770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the caesium 133 atom.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_kilogram">
            <summary>kilogram: A mass unit which is equal to the mass of the International Prototype Kilogram kept by the BIPM at Svres, France.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_meter">
            <summary>meter: A length unit which is equal to the length of the path traveled by light in vacuum during a time interval of 1/299 792 458 of a second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_luminous_intensity_unit">
            <summary>luminous intensity unit: A base unit which is a standard measure of the wavelength-weighted power emitted by a light source in a particular direction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_substance_unit">
            <summary>substance unit: A base unit which is a standardized quantity of an element or compound with uniform composition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_temperature_unit">
            <summary>temperature unit: A base unit which is a standard measure of the average kinetic energy of the particles in a sample of matter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_electric_current_unit">
            <summary>electric current unit: A base unit which is a standard measure of the flow of electric charge.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_time_unit">
            <summary>time unit: A base unit which is a standard measure of the dimension in which events occur in sequence.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_mass_unit">
            <summary>mass unit: A base unit which is a standard measure of the amount of matter/energy of a physical object.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_length_unit">
            <summary>length unit: A base unit which is a standard measure of the distance between two points.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.UO_unit">
            <summary>unit: A unit of measurement is a standardized quantity of a physical quality.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_ProfoundProbability">
            <summary>ProteinScape:ProfoundProbability: The Profound probability score stored by ProteinScape.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_combined_pmf___ms_ms_search">
            <summary>combined pmf + ms-ms search: Search that includes data from Peptide Mass Fingerprint (PMF) and MS/MS (aka Peptide Fragment Fingerprint - PFF).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MaxQuant">
            <summary>MaxQuant: MaxQuant is a quantitative proteomics software package designed for analyzing large mass spectrometric data sets. It is specifically aimed at high resolution MS data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_XCMS">
            <summary>XCMS: Bioconductor package XCMS for preprocessing high-throughput, untargeted analyte profiling data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FAIMS_CV">
            <summary>FAIMS CV: The DC potential applied to the asymmetric waveform in FAIMS that compensates for the difference between high and low field mobility of an ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FAIMS_compensation_voltage">
            <summary>FAIMS compensation voltage: The DC potential applied to the asymmetric waveform in FAIMS that compensates for the difference between high and low field mobility of an ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectrumMill__Discriminant_Score">
            <summary>SpectrumMill: Discriminant Score: Discriminant score from Agilent SpectrumMill software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scaffold__Protein_Probability">
            <summary>Scaffold: Protein Probability: Scaffold protein probability score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_minimum_number_of_enzymatic_termini">
            <summary>minimum number of enzymatic termini: Minimum number of enzymatic termini a pepide must have to be accepted.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scaffold__Minimum_Peptide_Probability">
            <summary>Scaffold: Minimum Peptide Probability: Minimum probability a peptide must have to be accepted for protein scoring.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scaffold__Minimum_Protein_Probability">
            <summary>Scaffold: Minimum Protein Probability: Minimum protein probability a protein must have to be accepted.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scaffold__Minimum_Peptide_Count">
            <summary>Scaffold: Minimum Peptide Count: Minimum number of peptides a protein must have to be accepted.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_report_only_spectra_assigned_to_identified_proteins">
            <summary>report only spectra assigned to identified proteins: .</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectrumMill__SPI">
            <summary>SpectrumMill: SPI: SpectrumMill SPI score (%).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectrumMill__Score">
            <summary>SpectrumMill: Score: Spectrum mill peptide score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinLynx__Ladder_Score">
            <summary>ProteinLynx: Ladder Score: Waters ProteinLynx Ladder score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinLynx__Log_Likelihood">
            <summary>ProteinLynx: Log Likelihood: ProteinLynx log likelihood score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IdentityE_Score">
            <summary>IdentityE Score: Waters IdentityE peptide score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scaffold__Peptide_Probability">
            <summary>Scaffold: Peptide Probability: Scaffold peptide probability score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectrumMill_directories">
            <summary>SpectrumMill directories: Source file for this mzIdentML was in Agilent SpectrumMill directory format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinLynx_XML">
            <summary>ProteinLynx XML: Source file for this mzIdentML was in Waters ProteinLynx XML format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IdentityE_XML">
            <summary>IdentityE XML: Source file for this mzIdentML was in Waters IdentityE XML format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Discoverer_MSF">
            <summary>Discoverer MSF: Source file for this mzIdentML was in Thermo Scientific Discoverer MSF format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sequest_SQT">
            <summary>Sequest SQT: Source file for this mzIdentML was a Sequest SQT.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scaffold_nativeID_format">
            <summary>Scaffold nativeID format: Scaffold native ID format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scaffold">
            <summary>Scaffold: Scaffold analysis software, see www.proteomesoftware.com.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_TOF_TOF_T2D_file">
            <summary>AB SCIEX TOF/TOF T2D file: Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument export format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_TOF_TOF_T2D_nativeID_format">
            <summary>AB SCIEX TOF/TOF T2D nativeID format: file=xsd:IDREF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MALDI_Solutions">
            <summary>MALDI Solutions: Shimadzu Biotech software for data acquisition, processing, and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Shimadzu_Biotech_software">
            <summary>Shimadzu Biotech software: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_apex_series">
            <summary>Bruker Daltonics apex series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autoflex">
            <summary>autoflex: Bruker Daltonics' autoflex: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autoflex_III_TOF_TOF_smartbeam">
            <summary>autoflex III TOF/TOF smartbeam: Bruker Daltonics' autoflex III TOF/TOF smartbeam: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autoflex_II_TOF_TOF">
            <summary>autoflex II TOF/TOF: Bruker Daltonics' autoflex II TOF/TOF: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_microflex_II">
            <summary>microflex II: Bruker Daltonics' microflex II: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_solariX">
            <summary>solariX: Bruker Daltonics' solariX: ESI, MALDI, Qh-FT_ICR.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_solarix_series">
            <summary>Bruker Daltonics solarix series: Bruker Daltonics' solarix: ESI quadrupole ion trap, APCI, APPI, ETD, PTR.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_maXis_series">
            <summary>Bruker Daltonics maXis series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_amaZon_X">
            <summary>amaZon X: Bruker Daltonics' amaZon X: ESI quadrupole ion trap, APCI, APPI, ETD, PTR.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_amaZon_series">
            <summary>Bruker Daltonics amaZon series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ultrafleXtreme">
            <summary>ultrafleXtreme: Bruker Daltonics' ultrafleXtreme: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_microflex_LRF">
            <summary>microflex LRF: Bruker Daltonics' microflex LRF: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_amaZon_ETD">
            <summary>amaZon ETD: Bruker Daltonics' amaZon ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, ETD, PTR.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_maXis">
            <summary>maXis: Bruker Daltonics' maXis: ESI Q-TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_micrOTOF_II">
            <summary>micrOTOF II: Bruker Daltonics' micrOTOF II: ESI TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_UltroTOF_Q">
            <summary>UltroTOF-Q: Bruker Daltonics' UltroTOF-Q: ESI Q-TOF (MALDI optional).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BioTOF_III">
            <summary>BioTOF III: Bruker Daltonics' BioTOF III: ESI TOF</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BioTOF">
            <summary>BioTOF: Bruker Daltonics' BioTOF: ESI TOF</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_micrOTOF_series">
            <summary>Bruker Daltonics micrOTOF series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_BioTOF_series">
            <summary>Bruker Daltonics BioTOF series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_flex_series">
            <summary>Bruker Daltonics flex series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_esquire_series">
            <summary>Bruker Daltonics esquire series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_from_database_nativeID_format_1001532">
            <summary>spectrum from database nativeID format: databasekey=xsd:string</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_from_ProteinScape_database_nativeID_format">
            <summary>spectrum from ProteinScape database nativeID format: databasekey=xsd:long</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mzML_unique_identifier">
            <summary>mzML unique identifier: mzMLid=xsd:IDREF</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectra_data_details">
            <summary>spectra data details: Child-terms contain information to map the results back to spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Mascot_query_number">
            <summary>Mascot query number: query=xsd:nonNegativeInteger</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Proteinscape_spectra">
            <summary>Proteinscape spectra: Spectra from Bruker/Protagen Proteinscape database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_from_database_nativeID_format_1001526">
            <summary>spectrum from database nativeID format: databasekey=xsd:Long</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precursor_neutral_loss_">
            <summary>precursor neutral loss : This term can describe a neutral loss m/z value that is lost from an ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fragment_neutral_loss">
            <summary>fragment neutral loss: This term can describe a neutral loss m/z value that is lost from an ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__precursor_ion">
            <summary>frag: precursor ion: Fragmentation information, type of product: precursor ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__precursor_ion___NH3">
            <summary>frag: precursor ion - NH3: Fragmentation information, type of product: precursor ion without ammonia.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__precursor_ion___H2O">
            <summary>frag: precursor ion - H2O: Fragmentation information, type of product: precursor ion without water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__x_ion___NH3">
            <summary>frag: x ion - NH3: Fragmentation information, type of product: x ion without ammonia.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__x_ion___H2O">
            <summary>frag: x ion - H2O: Fragmentation information, type of product: x ion without water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__z_ion___NH3">
            <summary>frag: z ion - NH3: Fragmentation information, type of product: z ion without ammonia.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__z_ion___H2O">
            <summary>frag: z ion - H2O: Fragmentation information, type of product: z ion without water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__c_ion___NH3">
            <summary>frag: c ion - NH3: Fragmentation information, type of product: c ion without ammonia.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__c_ion___H2O">
            <summary>frag: c ion - H2O: Fragmentation information, type of product: c ion without water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_accession_filter_string">
            <summary>DB accession filter string: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_sequence_filter_pattern">
            <summary>DB sequence filter pattern: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sequence_database_filters">
            <summary>Sequence database filters: Sequence database filters which actually can contains values, e.g. to limit PI value of the sequences used to search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sequence_database_filter_types">
            <summary>Sequence database filter types: Filter types which are used to filter a sequence database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TSQ_Vantage">
            <summary>TSQ Vantage: TSQ Vantage.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Agilent_MassHunter_file">
            <summary>Agilent MassHunter file: A data file found in an Agilent MassHunter directory which contains raw data acquired by an Agilent mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Agilent_MassHunter_nativeID_format">
            <summary>Agilent MassHunter nativeID format: scanId=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_Score">
            <summary>ProteinExtractor:Score: The score calculated by ProteinExtractor.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_SequestMetaScore">
            <summary>ProteinScape:SequestMetaScore: The Sequest meta score calculated by ProteinScape from the original Sequest scores.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_IntensityCoverage">
            <summary>ProteinScape:IntensityCoverage: The intensity coverage of the identified peaks in the spectrum calculated by ProteinScape.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_PFFSolverScore">
            <summary>ProteinScape:PFFSolverScore: The ProteinSolver score stored by ProteinScape.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_PFFSolverExp">
            <summary>ProteinScape:PFFSolverExp: The ProteinSolver exp value stored by ProteinScape.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sonar_Score">
            <summary>Sonar:Score: The Sonar score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MSFit_Mowse_score">
            <summary>MSFit:Mowse score: The MSFit Mowse score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Profound_ClusterRank">
            <summary>Profound:ClusterRank: The Profound cluster rank.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Profound_Cluster">
            <summary>Profound:Cluster: The Profound cluster score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Profound_z_value">
            <summary>Profound:z value: The Profound z value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_SearchEventId">
            <summary>ProteinScape:SearchEventId: The SearchEventId of the SearchEvent in the ProteinScape database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_SearchResultId">
            <summary>ProteinScape:SearchResultId: The SearchResultId of this peptide as SearchResult in the ProteinScape database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_no_threshold">
            <summary>no threshold: In case no threshold was used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_percolaror_PEP_">
            <summary>percolaror:PEP : Posterior error probability.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_percolator_score_">
            <summary>percolator:score : percolator:score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_percolator_Q_value">
            <summary>percolator:Q value: percolator:Q value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Percolator_">
            <summary>Percolator : Percolator.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Mascot_Integra_">
            <summary>Mascot Integra : Mascot Integra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Mascot_Distiller_">
            <summary>Mascot Distiller : Mascot Distiller.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor">
            <summary>ProteinExtractor: An algorithm for protein determination/assembly integrated into Bruker's ProteinScape.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_filtering">
            <summary>data filtering: Filtering out part of the data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_m_z_calibration">
            <summary>m/z calibration: Calibration of data point m/z positions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_intensity_normalization">
            <summary>intensity normalization: Normalization of data point intensities.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_TOF_TOF_Series_Explorer_Software">
            <summary>AB SCIEX TOF/TOF Series Explorer Software: AB SCIEX or Applied Biosystems software for TOF/TOF data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_TOF_TOF_5800">
            <summary>AB SCIEX TOF/TOF 5800: AB SCIEX or Applied Biosystems|MDS Analytical Technologies AB SCIEX TOF/TOF 5800 Analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_TOF_TOF_database">
            <summary>AB SCIEX TOF/TOF database: Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_TOF_TOF_nativeID_format">
            <summary>AB SCIEX TOF/TOF nativeID format: jobRun=xsd:nonNegativeInteger spotLabel=xsd:string spectrum=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_null_terminated_ASCII_string">
            <summary>null-terminated ASCII string: Sequence of zero or more non-zero ASCII characters terminated by a single null (0) byte.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Mascot_Parser">
            <summary>Mascot Parser: Mascot Parser was used to analyze the spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectraST">
            <summary>SpectraST: SpectraST was used to analyze the spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_xtandem">
            <summary>xtandem: X!Tandem was used to analyze the spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMSSA">
            <summary>OMSSA: Open Mass Spectrometry Search Algorithm was used to analyze the spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CRM_chromatogram_OBSOLETE">
            <summary>CRM chromatogram: Chromatogram created by creating an array of the measurements of a series of monitored reactions at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_consecutive_reaction_monitoring_chromatogram_OBSOLETE">
            <summary>consecutive reaction monitoring chromatogram: Chromatogram created by creating an array of the measurements of a series of monitored reactions at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SRM_chromatogram">
            <summary>SRM chromatogram: Chromatogram created by creating an array of the measurements of a selectively monitored reaction at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_reaction_monitoring_chromatogram">
            <summary>selected reaction monitoring chromatogram: Chromatogram created by creating an array of the measurements of a selectively monitored reaction at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SIM_chromatogram">
            <summary>SIM chromatogram: Chromatogram created by creating an array of the measurements of a selectively monitored ion at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_ion_monitoring_chromatogram">
            <summary>selected ion monitoring chromatogram: Chromatogram created by creating an array of the measurements of a selectively monitored ion at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_modification_details">
            <summary>peptide modification details: The children of this term can be used to describe modifications.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_taxonomy__Swiss_Prot_ID">
            <summary>taxonomy: Swiss-Prot ID: This term is used if a swiss prot taxonomy id is specified, e.g. Human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_taxonomy__scientific_name">
            <summary>taxonomy: scientific name: This term is used if a scientific name is specified, e.g. Homo sapiens. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_taxonomy__common_name">
            <summary>taxonomy: common name: This term is used if a common name is specified, e.g. human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_taxonomy__NCBI_TaxID">
            <summary>taxonomy: NCBI TaxID: This term is used if a NCBI TaxID is specified, e.g. 9606 for Homo sapiens.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MS2_file">
            <summary>MS2 file: MS2 file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DTASelect_file">
            <summary>DTASelect file: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_XML_format">
            <summary>Phenyx XML format: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PEFF_format">
            <summary>PEFF format: The sequence database was stored in the PEFF (PSI enhanced FastA file) format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_greylag">
            <summary>greylag: greylag identification software, wee greylag.org.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_unknown_modification">
            <summary>unknown modification: This term should be given if the modification was unknown.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_file_format">
            <summary>file format: Format of data files.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_generation_information">
            <summary>spectrum generation information: Vocabularies describing the spectrum generation information.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_processing_software">
            <summary>data processing software: Conversion software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_analysis_software">
            <summary>analysis software: Analysis software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_acquisition_software">
            <summary>acquisition software: Acquisition software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quality_estimation_with_implicite_decoy_sequences">
            <summary>quality estimation with implicite decoy sequences: Decoy entries are generated during the search, not explicitly stored in a database (like Mascot Decoy).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_composition_only_decoy">
            <summary>DB composition only decoy: Decoy database composition: database contains only decoy entries.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_type_shuffle">
            <summary>decoy DB type shuffle: Decoy type: Amino acids of protein sequences are used in a random order.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_generation_algorithm">
            <summary>decoy DB generation algorithm: Name of algorithm used for decoy generation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_details">
            <summary>decoy DB details: Details of decoy generation and database structure.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMSSA_e_value_threshold">
            <summary>OMSSA e-value threshold: Threshold for OMSSA e-value for quality estimation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pep_FDR_threshold">
            <summary>pep:FDR threshold: False-discovery rate threshold for peptides.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_prot_FDR_threshold">
            <summary>prot:FDR threshold: False-discovery rate threshold for proteins.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_PhenyxWeighting">
            <summary>ProteinExtractor:PhenyxWeighting: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_PhenyxUniqueScore">
            <summary>ProteinExtractor:PhenyxUniqueScore: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_PhenyxPeptideScoreThreshold">
            <summary>ProteinExtractor:PhenyxPeptideScoreThreshold: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_UsePhenyx">
            <summary>ProteinExtractor:UsePhenyx: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_ProteinSolverWeighting">
            <summary>ProteinExtractor:ProteinSolverWeighting: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_ProteinSolverUniqueScore">
            <summary>ProteinExtractor:ProteinSolverUniqueScore: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_ProteinSolverPeptideScoreThreshold">
            <summary>ProteinExtractor:ProteinSolverPeptideScoreThreshold: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_UseProteinSolver">
            <summary>ProteinExtractor:UseProteinSolver: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_SequestWeighting">
            <summary>ProteinExtractor:SequestWeighting: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_SequestUniqueScore">
            <summary>ProteinExtractor:SequestUniqueScore: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_SequestPeptideScoreThreshold">
            <summary>ProteinExtractor:SequestPeptideScoreThreshold: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_UseSequest">
            <summary>ProteinExtractor:UseSequest: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_MascotWeighting">
            <summary>ProteinExtractor:MascotWeighting: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_MascotUseIdentityScore">
            <summary>ProteinExtractor:MascotUseIdentityScore: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_MascotUniqueScore">
            <summary>ProteinExtractor:MascotUniqueScore: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_MascotPeptideScoreThreshold">
            <summary>ProteinExtractor:MascotPeptideScoreThreshold: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_UseMascot">
            <summary>ProteinExtractor:UseMascot: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_MinNumberOfPeptides">
            <summary>ProteinExtractor:MinNumberOfPeptides: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_MaxProteinMass">
            <summary>ProteinExtractor:MaxProteinMass: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_MaxNumberOfProteins">
            <summary>ProteinExtractor:MaxNumberOfProteins: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_IncludeIdentified">
            <summary>ProteinExtractor:IncludeIdentified: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_GenerateNonRedundant">
            <summary>ProteinExtractor:GenerateNonRedundant: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinExtractor_Methodname">
            <summary>ProteinExtractor:Methodname: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_translation_table_description">
            <summary>translation table description: A URL that describes the translation table used to translate the nucleotides to amino acids.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protXML_file">
            <summary>protXML file: Source file for this mzIdentML was a protXML file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pepXML_file">
            <summary>pepXML file: Source file for this mzIdentML was a pepXML file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectraST_delta">
            <summary>SpectraST:delta: SpectraST normalised difference between dot product of top hit and runner-up.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectraST_discriminant_score_F">
            <summary>SpectraST:discriminant score F: SpectraST spectrum score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectraST_dot_bias">
            <summary>SpectraST:dot_bias: SpectraST measure of how much of the dot product is dominated by a few peaks.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectraST_dot">
            <summary>SpectraST:dot: SpectraST dot product of two spectra, measuring spectral similarity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_title_OBSOLETE">
            <summary>spectrum title: OBSOLETE: replaced by MS:1000796 (spectrum title): Holds the spectrum title from different input file formats, e.g. MGF TITLE.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MGF_raw_scans_OBSOLETE">
            <summary>MGF raw scans: OBSOLETE: replaced by MS:1000798 (peak list raw scans): This term can hold the raw scans attribute from an MGF input file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MGF_scans_OBSOLETE">
            <summary>MGF scans: OBSOLETE: replaced by MS:1000797 (peak list scans): This term can hold the scans attribute from an MGF input file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_tolerance_minus_value">
            <summary>search tolerance minus value: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_tolerance_plus_value">
            <summary>search tolerance plus value: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_tolerance_specification">
            <summary>search tolerance specification: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_translation_start_codons">
            <summary>translation start codons: The translation start codons used to translate the nucleotides to amino acids.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__z_2_ion">
            <summary>param: z+2 ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__z_1_ion">
            <summary>param: z+1 ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__internal_ya_ion">
            <summary>param: internal ya ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__internal_yb_ion">
            <summary>param: internal yb ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_identification_result_details">
            <summary>spectrum identification result details: This subsection describes terms which can describe details of spectrum identification results.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_xtandem_xml_file">
            <summary>xtandem xml file: Source file for this mzIdentML was an X!Tandem xml file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMSSA_xml_file">
            <summary>OMSSA xml file: Source file for this mzIdentML was an OMSSA xml file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMSSA_csv_file">
            <summary>OMSSA csv file: Source file for this mzIdentML was an OMSSA csv file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Modif">
            <summary>Phenyx:Modif: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_NumberOfMC">
            <summary>Phenyx:NumberOfMC: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_PepPvalue">
            <summary>Phenyx:PepPvalue: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Pepzscore">
            <summary>Phenyx:Pepzscore: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_User">
            <summary>Phenyx:User: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Auto">
            <summary>Phenyx:Auto: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Peptides2">
            <summary>Phenyx:Peptides2: Second number of phenyx result \"#Peptides\".</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Peptides1">
            <summary>Phenyx:Peptides1: First number of phenyx result \"#Peptides\".</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Score">
            <summary>Phenyx:Score: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_ID">
            <summary>Phenyx:ID: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_AC">
            <summary>Phenyx:AC: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Conflict_Resolution">
            <summary>Phenyx:Conflict Resolution: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_AC_Score">
            <summary>Phenyx:AC Score: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_MaxPepPvalue">
            <summary>Phenyx:MaxPepPvalue: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_MinPepzscore">
            <summary>Phenyx:MinPepzscore: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_MinPepLength">
            <summary>Phenyx:MinPepLength: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Turbo_Series">
            <summary>Phenyx:Turbo:Series: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Turbo_Coverage">
            <summary>Phenyx:Turbo:Coverage: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Turbo_ErrorTol">
            <summary>Phenyx:Turbo:ErrorTol: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Turbo">
            <summary>Phenyx:Turbo: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Trust_Parent_Charge">
            <summary>Phenyx:Trust Parent Charge: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Default_Parent_Charge">
            <summary>Phenyx:Default Parent Charge: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Scoring_Model">
            <summary>Phenyx:Scoring Model: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx_Instrument_Type">
            <summary>Phenyx:Instrument Type: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_Sum">
            <summary>sequest:Sum: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_TIC">
            <summary>sequest:TIC: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_Sequences">
            <summary>sequest:Sequences: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_identity_threshold">
            <summary>mascot:identity threshold: The Mascot result 'identity threshold'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_homology_threshold">
            <summary>mascot:homology threshold: The Mascot result 'homology threshold'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_text_file">
            <summary>text file: Simple text file of \"m/z [intensity]\" values for a PMF (or single MS-MS) search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__z_2_ion">
            <summary>frag: z+2 ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__z_1_ion">
            <summary>frag: z+1 ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__internal_ya_ion">
            <summary>frag: internal ya ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__internal_yb_ion">
            <summary>frag: internal yb ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pep_global_FDR">
            <summary>pep:global FDR: Estimation of global false discovery rate of the peptides.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_unique_to_one_protein">
            <summary>peptide unique to one protein: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_unmatched_peaks">
            <summary>number of unmatched peaks: The number of unmatched peaks.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_alternate_mass">
            <summary>alternate mass: List of masses a non-standard letter code is replaced with.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_alternate_single_letter_codes">
            <summary>alternate single letter codes: List of standard residue one letter codes which are used to replace a non-standard.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ambiguous_residues">
            <summary>ambiguous residues: Children of this term describe abiguous residues.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_msmsEval_quality">
            <summary>msmsEval quality: This term reports the quality of the spectrum assigned by msmsEval.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_quality_descriptions">
            <summary>spectrum quality descriptions: Description of the quality of the input spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_descriptions">
            <summary>spectrum descriptions: Descriptions of the input spectra. TODO: really needed?</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_descriptions">
            <summary>peptide descriptions: Descriptions of peptides. TODO: What does this mean?</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_table_options">
            <summary>mass table options: Root node for options for the mass table used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NBRF_PIR">
            <summary>NBRF PIR: The NBRF PIR was used as format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_embl_em">
            <summary>embl em: EMBL entry format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_clustal_aln">
            <summary>clustal aln: ClustalW ALN (multiple alignment) format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NCBI___p_">
            <summary>NCBI *.p*: The sequence database was stored in the NCBI formatdb (*.p*) format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ASN_1">
            <summary>ASN.1: The sequence database was storen in the ASN.1 format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FASTA_format">
            <summary>FASTA format: The sequence database was stored in the FASTA format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_file_formats">
            <summary>database file formats: The children of this term define file formats of the sequence database used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AAIndex_mass_table">
            <summary>AAIndex mass table: The masses used in the mass table are taken from AAIndex.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_table_source">
            <summary>mass table source: Children of this term specify the source of the mass table used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AA_sequence">
            <summary>AA sequence: The sequence is a amino acid sequence.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NA_sequence">
            <summary>NA sequence: The sequence is a nucleic acid sequence.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_sequence_details">
            <summary>database sequence details: Details about a single database sequence.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_xtandem_hyperscore">
            <summary>xtandem:hyperscore: The X!Tandem hyperscore.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_xtandem_expect">
            <summary>xtandem:expect: The X!Tandem expectation value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMSSA_pvalue">
            <summary>OMSSA:pvalue: OMSSA p-value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMSSA_evalue">
            <summary>OMSSA:evalue: OMSSA E-value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TODO_add_others_OBSOLETE">
            <summary>TODO_add_others: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_ShowDecoyMatches">
            <summary>mascot:ShowDecoyMatches: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_IncludeErrorTolerantMatches">
            <summary>mascot:IncludeErrorTolerantMatches: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_UseUnigeneClustering">
            <summary>mascot:UseUnigeneClustering: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_RequireBoldRed">
            <summary>mascot:RequireBoldRed: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_ShowHomologousProteinsWithSubsetOfPeptides">
            <summary>mascot:ShowHomologousProteinsWithSubsetOfPeptides: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_ShowHomologousProteinsWithSamePeptides">
            <summary>mascot:ShowHomologousProteinsWithSamePeptides: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_MinMSMSThreshold">
            <summary>mascot:MinMSMSThreshold: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_ProteinScoringMethod">
            <summary>mascot:ProteinScoringMethod: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_MaxProteinHits">
            <summary>mascot:MaxProteinHits: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_SigThreshold">
            <summary>mascot:SigThreshold: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_V8_E">
            <summary>V8-E: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_V8_DE">
            <summary>V8-DE: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Trypsin_P">
            <summary>Trypsin/P: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TrypChymo">
            <summary>TrypChymo: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PepsinA">
            <summary>PepsinA: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Lys_C_P">
            <summary>Lys-C/P: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Lys_C">
            <summary>Lys-C: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Formic_acid">
            <summary>Formic_acid: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CNBr">
            <summary>CNBr: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Chymotrypsin">
            <summary>Chymotrypsin: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Asp_N_ambic">
            <summary>Asp-N_ambic: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Asp_N">
            <summary>Asp-N: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Arg_C">
            <summary>Arg-C: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_engine_specific_input_parameter">
            <summary>search engine specific input parameter: This branch contains search engine specific input parameters (e.g. Mascot Sig Threshold).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_rank">
            <summary>protein rank: The rank of the protein in a list sorted by the search engine.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_IPI_human">
            <summary>decoy DB from IPI_human: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_IPI_cow">
            <summary>decoy DB from IPI_cow: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_IPI_chicken">
            <summary>decoy DB from IPI_chicken: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_SwissProt">
            <summary>decoy DB from SwissProt: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_IPI_zebrafish">
            <summary>decoy DB from IPI_zebrafish: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_EST">
            <summary>decoy DB from EST: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_IPI_arabidopsis">
            <summary>decoy DB from IPI_arabidopsis: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_IPI_mouse">
            <summary>decoy DB from IPI_mouse: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_IPI_rat">
            <summary>decoy DB from IPI_rat: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_from_nr">
            <summary>decoy DB from nr: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_IPI_arabidopsis">
            <summary>database IPI_arabidopsis: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_IPI_cow">
            <summary>database IPI_cow: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_IPI_chicken">
            <summary>database IPI_chicken: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_IPI_zebrafish">
            <summary>database IPI_zebrafish: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_IPI_rat">
            <summary>database IPI_rat: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_IPI_mouse">
            <summary>database IPI_mouse: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_derived_from">
            <summary>decoy DB derived from: The name of the database, the search database was derived from.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_accession_regexp">
            <summary>decoy DB accession regexp: Specify the regular expression for decoy accession numbers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_Gel">
            <summary>ProteinScape Gel: Source data for this mzIdentML was a ProteinScape Gel.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape_SearchEvent">
            <summary>ProteinScape SearchEvent: Source data for this mzIdentML was a ProteinScape SearchEvent.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_____DE__">
            <summary>(?=[DE]): </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_____BD__">
            <summary>(?=[BD]): </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_researcher">
            <summary>researcher: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_lab_personnel">
            <summary>lab personnel: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_instrument_vendor">
            <summary>instrument vendor: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_programmer">
            <summary>programmer: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_software_vendor">
            <summary>software vendor: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_role_type">
            <summary>role type: Role of a Person or Organization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__z_ion">
            <summary>param: z ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__y_ion">
            <summary>param: y ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__x_ion">
            <summary>param: x ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__w_ion">
            <summary>param: w ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__immonium_ion">
            <summary>param: immonium ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__d_ion">
            <summary>param: d ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__v_ion">
            <summary>param: v ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fragment_mass_type_mono">
            <summary>fragment mass type mono: Mass type setting for fragment mass was monoisotopic.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fragment_mass_type_average">
            <summary>fragment mass type average: Mass type setting for fragment mass was average isotopic.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_source_UniProt">
            <summary>DB source UniProt: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_source_NCBI">
            <summary>DB source NCBI: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_source_EBI">
            <summary>DB source EBI: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Trypsin">
            <summary>Trypsin: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_local_FDR">
            <summary>local FDR: Result of quality estimation: the local FDR at the current position of a sorted list.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_input_details">
            <summary>search input details: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_XML_file">
            <summary>Bruker XML file: Bruker data exchange xml.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sciex_API_III_file">
            <summary>Sciex API III file: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PerSeptive_PKS_file">
            <summary>PerSeptive PKS file: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sequest_summary">
            <summary>Sequest summary: Source file for this mzIdentML was a Sequest summary page (proteins).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sequest_out_folder">
            <summary>Sequest out folder: Source file for this mzIdentML was a Sequest folder with its out files.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_co_eluting_ion">
            <summary>co-eluting ion: Co-eluting ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_non_identified_ion">
            <summary>non-identified ion: Non-identified ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__immonium_ion">
            <summary>frag: immonium ion: Fragmentation information, type of product: immonium ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__w_ion">
            <summary>frag: w ion: Fragmentation information, type of product: w ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__v_ion">
            <summary>frag: v ion: Fragmentation information, type of product: v ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__d_ion">
            <summary>frag: d ion: Fragmentation information, type of product: d ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__a_ion___NH3">
            <summary>frag: a ion - NH3: Fragmentation information, type of product: a ion without ammonium.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__a_ion___H2O">
            <summary>frag: a ion - H2O: Fragmentation information, type of product: a ion without water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__y_ion___NH3">
            <summary>frag: y ion - NH3: Fragmentation information, type of product: y ion without ammonium ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__b_ion___NH3">
            <summary>frag: b ion - NH3: Fragmentation information, type of product: b ion without ammonium ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__c_ion">
            <summary>frag: c ion: Fragmentation information, type of product: c ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__z_ion">
            <summary>frag: z ion: Fragmentation information, type of product: z ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__a_ion">
            <summary>frag: a ion: Fragmentation information, type of product: a ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__x_ion">
            <summary>frag: x ion: Fragmentation information, type of product: x ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_m_z_error">
            <summary>product ion m/z error: The product ion m/z error.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fragment_ion_intensity">
            <summary>fragment ion intensity: The intensity of the product ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_intensity">
            <summary>product ion intensity: The intensity of the product ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fragment_ion_m_z">
            <summary>fragment ion m/z: The m/z of the product ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_m_z">
            <summary>product ion m/z: The m/z of the product ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__b_ion">
            <summary>frag: b ion: Fragmentation information, type of product: b ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__y_ion___H2O">
            <summary>frag: y ion - H2O: Fragmentation information, type of product: y ion without water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__b_ion___H2O">
            <summary>frag: b ion - H2O: Fragmentation information, type of product: b ion without water.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fragmentation_information">
            <summary>fragmentation information: Fragmentation information like ion types.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_frag__y_ion">
            <summary>frag: y ion: Fragmentation information, type of product: y ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_PeptideIdnumber">
            <summary>sequest:PeptideIdnumber: The SEQUEST result 'Id#' in out file (peptide).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_PeptideNumber">
            <summary>sequest:PeptideNumber: The SEQUEST result '#' in out file (peptide).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_PeptideRankSp">
            <summary>sequest:PeptideRankSp: The SEQUEST result 'Sp' of 'Rank/Sp' in out file (peptide). Also called 'rsp'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_PeptideSp">
            <summary>sequest:PeptideSp: The SEQUEST result 'Sp' in out file (peptide).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_prot_global_FDR">
            <summary>prot:global FDR: Estimation of global false discovery rate of the proteins.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_result_details____OBSOLETE">
            <summary>search result details 	 : OBSOLETE: Scores and global result characteristics.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_parent_mass_type_average">
            <summary>parent mass type average: Mass type setting for parent mass was average isotopic.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_parent_mass_type_mono">
            <summary>parent mass type mono: Mass type setting for parent mass was monoisotopic.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_type_settings">
            <summary>mass type settings: The type of mass difference value to be considered by the search engine (monoisotopic or average).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Phenyx">
            <summary>Phenyx: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sequest">
            <summary>Sequest: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Mascot">
            <summary>Mascot: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_PI_filter_minimum">
            <summary>DB PI filter minimum: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_PI_filter_maximum">
            <summary>DB PI filter maximum: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_MW_filter_minimum">
            <summary>DB MW filter minimum: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_MW_filter_maximum">
            <summary>DB MW filter maximum: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Sequest_out_file">
            <summary>Sequest out file: Source file for this mzIdentML was ONE Sequest out file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Mascot_DAT_file">
            <summary>Mascot DAT file: Source file for this mzIdentML was a Mascot DAT file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_quality_estimation_measure">
            <summary>protein quality estimation measure: Quality estimation score for a protein (p-value, Expect value, confidence, local FDR).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_composition_target_decoy">
            <summary>DB composition target+decoy: Decoy database composition: database contains original (target) and decoy entries.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_type_randomized">
            <summary>decoy DB type randomized: Decoy type: Amino acids of protein sequences are randomized (keeping the original protein mass).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decoy_DB_type_reverse">
            <summary>decoy DB type reverse: Decoy type: Amino acids of protein sequences are used in reverse order.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quality_estimation_with_decoy_database">
            <summary>quality estimation with decoy database: Quality estimation by decoy database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_confidence_score">
            <summary>confidence score: Result of quality estimation: confidence score.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Expect_value">
            <summary>Expect value: Result of quality estimation: Expect value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_p_value">
            <summary>p-value: Quality estimation by p-value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_modification_specificity_C_term">
            <summary>modification specificity C-term: As parameter for search engine: apply the modification only C-terminal.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_modification_specificity_N_term">
            <summary>modification specificity N-term: As parameter for search engine: apply the modification only N-terminal.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_statistics">
            <summary>search statistics: The details of the actual run of the search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Cleavage_agent_regular_expression">
            <summary>Cleavage agent regular expression: Branch containing regular expressions for cleavage enzymes.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_EST">
            <summary>database EST: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_molecular_hypothesis_considered">
            <summary>number of molecular hypothesis considered: Number of Molecular Hypothesis Considered - This is the number of molecules (e.g. peptides for proteomics) considered for a particular search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_shared_in_multiple_proteins">
            <summary>peptide shared in multiple proteins: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_total_ions">
            <summary>mascot:total ions: The Mascot result 'Total ions'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_matched_ions">
            <summary>mascot:matched ions: The Mascot result 'Matched ions'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_expectation_value">
            <summary>mascot:expectation value: The Mascot result 'expectation value'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mascot_score">
            <summary>mascot:score: The Mascot result 'Score'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paragon_contrib">
            <summary>paragon:contrib: The Paragon result 'Contrib'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paragon_expression_change_p_value">
            <summary>paragon:expression change p-value: The Paragon result 'Expression change P-value'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paragon_expression_error_factor">
            <summary>paragon:expression error factor: The Paragon result 'Expression Error Factor'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paragon_confidence">
            <summary>paragon:confidence: The Paragon result 'Confidence'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paragon_score">
            <summary>paragon:score: The Paragon result 'Score'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paragon_total_protscore">
            <summary>paragon:total protscore: The Paragon result 'Total ProtScore'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paragon_unused_protscore">
            <summary>paragon:unused protscore: The Paragon result 'Unused ProtScore'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_consensus_score">
            <summary>sequest:consensus score: The SEQUEST result 'Consensus Score'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_total_ions">
            <summary>sequest:total ions: The SEQUEST result 'Total Ions'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_matched_ions">
            <summary>sequest:matched ions: The SEQUEST result 'Matched Ions'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sf">
            <summary>sequest:sf: The SEQUEST result 'Sf'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_expectation_value">
            <summary>sequest:expectation value: The SEQUEST result 'Expectation value'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_Uniq">
            <summary>sequest:Uniq: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sp">
            <summary>sequest:sp: The SEQUEST result 'Sp' (protein).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_deltacn">
            <summary>sequest:deltacn: The SEQUEST result 'DeltaCn'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_xcorr">
            <summary>sequest:xcorr: The SEQUEST result 'Xcorr'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_probability">
            <summary>sequest:probability: The SEQUEST result 'Probability'.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_engine_specific_score">
            <summary>search engine specific score: Search engine specific scores.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__y_ion_H2O">
            <summary>param: y ion-H2O: Ion y - H2O if y significant and fragment includes STED.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__y_ion_NH3">
            <summary>param: y ion-NH3: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__b_ion_H2O">
            <summary>param: b ion-H2O: Ion b - H2O if b significant and fragment includes STED.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__b_ion_NH3">
            <summary>param: b ion-NH3: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__a_ion_H2O">
            <summary>param: a ion-H2O: Ion a - H2O if a significant and fragment includes STED.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_ambiguity_group_result_details">
            <summary>protein ambiguity group result details: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__a_ion_NH3">
            <summary>param: a ion-NH3: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TODOsequest_SelectAdvancedCV">
            <summary>TODOsequest:SelectAdvancedCV: Branch containing the CV terms for Sequest Select Advanced Input Parameters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_SelectDefault">
            <summary>sequest:SelectDefault: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_engine_specific_score_for_peptides">
            <summary>search engine specific score for peptides: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_IPI_human">
            <summary>database IPI_human: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_intensity_of_precursor_ion">
            <summary>intensity of precursor ion: The intensity of the precursor ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quantitation_software_version">
            <summary>quantitation software version: Quantitation software version.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quantitation_software_name">
            <summary>quantitation software name: Quantitation software name.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_error_on_absolute_quantity">
            <summary>error on absolute quantity: Error on absolute quantity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_absolute_quantities">
            <summary>absolute quantities: Absolute quantities.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_p_value__protein_diff_from_1_randomly_">
            <summary>p-value (protein diff from 1 randomly): P-value (protein diff from 1 randomly).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_errors_on_protein_ratios">
            <summary>errors on protein ratios: Errors on protein ratios.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_ratios">
            <summary>protein ratios: Protein ratios.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_errors_on_peptide_ratios">
            <summary>errors on peptide ratios: Errors on peptide ratios.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_ratios">
            <summary>peptide ratios: Peptide ratios.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_errors_on_peptide_areas">
            <summary>errors on peptide areas: Errors on peptide areas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_raw_areas">
            <summary>peptide raw areas: Peptide raw areas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quantification_information">
            <summary>quantification information: Quantification information.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_selectCV">
            <summary>sequest:selectCV: Branch containing the CV terms for Sequest Select Input Parameters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_sharing_details">
            <summary>peptide sharing details: Accessions Containing Sequence - Accessions for each protein containing this peptide.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_Fast">
            <summary>sequest:Fast: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_manual_validation">
            <summary>manual validation: Result of quality estimation: decision of a manual validation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_peaks_submitted">
            <summary>number of peaks submitted: The number of peaks from the original peaks listed that were submitted to the search engine.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_peaks_used">
            <summary>number of peaks used: The number of peaks from the original peak list that are used to calculate the scores for a particular search engine. All ions that have the opportunity to match or be counted even if they don't.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ions_series_considered">
            <summary>ions series considered: The ion series that were used during the calculation of the count (e.g. b, y, a, b, c, y, z, b, b-NH3, b-H20, b+, z, z-, z+, y-H3PO4, immonium).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_matched_peaks">
            <summary>number of matched peaks: The number of peaks that were matched as qualified by the ion series considered field. If a peak matches multiple ions then only 1 would be added the count.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_FormatAndLinks">
            <summary>sequest:FormatAndLinks: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__c_ion">
            <summary>param: c ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__b_ion">
            <summary>param: b ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_theoretical_mass">
            <summary>theoretical mass: The theoretical mass of the molecule (e.g. the peptide sequence and its modifications).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_single_protein_result_details">
            <summary>single protein result details: Results specific for one protein as part of a protein ambiguity group (a result not valid for all the other proteins in the protein ambiguity group).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_number_s__OBSOLETE">
            <summary>scan number(s): OBSOLETE: use spectrumID attribute of SpectrumIdentificationResult. Take from mzData.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_retention_time_s_">
            <summary>retention time(s): Retention time of the spectrum from the source file</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_c_terminal_flanking_residue">
            <summary>c-terminal flanking residue: The residue following the last amino acid in the peptide sequence as it occurs in the protein. Use 'C-term' to denote if the peptide ends at the C terminus of the protein.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_n_terminal_flanking_residue">
            <summary>n-terminal flanking residue: The residue preceeding the first amino acid in the peptide sequence as it occurs in the protein. Use 'N-term' to denote if the peptide starts at the N terminus of the protein.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_Full">
            <summary>sequest:Full: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_modeCV">
            <summary>sequest:modeCV: Branch containing the CV terms for Sequest Mode Input Parameters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_CullTo">
            <summary>sequest:CullTo: Specify cull string as value of the CVParam!</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_param__a_ion">
            <summary>param: a ion: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_stored_in_database">
            <summary>data stored in database: Source file for this mzIdentML was a data set in a database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_TopNumber">
            <summary>sequest:TopNumber: Specify \"number\" as value of the CVParam!</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_result_details">
            <summary>peptide result details: Peptide level information.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_SwissProt">
            <summary>database SwissProt: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_InfoAndLog">
            <summary>sequest:InfoAndLog: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_Chromatogram">
            <summary>sequest:Chromatogram: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_group_subset_relationship">
            <summary>protein group/subset relationship: Branch containing protein group/subset relationships. TODO: add child terms.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_confident_peptide">
            <summary>confident peptide: This counts the number of peptide sequences without regard to whether they are distinct. Multiple charges states and multiple modification states DO count as multiple peptides. The definition of 'confident' must be qualified elsewhere.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_confident_peptide_qualification">
            <summary>confident peptide qualification: The point of this entry is to define what is meant by confident for the term Confident distinct peptide sequence and/or Confident peptides. Example 1 - metric=Paragon:Confidence value=95 sense=greater than Example 2 - metric=Mascot:Eval value=0.05 sense=less than.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_confident_distinct_peptide_sequences">
            <summary>confident distinct peptide sequences: This counts the number of distinct peptide sequences. Multiple charge states and multiple modification states do NOT count as multiple sequences. The definition of 'confident' must be qualified elsewhere.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_distinct_peptide_sequences">
            <summary>distinct peptide sequences: This counts distinct sequences hitting the protein without regard to a minimal confidence threshold.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_TopPercentMostIntense">
            <summary>sequest:TopPercentMostIntense: Specify \"percentage\" as value of the CVParam!</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_ProcessAll">
            <summary>sequest:ProcessAll: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_z">
            <summary>sequest:sort_by_z: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequence_coverage">
            <summary>sequence coverage: The percent coverage for the protein based upon the matched peptide sequences (can be calculated).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_quality_estimation_measure">
            <summary>peptide quality estimation measure: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NoEnzyme">
            <summary>NoEnzyme: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_taxonomy_nomenclature_OBSOLETE">
            <summary>taxonomy nomenclature: OBSOLETE: The system used to indicate taxonomy. There should be an enumerated list of options: latin name, NCBI TaxID, common name, Swiss-Prot species ID (ex. RABIT from the full protein ID ALBU_RABIT).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_molecule_taxonomy">
            <summary>molecule taxonomy: The taxonomy of the resultant molecule from the search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_description">
            <summary>protein description: The protein description line from the sequence entry in the source database FASTA file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_ProcessCV">
            <summary>sequest:ProcessCV: Branch containing the CV terms for Sequest View / Process Input Parameters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_XCorr">
            <summary>sequest:sort_by_XCorr: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_result_details">
            <summary>protein result details: Protein level information.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_nr">
            <summary>database nr: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ms_ms_search">
            <summary>ms-ms search: An ms/ms search (with fragment ions).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_tag_search">
            <summary>tag search: A sequence tag search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pmf_search">
            <summary>pmf search: A peptide mass fingerprint search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_type">
            <summary>search type: Enumeration of type of search value (i.e. from PMF, sequence tag, MS-MS).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_type_nucleotide">
            <summary>database type nucleotide: Database contains nucleid acid sequences.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_type_amino_acid">
            <summary>database type amino acid: Database contains amino acid sequences.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_Sf">
            <summary>sequest:sort_by_Sf: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_Sequence">
            <summary>sequest:sort_by_Sequence: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_Scan">
            <summary>sequest:sort_by_Scan: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_TIC">
            <summary>sequest:sort_by_TIC: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_Sp">
            <summary>sequest:sort_by_Sp: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ions_series_considered_in_search">
            <summary>ions series considered in search: The description of the ion fragment series (including charges and neutral losses) that are considered by the search engine.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TODOscoring_model">
            <summary>TODOscoring model: DELETE. There is Phenyx:ScoringModel for Phenyx! Scoring model (more detailed granularity). TODO: add some child terms!</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Mascot_MGF_file">
            <summary>Mascot MGF file: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_neutral_loss_OBSOLETE">
            <summary>neutral loss: OBSOLETE: replaced by MS:1000336 (neutral loss): Leave this to PSI-MOD?</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quality_estimation_method_details">
            <summary>quality estimation method details: Method for quality estimation (manually or wih decoy database).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_RSp">
            <summary>sequest:sort_by_RSp: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quality_estimation_by_manual_validation">
            <summary>quality estimation by manual validation: The quality estimation was done manually.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_tolerance_on_types_OBSOLETE">
            <summary>tolerance on types: OBSOLETE: Tolerance on types.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_modification_specificity_rule">
            <summary>modification specificity rule: The specificity rules for the modifications applied by the search engine.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_modification_parameters">
            <summary>modification parameters: Modification parameters for the search engine run.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_Ref">
            <summary>sequest:sort_by_Ref: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_PreviousAminoAcid">
            <summary>sequest:sort_by_PreviousAminoAcid: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_enzyme_combination_rules_OBSOLETE">
            <summary>multiple enzyme combination rules: OBSOLETE: use attribute independent in mzIdentML instead. Description of multiple enzyme digestion protocol, if any.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_P">
            <summary>sequest:sort_by_P: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_MH_">
            <summary>sequest:sort_by_MH+: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_Ions">
            <summary>sequest:sort_by_Ions: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_dM">
            <summary>sequest:sort_by_dM: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sort_by_dCn">
            <summary>sequest:sort_by_dCn: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_cleavage_agent_name">
            <summary>cleavage agent name: The name of the cleavage agent.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_cleavage_agent_details">
            <summary>cleavage agent details: Details of cleavage agent (enzyme).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_LimitTo">
            <summary>sequest:LimitTo: Specify \"number of dtas shown\" as value of the CVParam!</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_sortCV">
            <summary>sequest:sortCV: Branch containing the CV terms for Sequest View / Sort Input Parameters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_intermediate_analysis_format">
            <summary>intermediate analysis format: Type of the source file, the  mzIdentML was created from.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_Consensus">
            <summary>sequest:Consensus: Specify depth as value of the CVParam!</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_ShowFragmentIons">
            <summary>sequest:ShowFragmentIons: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_time_taken">
            <summary>search time taken: The time taken to complete the search in seconds.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_date___time_search_performed_OBSOLETE">
            <summary>date / time search performed: OBSOLETE: use attribute in mzIdentML instead. Date and time of the actual search run.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_SequencePartialFilter">
            <summary>sequest:SequencePartialFilter: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectral_library_search">
            <summary>spectral library search: A search using a library of spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_peptide_seqs_compared_to_each_spectrum">
            <summary>number of peptide seqs compared to each spectrum: Number of peptide seqs compared to each spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_sequences_searched">
            <summary>number of sequences searched: The number of sequences (proteins / nucleotides) from the database search after filtering.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_SequenceHeaderFilter">
            <summary>sequest:SequenceHeaderFilter: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_filter_on_sequence_pattern">
            <summary>DB filter on sequence pattern: Filtering applied specifically by amino acid sequence pattern.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_NormalizeXCorrValues">
            <summary>sequest:NormalizeXCorrValues: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_translation_table">
            <summary>translation table: The translation table used to translate the nucleotides to amino acids.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_translation_frame_OBSOLETE">
            <summary>translation frame: OSBOLETE: use attribute in mzIdentML instead. The translated open reading frames from a nucleotide database considered in the search (range: 1-6).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_PI_filter">
            <summary>DB PI filter: Filtering applied specifically by predicted protein isoelectric focussing point (pI), specified as either a range or above/below a threshold value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_MW_filter">
            <summary>DB MW filter: Filtering applied specifically by protein molecular weight, specified as either a range or above/below a threshold value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_filter_on_accession_numbers">
            <summary>DB filter on accession numbers: Filtering applied specifically by accession number pattern.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DB_filter_taxonomy">
            <summary>DB filter taxonomy: A taxonomy filter was to the database search.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_filtering">
            <summary>database filtering: Was there filtering used on the database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_type">
            <summary>database type: Database containing amino acid or nucleic acid sequences.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_release_date_OBSOLETE">
            <summary>database release date: OBSOLETE: Use attribute in mzIdentML instead. Release date of the search database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_version_OBSOLETE">
            <summary>database version: OBSOLETE: Use attribute in mzIdentML instead. Version of the search database .</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_original_uri">
            <summary>database original uri: URI, from where the search database was originally downloaded.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_local_file_path_OBSOLETE">
            <summary>database local file path: OBSOLETE: Use attribute in mzIdentML instead. Local file path of the search database from the search engine's point of view.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_name">
            <summary>database name: The name of the search database (nr, SwissProt or est_human).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_database_source">
            <summary>database source: The organisation, project or laboratory from where the database is obtained (uniprot, ncbi, ebi, other).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_search_database_details">
            <summary>search database details: Details about the database searched.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_de_novo_search">
            <summary>de novo search: A de novo sequencing search (without database).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_DescriptionLines">
            <summary>sequest:DescriptionLines: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_OutputLines">
            <summary>sequest:OutputLines: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_ViewCV">
            <summary>sequest:ViewCV: Branch containing the CV terms for Sequest View Input Parameters.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequest_CleavesAt">
            <summary>sequest:CleavesAt: </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_interpretation">
            <summary>spectrum interpretation: Collection of terms from the PSI Proteome Informatics standards describing the interpretation of spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_TripleTOF_5600">
            <summary>AB SCIEX TripleTOF 5600: Applied Biosystems|MDS SCIEX TripleTOF 5500, a quadrupole - quadrupole - time-of-flight mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_QTRAP_5500">
            <summary>AB SCIEX QTRAP 5500: Applied Biosystems|MDS SCIEX QTRAP 5500.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Shimadzu_Biotech_database_entity">
            <summary>Shimadzu Biotech database entity: Shimadzu Biotech format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Shimadzu_Biotech_nativeID_format">
            <summary>Shimadzu Biotech nativeID format: source=xsd:string start=xsd:nonNegativeInteger end=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_calibration_spectrum">
            <summary>calibration spectrum: A spectrum derived from a special calibration source, rather than from the primary injected sample. A calibration spectrum is typically derived from a substance that can be used to correct systematic shift in m/z for spectra of the primary inject sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_injection_time">
            <summary>ion injection time: The length of time spent filling an ion trapping device.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_interpretation_rank">
            <summary>product interpretation rank: The integer rank given an interpretation of an observed product ion. For example, if y8 is selected as the most likely interpretation of a peak, then it is assigned a rank of 1.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ATAQS">
            <summary>ATAQS: Software suite used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the Institute for Systems Biology.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MaRiMba_OBSOLETE">
            <summary>MaRiMba: Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology. http://tools.proteomecenter.org/wiki/index.php?title=Software:TPP-MaRiMba.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TIQAM">
            <summary>TIQAM: Software used to predict, select, and optimize transitions for selected reaction monitoring experiments developed and distributed by the Institute for Systems Biology. http://tools.proteomecenter.org/TIQAM/TIQAM.html.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Skyline">
            <summary>Skyline: Software used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the MacCoss lab at the University of Washington. https://brendanx-uw1.gs.washington.edu/labkey/wiki/home/software/Skyline/page.view?name=default.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_excludes_supersede_includes">
            <summary>excludes supersede includes: A priority setting specifying that excluded targets have priority over the included targets if there is a conflict.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_includes_supersede_excludes">
            <summary>includes supersede excludes: A priority setting specifying that included targets have priority over the excluded targets if there is a conflict.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_target_inclusion_exclusion_priority">
            <summary>target inclusion exclusion priority: A priority setting specifying whether included or excluded targets have priority over the other.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_target_list">
            <summary>target list: A list of peptides or compounds and their expected m/z coordinates that can be used to cause a mass spectrometry to obtain spectra of those molecules specifically.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_retention_time_window_upper_offset">
            <summary>retention time window upper offset: The extent of the retention time window in time units above the target retention time. The lower and upper offsets may be asymetric about the target time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_retention_time_window_lower_offset">
            <summary>retention time window lower offset: The extent of the retention time window in time units below the target retention time. The lower and upper offsets may be asymetric about the target time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_retention_time_window_attribute">
            <summary>retention time window attribute: An attribute of a window in time about which a peptide might elute from the column.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_tab_delimited_text_file">
            <summary>tab delimited text file: A file that has two or more columns of tabular data where each column is separated by a TAB character.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transition_predicted_by_informatic_analysis">
            <summary>transition predicted by informatic analysis: The transition has been predicted by informatics software without any direct spectral evidence.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transition_purported_from_an_MS_MS_spectrum_on_a_different__specified_instrument">
            <summary>transition purported from an MS/MS spectrum on a different, specified instrument: The transition has been purported by obtaining an MS/MS spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term. However, the detecting instrument is of a different type (e.g. ion trap) than the instrument that the transition will eventually be used on (e.g. triple quad).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transition_validated_with_an_MS_MS_spectrum_on_specified_instrument">
            <summary>transition validated with an MS/MS spectrum on specified instrument: The transition has been validated by obtaining an MS/MS spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transition_optimized_on_specified_instrument">
            <summary>transition optimized on specified instrument: The transition has been optimized by direct injection of the peptide into an instrument specified in a separate term, and the optimum voltages and fragmentation energies have been determined.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transition_validation_method">
            <summary>transition validation method: The strategy used to validate that a transition is effective.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_reaction">
            <summary>reaction: A set of two m/z values corresponding to the precursor m/z and a fragment m/z that in combination can be used to identify or quantify a specific ion, although not necessarily uniquely.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transition">
            <summary>transition: A set of two m/z values corresponding to the precursor m/z and a fragment m/z that in combination can be used to identify or quantify a specific ion, although not necessarily uniquely.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak_targeting_suitability_rank">
            <summary>peak targeting suitability rank: Ordinal specifying the rank of a peak in a spectrum in terms of suitability for targeting. The most suitable peak is 1. The next most suitability peak is 2, etc. Suitability is algorithm and context dependant.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak_intensity_rank">
            <summary>peak intensity rank: Ordinal specifying the rank in intensity of a peak in a spectrum. Base peak is 1. The next most intense peak is 2, etc.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_percent_of_base_peak_times_100">
            <summary>percent of base peak times 100: The magnitude of a peak expressed in terms of the percentage of the magnitude of the base peak intensity multiplied by 100. The base peak is therefore 10000. This unit is common in normalized spectrum libraries.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_m_z_delta">
            <summary>product ion m/z delta: The difference in m/z of the predicted m/z based on the assigned product ion minus the actual observed peak m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_series_ordinal">
            <summary>product ion series ordinal: The ordinal of the fragment within a specified ion series. (e.g. 8 for a y8 ion).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_H_PINS_retention_time_normalization_standard">
            <summary>H-PINS retention time normalization standard: The de facto standard providing the retention times at which a set of halogenated reference peptides exit the reference chromatographic column, as published by Mirzaei et al. in Molecular and Cellular Proteomics in early 2009 (Early access: http://www.mcponline.org/cgi/content/abstract/M800569-MCP200v1).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_retention_time_normalization_standard">
            <summary>retention time normalization standard: A standard providing the retention times at which a set of reference compounds exit the reference chromatographic column.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_minimum_information_standard">
            <summary>minimum information standard: A specification of a minimum amount of information needed to reproduce or fully interpret a scientific result.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_de_facto_standard">
            <summary>de facto standard: A practice or product that has become a standard not because it has been approved by a standards organization but because it is widely used and recognized by the industry as being standard.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_standard">
            <summary>standard: Something, such as a practice or a product, that is widely recognized or employed, especially because of its excellence.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_predicted_retention_time">
            <summary>predicted retention time: A time interval relative to the beginning of a mass spectrometric run when a peptide will exit a chromatographic column as predicted by a referenced software application.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_normalized_retention_time">
            <summary>normalized retention time: A measure of the interval relative to the beginning of a mass spectrometric run when a peptide will exit a standardized reference chromatographic column and instrumental setup.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_local_retention_time">
            <summary>local retention time: A measure of the interval relative to the beginning of a mass spectrometric run when a peptide will exit an unspecified local chromatographic column and instrumental setup.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_retention_time">
            <summary>retention time: A measure of the interval relative to the beginning of a mass spectrometric run when a peptide will exit the chromatographic column.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_group_label">
            <summary>peptide group label: An arbitrary string label used to mark a set of peptides that belong together in a set, whereby the members are differentiated by different isotopic labels. For example, the heavy and light forms of the same peptide will both be assigned the same peptide group label.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_light_labeled_peptide">
            <summary>light labeled peptide: A peptide that has not been labeled with heavier-than-usual isotopes. This is often referred to as \"light\" to distinguish from \"heavy\".</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_unlabeled_peptide">
            <summary>unlabeled peptide: A peptide that has not been labeled with heavier-than-usual isotopes. This is often referred to as \"light\" to distinguish from \"heavy\".</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_heavy_labeled_peptide">
            <summary>heavy labeled peptide: A peptide that has been created or labeled with some heavier-than-usual isotopes.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_labeling_state">
            <summary>peptide labeling state: A state description of how a peptide might be isotopically or isobarically labelled.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_modified_peptide_sequence">
            <summary>modified peptide sequence: A sequence of letter symbols denoting the order of amino acids that compose the peptide plus the encoding any amino acid mass modifications that are present using the notation where the total mass of the modified amino acid is specified in square bracketed numbers following the letter (e.g. R[162.10111] indicates an arginine whose final modified mass is 162.10111 amu).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_unmodified_peptide_sequence">
            <summary>unmodified peptide sequence: A sequence of letter symbols denoting the order of amino acids that compose the peptide, without encoding any amino acid mass modifications that might be present.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_attribute">
            <summary>peptide attribute: An nonphysical attribute that can be used to describe a peptide.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_name">
            <summary>protein name: A long name describing the function of the protein.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_accession">
            <summary>protein accession: Accession number for a specific protein in a database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_attribute">
            <summary>protein attribute: An nonphysical attribute describing a specific protein.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein_short_name">
            <summary>protein short name: A short name or symbol of a protein (e.g., HSF 1 or HSF1_HUMAN).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protein">
            <summary>protein: A compound composed of one or more chains of amino acids in a specific order determined by the base sequence of nucleotides in the DNA coding for the protein.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chemical_compound">
            <summary>chemical compound: A substance formed by chemical union of two or more elements or ingredients in definite proportion by weight.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_interchannel_delay">
            <summary>interchannel delay: The duration of intervals between scanning, during which the instrument configuration is switched.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PubMed_identifier">
            <summary>PubMed identifier: A unique identifier for a publication in the PubMed database (MIR:00000015).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_external_reference_identifier">
            <summary>external reference identifier: An identifier/accession number to an external reference database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_tube_lens">
            <summary>tube lens: No ideas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_cone_voltage">
            <summary>cone voltage: Potential difference between the sampling cone/orifice and the what? in volts.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_declustering_potential">
            <summary>declustering potential: Potential difference between the orifice and the skimmer in volts.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SSRCalc">
            <summary>SSRCalc: Sequence Specific Retention Calculator esimates the retention time of peptides based on their sequence. It is available at http://hs2.proteome.ca/SSRCalc/SSRCalc.html.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide_attribute_calculation_software">
            <summary>peptide attribute calculation software: Software used to predict or calculate numberical attributes of peptides.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MaRiMba">
            <summary>MaRiMba: Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology. http://tools.proteomecenter.org/wiki/index.php?title=Software:TPP-MaRiMba.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SRM_software">
            <summary>SRM software: Software used to predict, select, or optimize transitions or analyze the results of selected reaction monitoring runs.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_4000_QTRAP">
            <summary>4000 QTRAP: AB SCIEX or Applied Biosystems|MDS SCIEX QTRAP 4000.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_collision_gas_pressure">
            <summary>collision gas pressure: The gas pressure of the collision gas used for collisional excitation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SMILES_string">
            <summary>SMILES string: The simplified molecular input line entry specification or SMILES is a specification for unambiguously describing the structure of a chemical compound using a short ASCII string.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_structural_formula">
            <summary>structural formula: A chemical formula showing the number of atoms of each element in a molecule, their spatial arrangement, and their linkage to each other.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_molecular_formula">
            <summary>molecular formula: A chemical compound formula expressing the number of atoms of each element present in a compound, without indicating how they are linked.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_empirical_formula">
            <summary>empirical formula: A chemical formula which expresses the proportions of the elements present in a substance.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chemical_compound_formula">
            <summary>chemical compound formula: A combination of symbols used to express the chemical composition of a compound.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_predicted_pI">
            <summary>predicted pI: The pH of a solution at which a charged molecule would not migrate in an electric field, as predicted by a software algorithm.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_predicted_isoelectric_point">
            <summary>predicted isoelectric point: The pH of a solution at which a charged molecule would not migrate in an electric field, as predicted by a software algorithm.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pI">
            <summary>pI: The pH of a solution at which a charged molecule does not migrate in an electric field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isoelectric_point">
            <summary>isoelectric point: The pH of a solution at which a charged molecule does not migrate in an electric field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chemical_compound_attribute">
            <summary>chemical compound attribute: A describable property of a chemical compound.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peptide">
            <summary>peptide: A compound of low molecular weight that is composed of two or more amino acids.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_molecule">
            <summary>molecule: A molecules is a fundamental component of a chemical compound that is the smallest part of the compound that can participate in a chemical reaction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fraction_identifier">
            <summary>fraction identifier: Identier string that describes the sample fraction. This identifer should contain the fraction number(s) or similar information.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_run_attribute">
            <summary>run attribute: Properties of the described run.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_Velos_ETD">
            <summary>LTQ Velos ETD: Thermo Scientific LTQ Velos MS with ETD.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_Velos">
            <summary>LTQ Velos: Thermo Scientific LTQ Velos MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_XL">
            <summary>LTQ XL: Thermo Scientific LTQ XL MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_free_electron_laser">
            <summary>free electron laser: Free electron laser uses a relativistic electron beam as the lasing medium which move freely through a magnetic structure, hence the term.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dye_laser">
            <summary>dye-laser: Dye lasers use an organic dye as the gain medium.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_solid_state_laser">
            <summary>solid-state laser: Solid state laser materials are commonly made by doping a crystalline solid host with ions that provide the required energy states.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_gas_laser">
            <summary>gas laser: Laser which is powered by a gaseous medium.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_impact_angle">
            <summary>impact angle: Describes the angle between the laser beam and the sample target.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_attenuation">
            <summary>attenuation: Describes the reduction of the intensity of the laser beam energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pulse_duration">
            <summary>pulse duration: Describes how long the laser beam was emitted from the laser device.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pulse_energy">
            <summary>pulse energy: Describes output energy of the laser system. May be attenuated by filters or other means.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_focus_diameter_y">
            <summary>focus diameter y: Describes the diameter of the laser beam in y direction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_focus_diameter_x">
            <summary>focus diameter x: Describes the diameter of the laser beam in x direction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_wavelength">
            <summary>wavelength: The distance between two peaks of the emitted laser beam.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_laser_type">
            <summary>laser type: Type of laser used used fpr desorption purpose.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_laser_attribute">
            <summary>laser attribute: Laser properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_laser">
            <summary>laser: Device that emits light (electromagnetic radiation) through a process called stimulated emission. The term is an acronym for Light Amplification by Stimulated Emission of Radiation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precoated_plate">
            <summary>precoated plate: Def.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sprayed">
            <summary>sprayed: Def.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_printed">
            <summary>printed: Def.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dried_dropplet">
            <summary>dried dropplet: Def.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_matrix_solution_concentration">
            <summary>matrix solution concentration: Concentration of the chemical solution used as matrix.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_matrix_solution">
            <summary>matrix solution: Describes the chemical solution used as matrix.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_matrix_application_type">
            <summary>matrix application type: Describes the technique how the matrix is put on the sample target.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MALDI_matrix_application">
            <summary>MALDI matrix application: Attributes to describe the technique how the sample is prepared with the matrix solution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_preparation">
            <summary>sample preparation: Properties of the preparation steps which took place before the measurement was performed.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isolation_window_upper_offset">
            <summary>isolation window upper offset: The extent of the isolation window in m/z above the isolation window target m/z. The lower and upper offsets may be asymetric about the target m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isolation_window_lower_offset">
            <summary>isolation window lower offset: The extent of the isolation window in m/z below the isolation window target m/z. The lower and upper offsets may be asymetric about the target m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isolation_window_target_m_z">
            <summary>isolation window target m/z: The primary or reference m/z about which the isolation window is defined.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_elution_time">
            <summary>elution time: The time of elution from a chromatographic column, relative to the start of the chromatography.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_FID_file">
            <summary>Bruker FID file: Bruker FID file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_no_nativeID_format">
            <summary>no nativeID format: No nativeID format indicates that the file tagged with this term does not contain spectra that can have a nativeID format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_U2_nativeID_format">
            <summary>Bruker U2 nativeID format: declaration=xsd:nonNegativeInteger collection=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_temperature_array">
            <summary>temperature array: A data array of temperature measurements.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pressure_array">
            <summary>pressure array: A data array of pressure measurements.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_flow_rate_array">
            <summary>flow rate array: A data array of flow rate measurements.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Acquity_UPLC_FLR">
            <summary>Acquity UPLC FLR: Acquity UPLC Fluorescence Detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Acquity_UPLC_PDA">
            <summary>Acquity UPLC PDA: Acquity UPLC Photodiode Array Detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HyStar">
            <summary>HyStar: Bruker software for hyphenated experiments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_U2_file">
            <summary>Bruker U2 file: Bruker HyStar U2 file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_BAF_file">
            <summary>Bruker BAF file: Bruker BAF raw file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_counts_per_second">
            <summary>counts per second: The number of counted events observed per second in one or a group of elements of a detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_emission_chromatogram">
            <summary>emission chromatogram: The measurement of light emitted by the sample as a function of the retention time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_absorption_chromatogram">
            <summary>absorption chromatogram: The measurement of light absorbed by the sample as a function of the retention time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EMR_radiation_chromatogram">
            <summary>EMR radiation chromatogram: The measurement of electromagnetic properties as a function of the retention time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electromagnetic_radiation_chromatogram">
            <summary>electromagnetic radiation chromatogram: The measurement of electromagnetic properties as a function of the retention time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_chromatogram">
            <summary>mass chromatogram: A plot of the relative abundance of a beam or other collection of ions as a function of the retention time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chromatogram_title">
            <summary>chromatogram title: A free-form text title describing a chromatogram.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chromatogram_attribute">
            <summary>chromatogram attribute: Chromatogram properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Th_s">
            <summary>Th/s: Unit describing the scan rate of a spectrum in Thomson per second.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_absorption_spectrum">
            <summary>absorption spectrum: A plot of the relative intensity of electromagnetic radiation absorbed by atoms or molecules when excited.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_emission_spectrum">
            <summary>emission spectrum: A plot of the relative intensity of electromagnetic radiation emitted by atoms or molecules when excited.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EMR_spectrum">
            <summary>EMR spectrum: A plot of the relative intensity of electromagnetic radiation as a function of the wavelength.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electromagnetic_radiation_spectrum">
            <summary>electromagnetic radiation spectrum: A plot of the relative intensity of electromagnetic radiation as a function of the wavelength.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_analyzer_scan_offset">
            <summary>analyzer scan offset: Offset between two analyzers in a constant neutral loss or neutral gain scan. The value corresponds to the neutral loss or neutral gain value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_max_peak_picking">
            <summary>max peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The maximum intensity of all raw data points that belong to the peak is reported.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_height_peak_picking">
            <summary>height peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The maximum intensity of all raw data points that belong to the peak is reported.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sum_peak_picking">
            <summary>sum peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The area defined by all raw data points that belong to the peak is reported.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_area_peak_picking">
            <summary>area peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The area defined by all raw data points that belong to the peak is reported.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_resolving_power">
            <summary>mass resolving power: The observed mass divided by the difference between two masses that can be separated: m/dm. The procedure by which dm was obtained and the mass at which the measurement was made should be reported.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_custom_unreleased_software_tool">
            <summary>custom unreleased software tool: A software tool that has not yet been released. The value should describe the software. Please do not use this term for publicly available software - contact the PSI-MS working group in order to have another CV term added.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak_list_raw_scans">
            <summary>peak list raw scans: A list of raw scans and or scan ranges used to generate a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak_list_scans">
            <summary>peak list scans: A list of scan numbers and or scan ranges associated with a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_title">
            <summary>spectrum title: A free-form text title describing a spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_no_combination">
            <summary>no combination: Use this term if only one scan was recorded or there is no information about scans available.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isolation_window_lower_limit_OBSOLETE">
            <summary>isolation window lower limit: The lowest m/z being isolated in an isolation window.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isolation_window_upper_limit_OBSOLETE">
            <summary>isolation window upper limit: The highest m/z being isolated in an isolation window.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isolation_window_attribute">
            <summary>isolation window attribute: Isolation window parameter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_enhanced_resolution_scan_OBSOLETE">
            <summary>enhanced resolution scan: Scan with enhanced resolution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_time_delayed_fragmentation_spectrum">
            <summary>time-delayed fragmentation spectrum: MSn spectrum in which the product ions are collected after a time delay, which allows the observation of lower energy fragmentation processes after precursor ion activation</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_enhanced_multiply_charged_spectrum">
            <summary>enhanced multiply charged spectrum: MS1 spectrum that is enriched in multiply-charged ions compared to singly-charged ions</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_inclusive_high_intensity_threshold">
            <summary>inclusive high intensity threshold: Threshold at or above which some action is taken.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_inclusive_low_intensity_threshold">
            <summary>inclusive low intensity threshold: Threshold at or below which some action is taken.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_non_standard_data_array">
            <summary>non-standard data array: A data array that contains data not covered by any other term in this group. Please do not use this term, if the binary data array type might be commonly used - contact the PSI-MS working group in order to have another CV term added.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sliding_average_smoothing">
            <summary>sliding average smoothing: Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_boxcar_smoothing">
            <summary>boxcar smoothing: Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_box_smoothing">
            <summary>box smoothing: Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_moving_average_smoothing">
            <summary>moving average smoothing: Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Weierstrass_transform">
            <summary>Weierstrass transform: Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_binomial_smoothing">
            <summary>binomial smoothing: Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Gaussian_smoothing">
            <summary>Gaussian smoothing: Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LOWESS_smoothing">
            <summary>LOWESS smoothing: Reduces intensity spikes by applying a modeling method known as locally weighted polynomial regression. At each point in the data set a low-degree polynomial is fit to a subset of the data, with explanatory variable values near the point whose response is being estimated. The polynomial is fit using weighted least squares, giving more weight to points near the point whose response is being estimated and less weight to points further away. The value of the regression function for the point is then obtained by evaluating the local polynomial using the explanatory variable values for that data point. The LOESS fit is complete after regression function values have been computed for each of the n data points. Many of the details of this method, such as the degree of the polynomial model and the weights, are flexible.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Savitzky_Golay_smoothing">
            <summary>Savitzky-Golay smoothing: Reduces intensity spikes by applying local polynomial regression (of degree k) on a distribution (of at least k+1 equally spaced points) to determine the smoothed value for each point. It tends to preserve features of the distribution such as relative maxima, minima and width, which are usually 'flattened' by other adjacent averaging techniques.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_msPrefix_precursor_recalculation">
            <summary>msPrefix precursor recalculation: Recalculates one or more precursor selected ions by peak detection in the isolation windows of high accuracy MS precursor scans.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precursor_recalculation">
            <summary>precursor recalculation: A process that recalculates existing precursor selected ions with one or more algorithmically determined precursor selected ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_below_precursor_intensity_dominance_charge_state_calculation">
            <summary>below precursor intensity dominance charge state calculation: Infers charge state as single or amibiguously multiple by determining the fraction of intensity below the precursor m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_state_calculation">
            <summary>charge state calculation: A process that infers the charge state of an MSn spectrum's precursor(s) by the application of some algorithm.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_identifier_nativeID_format">
            <summary>spectrum identifier nativeID format: spectrum=xsd:nonNegativeInteger</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_number_only_nativeID_format">
            <summary>scan number only nativeID format: scan=xsd:nonNegativeInteger</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_single_peak_list_nativeID_format">
            <summary>single peak list nativeID format: file=xsd:IDREF</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_peak_list_nativeID_format">
            <summary>multiple peak list nativeID format: index=xsd:nonNegativeInteger</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_FID_nativeID_format">
            <summary>Bruker FID nativeID format: file=xsd:IDREF</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_BAF_nativeID_format">
            <summary>Bruker BAF nativeID format: scan=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Agilent_YEP_nativeID_format">
            <summary>Bruker/Agilent YEP nativeID format: scan=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_WIFF_nativeID_format">
            <summary>WIFF nativeID format: sample=xsd:nonNegativeInteger period=xsd:nonNegativeInteger cycle=xsd:nonNegativeInteger experiment=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Waters_nativeID_format">
            <summary>Waters nativeID format: function=xsd:positiveInteger process=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Thermo_nativeID_format">
            <summary>Thermo nativeID format: controllerType=xsd:nonNegativeInteger controllerNumber=xsd:positiveInteger scan=xsd:positiveInteger.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nativeID_format">
            <summary>nativeID format: Describes how the native spectrum identifiers are formated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_native_spectrum_identifier_format">
            <summary>native spectrum identifier format: Describes how the native spectrum identifiers are formated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TOFCalibration">
            <summary>TOFCalibration: Applies time of flight calibration.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SpectraFilter">
            <summary>SpectraFilter: Applies a filter to peak spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Resampler">
            <summary>Resampler: Transforms an LC/MS map into a resampled map or a png image.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PeakPicker">
            <summary>PeakPicker: Finds mass spectrometric peaks in profile mass spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NoiseFilter">
            <summary>NoiseFilter: Removes noise from profile spectra by using different smoothing techniques.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MapNormalizer">
            <summary>MapNormalizer: Normalizes peak intensities in an MS run.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MapAligner">
            <summary>MapAligner: Corrects retention time distortions between maps.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_InternalCalibration">
            <summary>InternalCalibration: Applies an internal calibration.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FileMerger">
            <summary>FileMerger: Merges several MS files into one file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FileFilter">
            <summary>FileFilter: Extracts or manipulates portions of data from peak, feature or consensus feature files.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FileConverter">
            <summary>FileConverter: Converts between different MS file formats.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DBImporter">
            <summary>DBImporter: Imports data to an OpenMS database.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DBExporter">
            <summary>DBExporter: Exports data from an OpenMS database to a file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BaselineFilter">
            <summary>BaselineFilter: Removes the baseline from profile spectra using a top-hat filter.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TOPP_software">
            <summary>TOPP software: TOPP (The OpenMS proteomics pipeline) software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TSQ_Quantum_Ultra">
            <summary>TSQ Quantum Ultra: Thermo Scientific TSQ Quantum Ultra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TSQ">
            <summary>TSQ: ThermoFinnigan TSQ MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TSQ_7000">
            <summary>TSQ 7000: ThermoFinnigan TSQ 7000 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SSQ_7000">
            <summary>SSQ 7000: ThermoFinnigan SSQ 7000 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_completion_time">
            <summary>completion time: The time that a data processing action was finished.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_high_intensity_data_point_removal">
            <summary>high intensity data point removal: The removal of very high intensity data points.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_retention_time_alignment">
            <summary>retention time alignment: The correction of the spectrum scan times, as used e.g. in label-free proteomics.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_ion_m_z">
            <summary>selected ion m/z: Mass-to-charge ratio of the ion selected for fragmentation</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TSQ_Quantum_Ultra_AM">
            <summary>TSQ Quantum Ultra AM: Thermo Scientific TSQ Quantum Ultra AM.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bioworks_SRF_file">
            <summary>Bioworks SRF file: Thermo Finnigan SRF file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Conversion_to_dta">
            <summary>Conversion to dta: Conversion to dta format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_parameter_file">
            <summary>parameter file: Parameter file used to configure the acquisition of raw data on the instrument.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_WARP_LC">
            <summary>WARP-LC: Bruker WARP-LC software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TargetAnalysis">
            <summary>TargetAnalysis: Bruker TargetAnalysis software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spControl">
            <summary>spControl: Bruker software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_QuantAnalysis">
            <summary>QuantAnalysis: Bruker software for data analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PureDisk">
            <summary>PureDisk: BrukerPureDisk software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinScape">
            <summary>ProteinScape: Bruker ProteinScape software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PROTEINEER_LC">
            <summary>PROTEINEER-LC: Bruker PROTEINEER-LC software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PROTEINEER_spII">
            <summary>PROTEINEER spII: Bruker PROTEINEER spII software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PROTEINEER_fc">
            <summary>PROTEINEER fc: Bruker PROTEINEER fc software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PROTEINEER_dp">
            <summary>PROTEINEER dp: Bruker PROTEINEER dp software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PROTEINEER">
            <summary>PROTEINEER: Bruker PROTEINEER software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProfileAnalysis">
            <summary>ProfileAnalysis: Bruker software for data analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PolyTools">
            <summary>PolyTools: Bruker PolyTools software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_micrOTOFcontrol">
            <summary>micrOTOFcontrol: Bruker software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HCTcontrol">
            <summary>HCTcontrol: Bruker software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_GenoTools">
            <summary>GenoTools: Bruker GenoTools software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_GENOLINK">
            <summary>GENOLINK: Bruker GENOLINK software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_flexImaging">
            <summary>flexImaging: Bruker software for data analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_esquireControl">
            <summary>esquireControl: Bruker software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dpControl">
            <summary>dpControl: Bruker software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DataAnalysis">
            <summary>DataAnalysis: Bruker software for data analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CompassXtract">
            <summary>CompassXtract: Bruker software library for data access.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CompassXport">
            <summary>CompassXport: Bruker stand-alone software for data conversion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Compass_Security_Pack">
            <summary>Compass Security Pack: Bruker compass Security Pack software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Compass_OpenAccess">
            <summary>Compass OpenAccess: Bruker compass OpenAccess software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Compass_for_micrOTOF">
            <summary>Compass for micrOTOF: Bruker Compass for micrOTOF software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Compass_for_HCT_esquire">
            <summary>Compass for HCT/esquire: Bruker Compass for HCT/esquire software</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Compass">
            <summary>Compass: Bruker Compass software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ClinProTools">
            <summary>ClinProTools: Bruker ClinProTools software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CLINPROT_robot">
            <summary>CLINPROT robot: Bruker CLINPROT robot software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CLINPROT_micro">
            <summary>CLINPROT micro: Bruker CLINPROT micro software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CLINPROT">
            <summary>CLINPROT: Bruker CLINPROT software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BioTools">
            <summary>BioTools: Bruker software for data analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_apexControl">
            <summary>apexControl: Bruker software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ultraflex_III_TOF_TOF">
            <summary>ultraflex III TOF/TOF: Bruker Daltonics' ultraflex III TOF/TOF: MALDI TOF</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_micrOTOF_Q_II">
            <summary>micrOTOF-Q II: Bruker Daltonics' micrOTOF-Q II: ESI Q-TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_micrOTOF_Q">
            <summary>micrOTOF-Q: Bruker Daltonics' micrOTOF-Q: ESI Q-TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_micrOTOF">
            <summary>micrOTOF: Bruker Daltonics' micrOTOF: ESI TOF, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_microflex_LT">
            <summary>microflex LT: Bruker Daltonics' microflex LT: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HCTultra_ETD_II">
            <summary>HCTultra ETD II: Bruker Daltonics' HCTultra ETD II: ESI Q-TOF, Nanospray, APCI, APPI, ETD</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HCTultra_PTM">
            <summary>HCTultra PTM: Bruker Daltonics' HCTultra PTM: ESI TOF, Nanospray, APCI, APPI, PTR</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HCTultra">
            <summary>HCTultra: Bruker Daltonics' HCTultra: ESI TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_HCT_Series">
            <summary>Bruker Daltonics HCT Series: Bruker Daltonics HCT Series</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autoflex_III_smartbeam">
            <summary>autoflex III smartbeam: Bruker Daltonics' autoflex III smartbeam: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_apex_ultra">
            <summary>apex ultra: Bruker Daltonics' apex ultra: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Waters_software">
            <summary>Waters software: Waters software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Thermo_Finnigan_software">
            <summary>Thermo Finnigan software: Thermo Finnigan software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_software">
            <summary>Bruker software: Bruker software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Applied_Biosystems_software">
            <summary>Applied Biosystems software: Applied Biosystems|MDS SCIEX software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_software">
            <summary>AB SCIEX software: AB SCIEX or Applied Biosystems software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Agilent_software">
            <summary>Agilent software: Agilent software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6300_Series_Ion_Trap_Data_Analysis_Software">
            <summary>6300 Series Ion Trap Data Analysis Software: Software for data analysis of 6300 series ion trap mass spectrometers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Spectrum_Mill_for_MassHunter_Workstation">
            <summary>Spectrum Mill for MassHunter Workstation: Software for protein identification and characterization of complex protein digest mixtures.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_METLIN">
            <summary>METLIN: Personal Metabolite Database for MassHunter Workstation. Software for identification of human metabolites.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassHunter_Mass_Profiler">
            <summary>MassHunter Mass Profiler: Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Genespring_MS">
            <summary>Genespring MS: Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassHunter_BioConfirm">
            <summary>MassHunter BioConfirm: Software for protein characterization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassHunter_Metabolite_ID">
            <summary>MassHunter Metabolite ID: Software for identification of metabolites.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassHunter_Quantitative_Analysis">
            <summary>MassHunter Quantitative Analysis: Software for quantitation of Triple Quadruople and Quadrupole Time-of-Flight data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassHunter_Qualitative_Analysis">
            <summary>MassHunter Qualitative Analysis: Software for data analysis of data from 6000 series instruments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassHunter_Easy_Access">
            <summary>MassHunter Easy Access: Software for open access data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassHunter_Data_Acquisition">
            <summary>MassHunter Data Acquisition: Software for data acquisition of 6000 series instruments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6520_Quadrupole_Time_of_Flight_LC_MS">
            <summary>6520 Quadrupole Time-of-Flight LC/MS: The 6520 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 26,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6510_Quadrupole_Time_of_Flight_LC_MS">
            <summary>6510 Quadrupole Time-of-Flight LC/MS: The 6510 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6220_Time_of_Flight_LC_MS">
            <summary>6220 Time-of-Flight LC/MS: The 6220 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MultiQuant">
            <summary>MultiQuant: Applied Biosystems|MDS SCIEX software for MRM-based quantitation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MIDAS_Workflow_Designer">
            <summary>MIDAS Workflow Designer: Applied Biosystems|MDS SCIEX software for MRM assay development.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Cliquid_">
            <summary>Cliquid?: AB SCIEX or Applied Biosystems software.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Pro_BLAST">
            <summary>Pro BLAST: Applied Biosystems|MDS SCIEX software for MS-BLAST identification.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Pro_Quant">
            <summary>Pro Quant: Applied Biosystems|MDS SCIEX software for protein ID and quant by iTRAQ.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Pro_ICAT">
            <summary>Pro ICAT: Applied Biosystems|MDS SCIEX software for protein ID and quant by ICAT.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Pro_ID">
            <summary>Pro ID: Applied Biosystems|MDS SCIEX software for protein identification.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BioAnalyst">
            <summary>BioAnalyst: Applied Biosystems|MDS SCIEX software for bio-related data exploration.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MRMPilot_Software">
            <summary>MRMPilot Software: Applied Biosystems|MDS SCIEX software for MRM assay development.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MarkerView_Software">
            <summary>MarkerView Software: Applied Biosystems|MDS SCIEX software for metabolomics and biomarker profiling.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TissueView_Software">
            <summary>TissueView Software: Applied Biosystems|MDS SCIEX software for tissue imaging.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinPilot_Software">
            <summary>ProteinPilot Software: AB SCIEX or Applied Biosystems|MDS SCIEX software for protein ID and quant.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LightSight_Software">
            <summary>LightSight Software: AB SCIEX or Applied Biosystems|MDS SCIEX software metabolite identification.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_GPS_Explorer">
            <summary>GPS Explorer: AB SCIEX or Applied Biosystems software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_4000_Series_Explorer_Software">
            <summary>4000 Series Explorer Software: AB SCIEX or Applied Biosystems software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_4800_Proteomics_Analyzer">
            <summary>4800 Proteomics Analyzer: Applied Biosystems|MDS SCIEX 4800 Proteomics Analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_QSTAR_XL">
            <summary>QSTAR XL: Applied Biosystems|MDS SCIEX QSTAR XL</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_QSTAR_Pulsar">
            <summary>QSTAR Pulsar: Applied Biosystems|MDS SCIEX QSTAR Pulsar</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_QSTAR_Elite">
            <summary>QSTAR Elite: AB SCIEX or Applied Biosystems|MDS SCIEX QSTAR Elite</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API_5000">
            <summary>API 5000: AB SCIEX or Applied Biosystems|MDS SCIEX API 5000 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API_3200">
            <summary>API 3200: AB SCIEX or Applied Biosystems|MDS SCIEX API 3200 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_4800_Plus_MALDI_TOF_TOF_Analyzer">
            <summary>4800 Plus MALDI TOF-TOF Analyzer: AB SCIEX or Applied Biosystems|MDS SCIEX 4800 Plus MALDI TOF-TOF Analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_3200_QTRAP">
            <summary>3200 QTRAP: AB SCIEX or Applied Biosystems|MDS SCIEX QTRAP 3200.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Proteome_Discoverer">
            <summary>Proteome Discoverer: Thermo Scientific software for data analysis of peptides and proteins.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Exactive">
            <summary>Exactive: Thermo Scientific Exactive MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_GC_IsoLink">
            <summary>GC IsoLink: Thermo Scientific GC IsoLink Isotope Ratio MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Element_GD">
            <summary>Element GD: Thermo Scientific Element GD Glow Discharge MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Element_2">
            <summary>Element 2: Thermo Scientific Element 2 HR-ICP-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Element_XR">
            <summary>Element XR: Thermo Scientific Element XR HR-ICP-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TSQ_Quantum_Access">
            <summary>TSQ Quantum Access: Thermo Scientific TSQ Quantum Access MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MALDI_LTQ_Orbitrap">
            <summary>MALDI LTQ Orbitrap: Thermo Scientific MALDI LTQ Orbitrap MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MALDI_LTQ_XL">
            <summary>MALDI LTQ XL: Thermo Scientific MALDI LTQ XL MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DSQ_II">
            <summary>DSQ II: Thermo Scientific DSQ II GC-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DFS">
            <summary>DFS: Thermo Scientific DFS HR GC-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_Orbitrap_XL_ETD">
            <summary>LTQ Orbitrap XL ETD: Thermo Scientific LTQ Orbitrap XL MS with ETD</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_XL_ETD">
            <summary>LTQ XL ETD: Thermo Scientific LTQ XL MS with ETD</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ITQ_1100">
            <summary>ITQ 1100: Thermo Scientific ITQ 1100 GC-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ITQ_900">
            <summary>ITQ 900: Thermo Scientific ITQ 900 GC-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ITQ_700">
            <summary>ITQ 700: Thermo Scientific ITQ 700 GC-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DSQ">
            <summary>DSQ: ThermoFinnigan DSQ GC-MS</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_possible_charge_state">
            <summary>possible charge state: A possible charge state of the ion in a situation where the charge of an ion is known to be one of several possible values rather than a completely unknown value or determined to be a specific charge with reasonable certainty.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Q_Tof_Premier">
            <summary>Q-Tof Premier: Waters Q-Tof Premier MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_high_intensity_threshold">
            <summary>high intensity threshold: Threshold above which some action is taken.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_processing_parameter">
            <summary>data processing parameter: Data processing parameter used in the data processing performed on the data file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_low_intensity_threshold">
            <summary>low intensity threshold: Threshold below which some action is taken.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_basepeak_chromatogram">
            <summary>basepeak chromatogram: Chromatogram created by creating an array of the most intense peaks at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SIC_chromatogram">
            <summary>SIC chromatogram: Chromatogram created by creating an array of the measurements of a specific single ion current at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_ion_current_chromatogram">
            <summary>selected ion current chromatogram: Chromatogram created by creating an array of the measurements of a specific single ion current at each time point.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chromatogram_type">
            <summary>chromatogram type: Broad category or type of a chromatogram.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chromatogram">
            <summary>chromatogram: The representation of detector response versus time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_image_current_detector">
            <summary>image current detector: Inductive detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_inductive_detector">
            <summary>inductive detector: Inductive detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Accela_PDA">
            <summary>Accela PDA: Accela PDA.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Surveyor_PDA">
            <summary>Surveyor PDA: Surveyor PDA.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PDA">
            <summary>PDA: An array detector used to record spectra in the ultraviolet and visable region of light.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_photodiode_array_detector">
            <summary>photodiode array detector: An array detector used to record spectra in the ultraviolet and visable region of light.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PDA_spectrum_OBSOLETE">
            <summary>PDA spectrum: Spectrum generated from a photodiode array detector (ultraviolet/visible spectrum).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_lowest_observed_wavelength">
            <summary>lowest observed wavelength: Lowest wavelength observed in an EMR spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_highest_observed_wavelength">
            <summary>highest observed wavelength: Highest wavelength observed in an EMR spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_wavelength_array">
            <summary>wavelength array: A data array of electromagnetic radiation wavelength values.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_preset_scan_configuration">
            <summary>preset scan configuration: A user-defined scan configuration that specifies the instrumental settings in which a spectrum is acquired. An instrument may cycle through a list of preset scan configurations to acquire data. This is a more generic term for the Thermo \"scan event\", which is defined in the Thermo Xcalibur glossary as: a mass spectrometer scan that is defined by choosing the necessary scan parameter settings. Multiple scan events can be defined for each segment of time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pwiz">
            <summary>pwiz: ProteoWizard software for data analysis. Currently developed and maintained by Darren Kessner at Parag Mallick's lab (Center for Applied Molecular Medicine at the University of Southern California).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteoWizard">
            <summary>ProteoWizard: ProteoWizard software for data analysis. Currently developed and maintained by Darren Kessner at Parag Mallick's lab (Center for Applied Molecular Medicine at the University of Southern California).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinLynx_Global_Server_mass_spectrum_XML_file">
            <summary>ProteinLynx Global Server mass spectrum XML file: Peak list file format used by ProteinLynx Global Server.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DTA_file">
            <summary>DTA file: Sequest DTA file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AXIMA_Assurance_Linear_MALDI_TOF">
            <summary>AXIMA Assurance Linear MALDI-TOF: Shimadzu Biotech AXIMA Assurance Linear MALDI-TOF MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AXIMA_Confidence_MALDI_TOF">
            <summary>AXIMA Confidence MALDI-TOF: Shimadzu Biotech AXIMA Confidence MALDI-TOF (curved field reflectron) MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AXIMA_Performance_MALDI_TOF_TOF">
            <summary>AXIMA Performance MALDI-TOF/TOF: Shimadzu Biotech AXIMA Performance MALDI-TOF/TOF MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AXIMA_CFR_plus">
            <summary>AXIMA-CFR plus: Shimadzu Biotech AXIMA-CFR plus MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AXIMA_QIT">
            <summary>AXIMA-QIT: Shimadzu Biotech AXIMA-QIT MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AXIMA_CFR_MALDI_TOF">
            <summary>AXIMA CFR MALDI-TOF: Shimadzu Biotech AXIMA CFR MALDI-TOF MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCMS_2010A">
            <summary>LCMS-2010A: Shimadzu Scientific Instruments LCMS-2010A MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCMS_2010EV">
            <summary>LCMS-2010EV: Shimadzu Scientific Instruments LCMS-2010EV MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCMS_IT_TOF">
            <summary>LCMS-IT-TOF: Shimadzu Scientific Instruments LCMS-IT-TOF MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Shimadzu_Scientific_Instruments_instrument_model">
            <summary>Shimadzu Scientific Instruments instrument model: Shimadzu Scientific Instruments instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Shimadzu_Biotech_instrument_model">
            <summary>Shimadzu Biotech instrument model: Shimadzu Biotech instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ProteinLynx_Global_Server">
            <summary>ProteinLynx Global Server: Waters software for data analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Proteios">
            <summary>Proteios: Database application and analysis platform for proteomics.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PQD">
            <summary>PQD: A process that involves precursor ion activation at high Q, a time delay to allow the precursor to fragment, then a rapid pulse to low Q where all fragment ions are trapped. The product ions can then be scanned out of the ion trap and detected.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pulsed_q_dissociation">
            <summary>pulsed q dissociation: A process that involves precursor ion activation at high Q, a time delay to allow the precursor to fragment, then a rapid pulse to low Q where all fragment ions are trapped. The product ions can then be scanned out of the ion trap and detected.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ETD">
            <summary>ETD: A process to fragment ions in a mass spectrometer by inducing fragmentation of cations (e.g. peptides or proteins) by transferring electrons to them.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_transfer_dissociation">
            <summary>electron transfer dissociation: A process to fragment ions in a mass spectrometer by inducing fragmentation of cations (e.g. peptides or proteins) by transferring electrons to them.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_optics_type">
            <summary>ion optics type: The electrical potential used to impart kinetic energy to ions in a mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_measurement_method">
            <summary>measurement method: An attribute of resolution when recording the detector response in absence of the analyte.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_time_array">
            <summary>time array: A data array of relative time offset values from a reference time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_thresholding">
            <summary>thresholding: The removal of very low intensity data points that are likely to be spurious noise rather than real signal.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_low_intensity_data_point_removal">
            <summary>low intensity data point removal: The removal of very low intensity data points that are likely to be spurious noise rather than real signal.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_baseline_reduction">
            <summary>baseline reduction: A process of removal of varying intensities generated due to variable energy absorption before further processing can take place. Baseline reduction facilitates meaningful comparision between intensities of m/z values.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_smoothing">
            <summary>smoothing: A process of reducing spikes of intensity in order to reduce noise while preserving real peak signal. Many algorithms can be applied for this process.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MzWiff">
            <summary>MzWiff: A software program for converting Applied Biosystems wiff file format to the mzXML or mzML format. MzWiff is currently maintained at the Institute for Systems Biology. It replaces the slower mzStar program.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_contact_organization">
            <summary>contact organization: Home institution of the contact person.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_contact_email">
            <summary>contact email: Email adress of the contact person.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_contact_URL">
            <summary>contact URL: Uniform Resource Locator related to the contact person.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_contact_address">
            <summary>contact address: Postal address of a contact person.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_contact_name">
            <summary>contact name: Name of a contact person.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_contact_person_attribute">
            <summary>contact person attribute: Details about a person to contact in case of concern or dicussion about the file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mzML_file">
            <summary>mzML file: Proteomics Standards Inititative mzML file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_reaction_monitoring_spectrum">
            <summary>selected reaction monitoring spectrum: Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_reaction_monitoring_spectrum">
            <summary>multiple reaction monitoring spectrum: Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MRM_spectrum">
            <summary>MRM spectrum: Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SRM_spectrum">
            <summary>SRM spectrum: Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_ion_monitoring_spectrum">
            <summary>selected ion monitoring spectrum: Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_ion_monitoring_spectrum">
            <summary>multiple ion monitoring spectrum: Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MIM_spectrum">
            <summary>MIM spectrum: Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SIM_spectrum">
            <summary>SIM spectrum: Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CRM_spectrum">
            <summary>CRM spectrum: Spectrum generated from MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_spectrum">
            <summary>product ion spectrum: MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nth_generation_product_ion_spectrum">
            <summary>nth generation product ion spectrum: MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_stage_mass_spectrometry_spectrum">
            <summary>multiple-stage mass spectrometry spectrum: MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MSn_spectrum">
            <summary>MSn spectrum: MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Single_Stage_Mass_Spectrometry">
            <summary>Single-Stage Mass Spectrometry: Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Q3_spectrum">
            <summary>Q3 spectrum: Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Q1_spectrum">
            <summary>Q1 spectrum: Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_full_spectrum">
            <summary>full spectrum: Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MS1_spectrum">
            <summary>MS1 spectrum: Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCQ_Fleet">
            <summary>LCQ Fleet: LCQ Fleet.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_source_file">
            <summary>source file: Describes the type of file and its content.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_raw_data_file">
            <summary>raw data file: Describes the type of file and its content.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_no_compression">
            <summary>no compression: No Compression.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mean_of_spectra">
            <summary>mean of spectra: Spectra is combined by calculating the mean of the spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_zlib_compression">
            <summary>zlib compression: Zlib.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_median_of_spectra">
            <summary>median of spectra: Spectra is combined by calculating the median of the spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_binary_data_compression_type">
            <summary>binary data compression type: Compression Type.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sum_of_spectra">
            <summary>sum of spectra: Spectra Sum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectra_combination">
            <summary>spectra combination: Method used to combine the mass spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SHA_1">
            <summary>SHA-1: SHA-1 (Secure Hash Algorithm-1) is a cryptographic hash function designed by the National Security Agency (NSA) and published by the NIST as a U. S. government standard. It is also used to verify file integrity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MD5">
            <summary>MD5: MD5 (Message-Digest algorithm 5) is a cryptographic hash function with a 128-bit hash value used to check the integrity of files.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Agilent_YEP_file">
            <summary>Bruker/Agilent YEP file: Bruker/Agilent YEP file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ISB_mzXML_file">
            <summary>ISB mzXML file: Institute of Systems Biology mzXML file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Micromass_PKL_file">
            <summary>Micromass PKL file: Micromass PKL file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PSI_mzData_file">
            <summary>PSI mzData file: Proteomics Standards Inititative mzData file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Thermo_RAW_file">
            <summary>Thermo RAW file: Thermo Scientific RAW file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ABI_WIFF_file">
            <summary>ABI WIFF file: Applied Biosystems WIFF file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_file_checksum_type">
            <summary>data file checksum type: Checksum is a form of redundancy check, a simple way to protect the integrity of data by detecting errors in data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_spectrometer_file_format">
            <summary>mass spectrometer file format: The format of the file being used. This could be a instrument or vendor specific proprietary file format or a converted open file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_type">
            <summary>spectrum type: Spectrum type.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_GC_Quantum">
            <summary>GC Quantum: GC Quantum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_FT_Ultra">
            <summary>LTQ FT Ultra: LTQ FT Ultra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_Orbitrap_XL">
            <summary>LTQ Orbitrap XL: LTQ Orbitrap XL.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_Orbitrap_Discovery">
            <summary>LTQ Orbitrap Discovery: LTQ Orbitrap Discovery.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCQ_Deca">
            <summary>LCQ Deca: ThermoFinnigan LCQ Deca.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Trapper">
            <summary>Trapper: A software program for converting Agilent MassHunter format to mzXML or mzML. Trapper was originally developed at the Institute for Systems Biology.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_maldi_spot_identifier">
            <summary>maldi spot identifier: Maldi Spot Identifier.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Analyst">
            <summary>Analyst: AB SCIEX or Applied Biosystems|MDS SCIEX software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_time_unit_OBSOLETE">
            <summary>time unit: Time Unit.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selection_window_attribute">
            <summary>selection window attribute: Selection window properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_attribute">
            <summary>sample attribute: Sample properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_object_attribute">
            <summary>object attribute: Object Attribute.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Conversion_to_mzData">
            <summary>Conversion to mzData: Conversion of a file format to Proteomics Standards Initiative mzData file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Conversion_to_mzXML">
            <summary>Conversion to mzXML: Conversion of a file format to Institute of Systems Biology mzXML file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Conversion_to_mzML">
            <summary>Conversion to mzML: Conversion of a file format to Proteomics Standards Initiative mzData file format.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_processing_action">
            <summary>data processing action: Data processing attribute used to describe the type of data processing performed on the data file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MzStar">
            <summary>MzStar: A software program for converting Applied Biosystems wiff file format to mzXML format. MzStar was originally developed at the Institute for Systems Biology. It is now obsoleted by the MzWiff program.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ReAdW">
            <summary>ReAdW: A software program for converting Thermo Finnigan RAW file format to mzXML or mzML. ReAdW was originally developed at the Institute for Systems Biology. Its whimsical interleaved spelling and capitalization is pronounced \"readraw\".</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FlexControl">
            <summary>FlexControl: Bruker software for data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Voyager_Biospectrometry_Workstation_System">
            <summary>Voyager Biospectrometry Workstation System: Applied Biosystems MALDI-TOF data acquisition and analysis system.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_wolf">
            <summary>wolf: A software for converting Waters raw directory format to mzXML or mzML. massWolf was originally developed at the Institute for Systems Biology.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_massWolf">
            <summary>massWolf: A software for converting Waters raw directory format to mzXML or mzML. massWolf was originally developed at the Institute for Systems Biology.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_4700_Explorer">
            <summary>4700 Explorer: Applied Biosystems software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Data_Explorer">
            <summary>Data Explorer: Applied Biosystems software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FlexAnalysis">
            <summary>FlexAnalysis: Bruker software for data analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MassLynx">
            <summary>MassLynx: Micromass software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bioworks">
            <summary>Bioworks: Thermo Finnigan software for data analysis of peptides and proteins.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Xcalibur">
            <summary>Xcalibur: Thermo Finnigan software for data acquisition and analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_software">
            <summary>software: Software related to the recording or transformation of spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_file_format_conversion">
            <summary>file format conversion: Conversion of one file format to another.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_instrument_serial_number">
            <summary>instrument serial number: Serial Number of the instrument.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_lowest_observed_m_z">
            <summary>lowest observed m/z: Lowest m/z value observed in the m/z array.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_highest_observed_m_z">
            <summary>highest observed m/z: Highest m/z value observed in the m/z array.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Waters_raw_file">
            <summary>Waters raw file: Waters data file found in a Waters RAW directory, generated from an MS acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_representation">
            <summary>spectrum representation: Way in which the spectrum is represented, either with regularly spaced data points or with a list of centroided peaks.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_file_content">
            <summary>data file content: Describes the data content on the file.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_64_bit_float">
            <summary>64-bit float: 64-bit precision little-endian floating point conforming to IEEE-754.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_64_bit_integer">
            <summary>64-bit integer: Signed 64-bit little-endian integer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_32_bit_float">
            <summary>32-bit float: 32-bit precision little-endian floating point conforming to IEEE-754.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_16_bit_float_OBSOLETE">
            <summary>16-bit float: Signed 16-bit float.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_32_bit_integer">
            <summary>32-bit integer: Signed 32-bit little-endian integer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_binary_data_type">
            <summary>binary data type: Encoding type of binary data specifying the binary representation and precision, e.g. 64-bit float.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_signal_to_noise_array">
            <summary>signal to noise array: A data array of signal-to-noise values.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_array">
            <summary>charge array: A data array of charge values.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_intensity_array">
            <summary>intensity array: A data array of intensity values.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_m_z_array">
            <summary>m/z array: A data array of m/z values.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_binary_data_array">
            <summary>binary data array: A data array of values.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_filter_string">
            <summary>filter string: A string unique to Thermo instrument describing instrument settings for the scan.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ms_level">
            <summary>ms level: Stages of ms achieved in a multi stage mass spectrometry experiment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precursor_activation_attribute">
            <summary>precursor activation attribute: Precursor Activation Attribute.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_activation_energy">
            <summary>activation energy: Activation Energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_chemical_type">
            <summary>ion chemical type: Ion Type.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_attribute">
            <summary>ion attribute: Ion properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_role">
            <summary>ion role: Ion Role.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_base_peak_intensity">
            <summary>base peak intensity: The intensity of the greatest peak in the mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_base_peak_m_z">
            <summary>base peak m/z: M/z value of the signal of highest intensity in the mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_attribute">
            <summary>scan attribute: Scan properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dwell_time">
            <summary>dwell time: The time spent gathering data across a peak.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_window_lower_limit">
            <summary>scan window lower limit: The upper m/z bound of a mass spectrometer scan window.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_window_upper_limit">
            <summary>scan window upper limit: The lower m/z bound of a mass spectrometer scan window.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_attribute">
            <summary>spectrum attribute: Spectrum properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_full_scan">
            <summary>full scan: Feature of the ion trap mass spectrometer where MS data is acquired over a mass range.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_enhanced_resolution_scan">
            <summary>enhanced resolution scan: Special scan mode, where data with improved resoltuion is acquired. This is typically achieved by scanning a more narrow m/z window or scanning with a lower scan rate.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_zoom_scan">
            <summary>zoom scan: Special scan mode, where data with improved resoltuion is acquired. This is typically achieved by scanning a more narrow m/z window or scanning with a lower scan rate.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_instrument_attribute">
            <summary>instrument attribute: Instrument properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ABI">
            <summary>ABI: Applied Biosystems instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Applied_Biosystems_instrument_model">
            <summary>Applied Biosystems instrument model: Applied Biosystems instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Thermo_Scientific_instrument_model">
            <summary>Thermo Scientific instrument model: Thermo Scientific instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Finnigan_MAT_instrument_model">
            <summary>Finnigan MAT instrument model: Finnigan MAT instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Thermo_Electron_instrument_model">
            <summary>Thermo Electron instrument model: Thermo Electron Corporation instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Dionex_instrument_model">
            <summary>Dionex instrument model: Dionex instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Agilent_instrument_model">
            <summary>Agilent instrument model: Agilent instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Varian_instrument_model">
            <summary>Varian instrument model: Varian instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Hitachi_instrument_model">
            <summary>Hitachi instrument model: Hitachi instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_optics_attribute">
            <summary>ion optics attribute: Ion optics involves components that help focus ion streams in mass spectrometry.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_source_potential">
            <summary>source potential: Potential difference at the MS source in volts.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nanospray_inlet">
            <summary>nanospray inlet: Nanospray Inlet.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_orbitrap">
            <summary>orbitrap: An ion trapping device that consists of an outer barrel-like electrode and a coaxial inner spindle-like electrode that form an electrostatic field with quadro-logarithmic potential distribution. The frequency of harmonic oscillations of the orbitally trapped ions along the axis of the electrostatic field is independent of the ion velocity and is inversely proportional to the square root of m/z so that the trap can be used as a mass analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Thermo_Fisher_Scientific_instrument_model">
            <summary>Thermo Fisher Scientific instrument model: Thermo Fisher Scientific instrument model. The company has gone through several names including Thermo Finnigan, Thermo Scientific.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_source_attribute">
            <summary>source attribute: Property of a source device that need a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_detector_attribute">
            <summary>detector attribute: Detector attribute recognized as a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_analyzer_attribute">
            <summary>mass analyzer attribute: Analyzer properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_purgatory">
            <summary>purgatory: Terms that will likely become obsolete unless there are wails of dissent.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_1200_series_LC_MSD_VL">
            <summary>1200 series LC/MSD VL: The LC/MSD VL ion trap is part of the family of Agilent ion trap mass spectrometers. It has ESI, APCI and APPI ion sources and is a useful ion trap when the amount of sample is not the limiting factor.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6410_Triple_Quad_LC_MS">
            <summary>6410 Triple Quad LC/MS: The 6410 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. Mass range of the mass spectrometer is 15-1650 m/z, resolution is at three settings of 0.7 u (unit), 1.2 u (wide) and 2.5 u (widest). The mass accuracy for 6410 mass spectrometer is 0.1 across the mass range. The collision cell is a hexapole with linear acceleration.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6410_Triple_Quadrupole_LC_MS">
            <summary>6410 Triple Quadrupole LC/MS: The 6410 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. Mass range of the mass spectrometer is 15-1650 m/z, resolution is at three settings of 0.7 u (unit), 1.2 u (wide) and 2.5 u (widest). The mass accuracy for 6410 mass spectrometer is 0.1 across the mass range. The collision cell is a hexapole with linear acceleration.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6340_Ion_Trap_LC_MS">
            <summary>6340 Ion Trap LC/MS: The 6340 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6330_Ion_Trap_LC_MS">
            <summary>6330 Ion Trap LC/MS: The 6330 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6320_Ion_Trap_LC_MS">
            <summary>6320 Ion Trap LC/MS: The 6320 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6310_Ion_Trap_LC_MS">
            <summary>6310 Ion Trap LC/MS: The 6310 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.35 resolution and mass range of 200-4000 with resolution of 3-4. The scan speed varies from 1650-27000 for the respective mass ranges.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6210_Time_of_Flight_LC_MS">
            <summary>6210 Time-of-Flight LC/MS: The 6210 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6140_Quadrupole_LC_MS">
            <summary>6140 Quadrupole LC/MS: The 6140 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6140 Quadrupole mass spectrometer has m/z range of 10-1350, 2500 u/s scan speed in standard mode and 10000 u/s speed in fast-scan mode. It also uses multiple signal acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6130_Quadrupole_LC_MS">
            <summary>6130 Quadrupole LC/MS: The 6130 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 series of Agilent mass spectrometers. The 6130 quadrupole mass spectrometer has m/z range of 2-3000, 2500 u/s scan speed in standard mode and 5250 u/s speed in fast-scan mode. It also uses multiple signal acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6120_Quadrupole_LC_MS">
            <summary>6120 Quadrupole LC/MS: The 6120 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent mass spectrometers. 6120 quadrupole mass spectrometer has m/z range of 10-1500, 2500 u/s scan speed and utilizes multiple signal acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_6110_Quadrupole_LC_MS">
            <summary>6110 Quadrupole LC/MS: The 6110 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with an entry level single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6110 Quadrupole mass spectrometer has m/z range of 10-1500 and 2500 u/s scan speed. It proves useful for wide range of SIM quantitative applications.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_1200_series_LC_MSD_SL">
            <summary>1200 series LC/MSD SL: The 1200 Series LC/MSD SL ion trap belongs to the Agilent LC/MSD ion trap family. It provides fast polarity switching and multisignal data acquisition capabilities in a single run while also providing 5 stages of automated data dependent MS/MS and 11 stages of manual MS/MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_alternating_OBSOLETE">
            <summary>alternating: Alternating.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_polarity">
            <summary>scan polarity: An acquisition mode to which specifies weather polarity is negative, positive or alternating.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_unit_OBSOLETE">
            <summary>mass unit: A unit of measurement for mass.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_instrument_configuration">
            <summary>instrument configuration: Description of the instrument or the mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_instrument">
            <summary>instrument: Description of the instrument or the mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_optics">
            <summary>ion optics: Device used in the construction of a mass spectrometer to focus, contain or otherwise manipulate ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_additional_description">
            <summary>additional description: Terms to describe Additional.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_unit">
            <summary>unit: Terms to describe units.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum_instrument_description">
            <summary>spectrum instrument description: Terms used to describe the spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_source">
            <summary>source: Terms to describe the source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample">
            <summary>sample: Terms to describe the sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_activation">
            <summary>activation: Terms to describe the precursor activation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precursor_activation">
            <summary>precursor activation: Terms to describe the precursor activation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_selection_attribute">
            <summary>ion selection attribute: Ion selection properties that are associated with a value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_instrument_additional_description">
            <summary>instrument additional description: Additional terms to describe the instrument as outlined in the mass spec doc, Appendix 1, section 1.5.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_detector">
            <summary>detector: The device that detects ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_processing">
            <summary>data processing: Terms used to describe types of data processing.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_data_transformation">
            <summary>data transformation: Terms used to describe types of data processing.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_analyzer">
            <summary>analyzer: Terms used to describe the Analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_analyzer">
            <summary>mass analyzer: Terms used to describe the Analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LXQ">
            <summary>LXQ: Finnigan LXQ MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_Orbitrap">
            <summary>LTQ Orbitrap: Finnigan LTQ Orbitrap MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ_FT">
            <summary>LTQ FT: Finnigan LTQ FT MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LTQ">
            <summary>LTQ: Finnigan LTQ MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FIB">
            <summary>FIB: The ionization of any species by the interaction of a focused beam of ions having a translational energy of several thousand eV with a solid sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fast_ion_bombardment">
            <summary>fast ion bombardment: The ionization of any species by the interaction of a focused beam of ions having a translational energy of several thousand eV with a solid sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sequential_m_z_separation_method__">
            <summary>sequential m/z separation method ?: TODO: Add definition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_m_z_Separation_Method">
            <summary>m/z Separation Method: TODO: Add definition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_analyzer_type">
            <summary>mass analyzer type: Mass analyzer separates the ions according to their mass-to-charge ratio.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spectrum">
            <summary>spectrum: A mass spectrum is an intensity vs m/z (mass-to-charge ratio) plot representing a chemical analysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan">
            <summary>scan: Function or process of the mass spectrometer where it records a spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_unimolecular_dissociation">
            <summary>unimolecular dissociation: Fragmentation reaction in which the molecularity is treated as one, irrespective of whether the dissociative state is that of a metastable ion produced in the ion source or results from collisional excitation of a stable ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_surface_induced_reaction">
            <summary>surface-induced reaction: A process wherein a reactant ion interacts with a surface to produce either chemically different species or a change in the internal energy of the reactant ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_superelastic_collision">
            <summary>superelastic collision: Collision in which the translational energy of the fast-moving collision partner is increased at the expense of internal energy of one or both collision partners.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_reaction">
            <summary>ion reaction: Chemical transformation involving an ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_partial_charge_transfer_reaction">
            <summary>partial charge transfer reaction: Reaction of an ion with a neutral species in which some but not all of the ion charge is transferred to the neutral.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Multiphoton_Dissociation">
            <summary>Multiphoton Dissociation: A process wherein the reactant ion is dissociated as a result of absorption of one or more photons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_photodissociation">
            <summary>photodissociation: A process wherein the reactant ion is dissociated as a result of absorption of one or more photons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_McLafferty_Rearrangement">
            <summary>McLafferty Rearrangement: A dissociation reaction triggered by transfer of a hydrogen atom via a 6-member transition state to the formal radical/charge site from a carbon atom four atoms removed from the charge/radical site (the gamma-carbon); subsequent rearrangement of electron density leads to expulsion of an olefin molecule. This term was originally applied to ketone ions where the charge/radical site is the carbonyl oxygen, but it is now more widely applied.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_low_energy_collision_induced_dissociation">
            <summary>low-energy collision-induced dissociation: A collision-induced dissociation process wherein the precursor ion has the translational energy lower than approximately 1000 eV. This process typically requires multiple collisions and the collisional excitation is cumulative.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_low_energy_collisions">
            <summary>low energy collisions: A collision between an ion and neutral species with translational energy approximately 1000 eV or lower.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_kinetic_method">
            <summary>kinetic method: An approach to determination of ion thermodynamic quantities by a bracketing procedure in which the relative probabilities of competing ion fragmentations are measured via the relative abundances of the reaction products. The extended kinetic method takes the associated entropy changes into account.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_neutral_species_exchange_reaction">
            <summary>ion/neutral species exchange reaction: In this reaction an association reaction is accompanied by the subsequent or simultaneous liberation of a different neutral species as a product.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_neutral_species_reaction">
            <summary>ion/neutral species reaction: A process wherein a charged species interacts with a neutral reactant to produce either chemically different species or changes in the internal energy of one or both of the reactants.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_neutral_complex">
            <summary>ion/neutral complex: A particular type of transition state that lies between precursor and product ions on the reaction coordinate of some ion reactions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_molecule_reaction">
            <summary>ion/molecule reaction: The reaction of an ion with a neutral molecule. The term ion-molecule reaction is not recommended because the hyphen suggests a single species that is that is both an ion and a molecule.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ionizing_collision">
            <summary>ionizing collision: The reaction of an ion with a neutral species in which one or more electrons are removed from either the ion or neutral.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_energy_loss_spectrum">
            <summary>ion energy loss spectrum: A plot of the relative abundance of a beam or other collection of ions as a function their loss of translational energy in reactions with neutral species.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_hydrogen_deuterium_exchange">
            <summary>hydrogen/deuterium exchange: Exchange of hydrogen atoms with deuterium atoms in a molecule or pre-formed ion in solution prior to introduction into a mass spectrometer, or by reaction of an ion with a deuterated collision gas inside a mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_homolytic_cleavage">
            <summary>homolytic cleavage: Fragmentation of an odd electron ion that results from one of a pair of electrons that form a bond between two atoms moving to form a pair with the odd electron on the atom at the apparent charge site. Fragmentation results in the formation of an even electron ion and a radical. This reaction involves the movement of a single electron and is symbolized by a single-barbed arrow. Synonymous with Homolysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_high_energy_collision_induced_dissociation">
            <summary>high-energy collision-induced dissociation: A collision-induced dissociation process wherein the projectile ion has the translational energy higher than approximately 1000 eV.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_high_energy_collision">
            <summary>high energy collision: Collision-induced dissociation process wherein the projectile ion has laboratory-frame translational energy higher than 1 keV.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_heterolytic_cleavage">
            <summary>heterolytic cleavage: Fragmentation of a molecule or ion in which both electrons forming the single bond that is broken remain on one of the atoms that were originally bonded. This term is synonymous with heterolysis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_collision_gas">
            <summary>collision gas: An inert gas used for collisional excitation. The term target gas is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_collisional_excitation">
            <summary>collisional excitation: The reaction of an ion with a neutral species in which the translational energy of the collision is converted into internal energy of the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_transfer_reaction">
            <summary>charge transfer reaction: The reaction of an ion with a neutral species in which some or all of the charge of the reactant ion is transferred to the neutral species.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_stripping_reaction">
            <summary>charge stripping reaction: Reaction of a positive ion with a neutral species in which the positive charge on the product ion is greater than that on the reactant ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_permutation_reaction">
            <summary>charge permutation reaction: The reaction of an ion with a neutral species with a resulting change in the magnitude or sign of the charge on the reactant ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_inversion_reaction">
            <summary>charge inversion reaction: Reaction of an ion with a neutral species in which the charge on the product ion is reversed in sign with respect to the reactant ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_induced_fragmentation">
            <summary>charge-induced fragmentation: Fragmentation of an odd electron ion in which the cleaved bond is adjacent to the apparent charge site. Synonymous with charge mediated fragmentation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_buffer_gas">
            <summary>buffer gas: An inert gas used for collisional deactivation of internally excited ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_beta_cleavage">
            <summary>beta-cleavage: A homolytic cleavage where the bond fission occurs between at an atom removed from the apparent charge site atom by two bonds and an atom adjacent to that atom and removed from the aparent charge site by three bonds.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_alpha_cleavage">
            <summary>alpha-cleavage: A homolytic cleavage where the bond fission occurs between at the atom adjacent to the atom at the apparent charge site and an atom removed from the aparent charge site by two bonds.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_association_reaction">
            <summary>association reaction: The reaction of an ion with a neutral species in which the reactants combine to form a single ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_vertical_ionization">
            <summary>vertical ionization: A process in which an electron is removed from or added to a molecule without a change in the positions of the atoms. The resulting ion is typically in an excited vibrational state.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_thermal_ionization">
            <summary>thermal ionization: The ionization of a neutral species through contact with a high temperature surface.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_surface_ionization">
            <summary>surface ionization: The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_surface_assisted_laser_desorption_ionization">
            <summary>surface-assisted laser desorption ionization: The formation of gas-phase ions from molecules that are deposited on a particular surface substrate that is irradiated with a pulsed laser. See also matrix-assisted laser desorption ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_spark_ionization">
            <summary>spark ionization: The formation of ions from a solid material by an intermittent electrical discharge.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_soft_ionization">
            <summary>soft ionization: The formation of gas-phase ions without extensive fragmentation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_secondary_ionization">
            <summary>secondary ionization: The process in which ions are ejected from a sample surface as a result of bombardment by a primary beam of atoms or ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pre_ionization_state">
            <summary>pre-ionization state: An electronic state capable of undergoing auto-Ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_plasma_desorption_ionization">
            <summary>plasma desorption ionization: The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_penning_ionization">
            <summary>penning ionization: Ionization that occurs through the interaction of two or more neutral gaseous species, at least one of which is internally excited.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nanospray">
            <summary>nanospray: Electrospray ionization at a flow rate less than ~25 nL/min. Nanoelectrospray is synonymous with nanospray. The flow is dependent on the potenial on the tip of the electrospray needle and/or a gas presure to push the sample through the needle. See also electrospray ionization and microelectrospray.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nanoelectrospray">
            <summary>nanoelectrospray: Electrospray ionization at a flow rate less than ~25 nL/min. Nanoelectrospray is synonymous with nanospray. The flow is dependent on the potenial on the tip of the electrospray needle and/or a gas presure to push the sample through the needle. See also electrospray ionization and microelectrospray.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_microelectrospray">
            <summary>microelectrospray: Electrospray ionization at a solvent flow rate of 300-800 nL/min where the flow is a result of a mechanical pump. See nanaoelectrospray.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_membrane_inlet">
            <summary>membrane inlet: A semi-permeable membrane separator that permits the passage of gas sample directly to the mass spectrometer ion source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_liquid_secondary_ionization">
            <summary>liquid secondary ionization: The ionization of any species by the interaction of a focused beam of ions with a sample that is dissolved in a solvent matrix. See also fast atom bombardment and secondary ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_laser_desorption_ionization">
            <summary>laser desorption ionization: The formation of gas-phase ions by the interaction of a pulsed laser with a solid or liquid material.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ionization_efficiency">
            <summary>ionization efficiency: The ratio of the number of ions formed to the number of electrons, molecules or photons used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_pair_formation">
            <summary>ion-pair formation: The reaction of a molecule to form both a positive ion and negative ion fragment among the products.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_desolvation">
            <summary>ion desolvation: The removal of solvent molecules clustered around a gas-phase ion by means of heating and/or collisions with gas molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_ionization">
            <summary>electron ionization: The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dissociative_ionization">
            <summary>dissociative ionization: The reaction of a gas-phase molecule that results in its decomposition to form products, one of which is an ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_desorption_ionization_on_silicon">
            <summary>desorption/ionization on silicon: The formation of ions by laser desorption ionization of a sample deposited on a porous silicon surface.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chemi_ionization">
            <summary>chemi-ionization: The reaction of a neutral molecule with an internally excited molecule to form an ion. Note that this term is not synonymous with chemical ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_exchange_ionization">
            <summary>charge exchange ionization: The interaction of an ion with an atom or molecule in which the charge on the ion is transferred to the neutral without the dissociation of either. Synonymous with charge transfer ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autoionization">
            <summary>autoionization: The formation of an ion when an atom or molecule in a discrete state with an energy greater than the ionization threshold loses an electron spontaneously without further interaction with an energy source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autodetachment">
            <summary>autodetachment: The formation of a neutral when a negative ion in a disrtete state with an energy greater than the detachment threshold loses an electron spontaneously without further interaction with an energy source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_atmospheric_pressure_photoionization">
            <summary>atmospheric pressure photoionization: Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_associative_ionization">
            <summary>associative ionization: An ionization process in which two excited atoms or molecules react to form a single positive ion and an electron.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_adiabatic_ionization">
            <summary>adiabatic ionization: A process whereby an electron is removed from an atom, ion, or molecule to produce an ion in its lowest energy state.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_unstable_ion">
            <summary>unstable ion: An ion with sufficient enerrgy to dissociate within the ion source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_stable_ion">
            <summary>stable ion: An ion with internal energy sufficiently low that it does not rearrange or dissociate prior to detection in a mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_reference_ion">
            <summary>reference ion: A stable ion whose structure is known with certainty. These ions are usually formed by direct ionization of a neutral molecule of known structure and are used to verify by comparison the structure of an unknown ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_radical_ion">
            <summary>radical ion: An ion, either a cation or anion, containing unpaired electrons in its ground state. The unpaired electron is denoted by a superscript dot alongside the superscript symbol for charge, such as for the molecular ion of a molecule M, that is, M+. Radical ions with more than one charge and/or more than one unpaired electron are denoted such as M(2+)(2). Unless the positions of the unpaired electron and charge can be associated with specific atoms, superscript charge designation should be placed before the superscript dot designation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_protonated_molecule">
            <summary>protonated molecule: An ion formed by interaction of a neutral molecule with a proton and represented by the symbol [M + H]+, where M is the neutral molecule. The term 'protonated molecular ion,' 'quasi-molecular ion' and 'pseudo-molecular ion' are not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_positive_ion">
            <summary>positive ion: An atomic or molecular species having a net positive electric charge.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_principal_ion">
            <summary>principal ion: Most abundant ion of an isotope cluster, such as the 11B79Br2 81Br+ ion of m/z 250 of the cluster of isotopologue molecular ions of BBr3. The term principal ion has also been used to describe ions that have been artificially isotopically enriched in one or more positions such as CH3 13CH3+ or CH2D2 +, but those are best defined as isotopologue ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_onium_ion">
            <summary>onium ion: A positively charged hypervalent ion of the nonmetallic elements. Examples are the methonium ion CH5+, the hydrogenonium ion H3+ and the hydronium ion H3O+. Other examples are the carbonium, oxonium, sulfonium, nitronium, diazonium, phosphonium, and halonium ions. Onium ions are not limited to monopositive ions; multiply-charged onium ions exist such as the gitonic (proximal) oxonium dication H4O2+ and the distonic oxonium dication H2O+-CH2-CH2-OH2+.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_non_classical_ion">
            <summary>non-classical ion: Hyper-coordinated carbonium ion such as the penta-coordinated norbornyl cation. Note: Tri-coordinated carbenium ions are termed classical ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_negative_ion">
            <summary>negative ion: An atomic or molecular species having a net negative electric charge.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_molecular_ion">
            <summary>molecular ion: An ion formed by the removal of one or more electrons to form a positive ion or the addition off one or more electrons to form a negative ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_metastable_ion">
            <summary>metastable ion: An ion that is formed with internal energy higher than the threshold for dissociation but with a lifetime great enough to allow it to exit the ion source and enter the mass spectrometer where it dissociates before detection.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Isotopomeric_ion">
            <summary>Isotopomeric ion: Isomeric ion having the same numbers of each isotopic atom but differing in their positions. Isotopomeric ions can be either configurational isomers in which two atomic isotopes exchange positions or isotopic stereoisomers. The term isotopomer is a shortening of isotopic isomer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Isotopologue_ion">
            <summary>Isotopologue ion: An ion that differs only in the isotopic composition of one or more of its constituent atoms. For example CH4+ and CH3D+ or 10BF3 and 11BF3. The term isotopologue is a contraction of isotopic homologue.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_">
            <summary>ion?: An atomic or molecular species having a net positive or negative electric charge.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fragment_ion_OBSOLETE">
            <summary>fragment ion: A product ion that results from the dissociation of a precursor ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_enium_ion">
            <summary>enium ion: A positively charged lower-valency ion of the nonmetallic elements. The methenium ion is CH3+. Other examples are the oxenium, sulfenium, nitrenium, phosphenium, and halenium ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_distonic_ion">
            <summary>distonic ion: A radical cation or anion in which the charge site and the unpaired electron spin cannot be both formally located in the same atom or group of atoms as it can be with a conventional ion. For example, CH2-OH2+ is a distonic ion whereas the radical cation of methanol, CH3OH+ is a conventional ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dimeric_ion">
            <summary>dimeric ion: An ion formed by ionization of a dimer or by the association of an ion with its neutral counterpart such as [M2]+ or [M-H-M]+.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_diagnostic_ion">
            <summary>diagnostic ion: A product ion whose formation reveals structural or compositional information of its precursor. For instance, the phenyl cation in an electron ionization mass spectrum is a diagnostic ion for benzene and derivatives.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Conventional_ion">
            <summary>Conventional ion: A radical cation or anion in which the charge site and the unpaired electron spin are both formally located in the same atom or group of atoms, as opposed to the spatially separate electronic configuration of distonic ions. The radical cation of methanol, CH3OH+, in which the charge and spin sites are formally located at the O atom is an example of a conventional ion, whereas .CH2-OH2+ is a distonic ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_cluster_ion">
            <summary>cluster ion: An ion formed by a multi-component atomic or molecular assembly of one or more ions with atoms or molecules, such as [(H20)nH]+, [(NaCl)nNa]+ and [(H3PO3)nHPO3]-.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_cationized_molecule">
            <summary>cationized molecule: An ion formed by the association of a cation with a neutral molecule, M, for example [M+ Na]+ and [M + K]+. The terms quasi-molecular ion and pseudo-molecular ion should not be used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_anti_aromatic_ion">
            <summary>anti-aromatic ion: A planar cyclic ion with 4n ? electrons and is therefore not aromatic.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_analog_ion">
            <summary>analog ion: Ions that have similar chemical valence, for example the acetyl cation CH3-CO+ and the thioacetyl cation CH3-CS+.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_aromatic_ion">
            <summary>aromatic ion: A planar cyclic ion that obeys the Hckel (4n + 2) rule where n is a positive integer representing the number of conjugated Pi electrons. Charge delocalization leads to greater stability compared to a hypothetical localized structure.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_adduct_ion">
            <summary>adduct ion: Ion formed by the interaction of an ion with one or more atoms or molecules to form an ion containing all the constituent atoms of the precursor ion as well as the additional atoms from the associated atoms or molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_secondary_electron">
            <summary>secondary electron: Electrons that are ejected from a sample surface as a result of bombardment by a primary beam of atoms, ions or photons. WAS IN DETECTOR TYPE. Where should it go?</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_postacceleration_detector">
            <summary>postacceleration detector: A detector in which the charged particles are accelerated to a high velocity and impinge on a conversion dynode, emitting secondary electrons. The electrons are accelerated onto a phosphor screen, which emits photons that are in turn detected using a photomultiplier or other photon detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_point_collector">
            <summary>point collector: A detector in which the ion beam is focused onto a point and the individual ions arrive sequentially.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_to_photon_detector">
            <summary>ion-to-photon detector: A detector in which ions strike a conversion dynode to produce electrons that in turn strike a phosphor and the resulting photons are detected by a photomultiplier.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_focal_plane_collector">
            <summary>focal plane collector: A detector for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dynode">
            <summary>dynode: One of a series of electrodes in a photomultiplier tube. Such an arrangement is able to amplify the current emitted by the photocathode.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_conversion_dynode">
            <summary>conversion dynode: A surface that is held at high potential such that ions striking the surface produce electrons that are subsequently detected.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_array_detector">
            <summary>array detector: Detector comprising several ion collection elements, arranged in a line or grid where each element is an individual detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Progeny_Fragment_Ion">
            <summary>Progeny Fragment Ion: A charged product of a series of consecutive reactions that includes product ions, 1st generation product ions, 2nd generation product ions, etc. Given the sequential fragmentation scheme: M1+ -&gt; M2+ -&gt; M3+ -&gt; M4+ -&gt; M5+. M4+ is the precursor ion of M5+, a 1st generation product ion of M3+, a 2nd generation product ion of M2+ and a 3rd generation product ion of M1+.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_progeny_ion">
            <summary>progeny ion: A charged product of a series of consecutive reactions that includes product ions, 1st generation product ions, 2nd generation product ions, etc. Given the sequential fragmentation scheme: M1+ -&gt; M2+ -&gt; M3+ -&gt; M4+ -&gt; M5+. M4+ is the precursor ion of M5+, a 1st generation product ion of M3+, a 2nd generation product ion of M2+ and a 3rd generation product ion of M1+.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_spectrum_OBSOLETE">
            <summary>product ion spectrum: A mass spectrum recorded from any spectrometer in which the appropriate m/z separation scan function is set to record the product ion or ions of selected precursor ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion">
            <summary>product ion: An ion formed as the product of a reaction involving a particular precursor ion. The reaction can be unimolecular dissociation to form fragment ions, an ion/molecule reaction, or simply involve a change in the number of charges. The term fragment ion is deprecated. The term daughter ion is deprecated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precursor_ion_spectrum">
            <summary>precursor ion spectrum: Spectrum generated by scanning precursor m/z while monitoring a fixed product m/z</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precursor_ion">
            <summary>precursor ion: An ion that reacts to form particular product ions. The reaction can be unimolecular dissociation, ion/molecule reaction, isomerization, or change in charge state. The term parent ion is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nth_generation_product_ion_spectrum_OBSOLETE">
            <summary>nth generation product ion spectrum: The mass spectrum recorded from any mass spectrometer in which the appropriate scan function can be set to record the appropriate generation product ion or ions of m/z selected precursor ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nth_generation_product_ion_scan">
            <summary>nth generation product ion scan: The specific scan functions or processes that record the appropriate generation of product ion or ions of any m/z selected precursor ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nth_generation_product_ion">
            <summary>nth generation product ion: Serial product ions from dissociation of selected precursor ions where n refers to the number of stages of dissociation. The term granddaughter ion is deprecated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_neutral_loss">
            <summary>neutral loss: The loss of an uncharged species during a rearrangement process.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MS_MS_in_Space">
            <summary>MS/MS in Space: A tandem mass spectrometry method in which product ion spectra are recorded in m/z analyzers separated in space. Specific m/z separation functions are designed such that in one section of the instrument ions are selected, dissociated in an intermediate region, and the product ions are then transmitted to another analyser for m/z separation and data acquisition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MS_MS_in_Time">
            <summary>MS/MS in Time: A tandem mass spectrometry method in which product ion spectra are recorded in a single m/z analyzer (such as a Paul Ion Trap or FTMS) in discreet steps over time. Ions in a specific m/z range are selected, dissociated, and the product ions analyzed sequentially in time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Linked_Scan_at_Constant_B_1__E_E0___1_2___E">
            <summary>Linked Scan at Constant B[1-(E/E0)]^1/2 / E: A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector placed in either order. The accelerating voltage is fixed while scanning the magnetic field, B, and electric field, E, simultaneously, so as to maintain the quantity B[1-(E/E0)]1/2/E at a constant value. This linked scan records a constant neutral mass loss (or gain) spectrum of dissociation or other reactions occurring in a field free region preceding the two sectors. E0 is the electric field required to transmit the singly charged analog of the desired neutral fragment. The term B[1-(E/E0)]1/2/E linked scan.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Linked_Scan_at_Constant_B2_E">
            <summary>Linked Scan at Constant B2/E: A linked scan performed on a sector mass spectrometer that incorporates at least one electric sector plus one magnetic sector in either order. The accelerating voltage is fixed and the magnetic field, B, and the electric field, E, are scanned simultaneously so as to maintain the ratio B2/E at a constant value. This linked scan records a precursor ion spectrum of dissociation or other reactions occurring in the field free region preceding the two sectors. The term B2/E linked scan is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Linked_Scan_at_Constant_E2_V">
            <summary>Linked Scan at Constant E2/V: A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector. The electric sector field, E, and the accelerating voltage, V, are scanned simultaneously, so as to maintain the ratio E2/V at a constant value. This linked scan recordss a product ion spectrum of dissociation or other reactions occurring in a field free region (FFR) preceding the two sectors.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_linked_scan_at_constant_b_e">
            <summary>linked scan at constant b/e: A linked scan at constant B/E may be performed on a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector. The magnetic field B and the electric field E are scanned simultaneously while the accelerating voltage V is held constant, so as to maintain the ratio of the two fields constant. This linked scan may record a product ion spectrum of dissociation or other reactions occurring in a field free region preceding the two sectors.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_linked_scan">
            <summary>linked scan: A scan in an instrument with two or more m/z analysers or in a sector mass spectrometer that incorporates at least one magnetic sector and one electric sector. Two or more of the analyzers are scanned simultaneously so as to preserve a predetermined relationship between scan parameters to produce a product ion, precursor ion or constant neutral loss spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_e_2_mass_spectrum">
            <summary>e/2 mass spectrum: A mass spectrum obtained using a sector mass spectrometer in which the electric sector field E is set to half the value required to transmit the main ion-beam. This spectrum records the signal from doubly charged product ions of charge-stripping reactions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_consecutive_reaction_monitoring_OBSOLETE">
            <summary>consecutive reaction monitoring: A type of MS/MS experiments with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant_neutral_mass_loss_spectrum">
            <summary>constant neutral mass loss spectrum: A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant_neutral_loss_spectrum">
            <summary>constant neutral loss spectrum: A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant_neutral_mass_gain_spectrum">
            <summary>constant neutral mass gain spectrum: A spectrum formed of all product ions that have been produced by gain of a pre-selected neutral mass following the reaction with and addition of the gas in a collision cell.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant_neutral_gain_spectrum">
            <summary>constant neutral gain spectrum: A spectrum formed of all product ions that have been produced by gain of a pre-selected neutral mass following the reaction with and addition of the gas in a collision cell.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Constant_Neutral_Mass_Gain_Scan">
            <summary>Constant Neutral Mass Gain Scan: Spectrum of all precursor ions that undergo a selected m/z increment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant_neutral_gain_scan">
            <summary>constant neutral gain scan: Spectrum of all precursor ions that undergo a selected m/z increment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant_neutral_loss_scan">
            <summary>constant neutral loss scan: Spectrum of all precursor ions that undergo a selected m/z decrement.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_inversion_mass_spectrum">
            <summary>charge inversion mass spectrum: The measurement of the relative abundance of ions that result from a charge inversion reaction as a function of m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_2E_Mass_Spectrum">
            <summary>2E Mass Spectrum: A mass spectrum obtained by setting the electric sector field E to twice the value required to transmit the main ion-beam thereby allowing ions with a kinetic energy-to-charge ratio twice that of the main ion-beam to be transmitted. Product ions resulting from partial charge transfer reactions such as m^2+ + N ? m^+ + N^+ that occur in a collision cell (containing a gas, N) located in a field-free region preceding a magnetic and electric sector combination are detected. When the magnetic sector field B is scanned, a mass spectrum of singly charged product ions of doubly charged precursor ions is obtained.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_static_field">
            <summary>static field: An electric or magnetic field that does not change in time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_space_charge_effect">
            <summary>space charge effect: The mutual repulsion of particles of like charge that limits the current in a charged-particle beam and causes beams or packets of charged particles to expand radially over time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_resonance_ion_ejection">
            <summary>resonance ion ejection: A mode of ion ejection in a quadrupole ion trap that relies on a auxiliary radio frequency voltage that is applied to the end-cap electrodes. The voltage is tuned to the secular frequency of a particular ion to eject it.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_orthogonal_extraction">
            <summary>orthogonal extraction: The pulsed acceleration of ions perpendicular to their direction of travel into a time-of-flight mass spectrometer. Ions may be extracted from a directional ion source, drift tube or m/z separation stage.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mathieu_stability_diagram">
            <summary>mathieu stability diagram: A graphical representation expressed in terms of reduced coordinates that describes charged particle motion in a quadrupole mass filter or quadrupole ion trap mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_selective_instability">
            <summary>mass selective instability: A method for selective ejection of ions according to their m/z value in an ion trap.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_selective_axial_ejection">
            <summary>mass selective axial ejection: The use of mass selective instability to eject ions of selected m/z values from an ion trap.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_m_z_range_">
            <summary>scan m/z range?: The limit of m/z over which a mass spectrometer can detect ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_limit">
            <summary>mass limit: The m/z value above which ions cannot be detected in a mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_kinetic_energy_analyzer">
            <summary>kinetic energy analyzer: A device for measuring the kinetic energy of charged particles using a retarding field, time-of-flight, or the extent of deflection in an electric or magnetic field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fringing_field">
            <summary>fringing field: The electric or magnetic field that extends from the edge of a sector, lens or other ion optics element.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_first_stability_region">
            <summary>first stability region: The region of a Mathieu stability diagram closest to the origin. Ions within this region can traverse the full length of a transmission quadrupole.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electric_field_strength">
            <summary>electric field strength: The magnitude of the force per unit charge at a given point in space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_einzel_lens">
            <summary>einzel lens: Three element charged particle lens in which the first and third elements are held at the same voltage. Such a lens produces focusing without changing the translational energy of the particle.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dynamic_mass_spectrometry">
            <summary>dynamic mass spectrometry: A mass spectrometer in which m/z separation using one or more electric fields that vary with time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_cyclotron_motion">
            <summary>cyclotron motion: The circular motion of a charged particle moving at velocity v in a magnetic field B that results from the force qvB.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_accelerating_voltage">
            <summary>accelerating voltage: The electrical potential used to impart kinetic energy to ions in a mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transmission_quadrupole_mass_spectrometer">
            <summary>transmission quadrupole mass spectrometer: A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_tandem_mass_spectrometer">
            <summary>tandem mass spectrometer: A mass spectrometer designed for mass spectrometry/mass spectrometry.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sector_mass_spectrometer">
            <summary>sector mass spectrometer: A mass spectrometer consisting of one or more magnetic sectors for m/z selection in a beam of ions. Such instruments may also have one or more electric sectors for energy selection.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_reflectron">
            <summary>reflectron: A time-of-flight mass spectrometer that uses a static electric field to reverse the direction of travel of the ions entering it. A reflectron improves mass resolution by assuring that ions of the same m/z but different kinetic energy arrive at the detector at the same time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quistor">
            <summary>quistor: An abbreviation of quadrupole ion storage trap. This term is synonymous with Paul Ion Trap. If so then add a synonym to paul and obsolete this term.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_prolate_traochoidal_mass_spectrometer">
            <summary>prolate traochoidal mass spectrometer: A mass spectrometer in which the ions of different m/z are separated by means of crossed electric and magnetic fields in such a way that the selected ions follow a prolate trochoidal path.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_paul_ion_trap">
            <summary>paul ion trap: A device that permits the trapping of ions by means of an alternating current voltage. The ejection of ions with a m/z less than a prescribed value and retention of those with higher mass depends on the application of radio frequency voltages between a ring electrode and two end-cap electrodes to confine the ions in a circular path. The choice of these voltages determines the m/z below which ions are ejected.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nier_johnson_geometry">
            <summary>nier-johnson geometry: An arrangement for a double-focusing mass spectrometer in which a deflection of ?/2 radians in a radial electric field analyzer is followed by a magnetic deflection of ?/3 radians.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mattauch_herzog_geometry">
            <summary>mattauch-herzog geometry: An arrangement for a double-focusing mass spectrometer in which a deflection of ?/(4 ?(2)) radians in a radial electric field is followed by a magnetic deflection of ?/2 radians.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_spectrum">
            <summary>mass spectrum: A plot of the relative abundance of a beam or other collection of ions as a function of the mass-to-charge ratio (m/z).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_spectrometer">
            <summary>mass spectrometer: An instrument that measures the mass-to-charge ratio and relative abundances of ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_spectrograph_obsolete">
            <summary>mass spectrograph obsolete: An instrument that separates a beam of ions according to their mass-to-charge ratio in which the ions are directed onto a focal plane detector such as a photographic plate.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_linear_ion_trap">
            <summary>linear ion trap: A two dimensional Paul ion trap in which ions are confined in the axial dimension by means of an electric field at the ends of the trap.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_hybrid_mass_spectrometer">
            <summary>hybrid mass spectrometer: A mass spectrometer that combines m/z analyzers of different types to perform tandem mass spectrometry.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_double_focusing_mass_spectrometer">
            <summary>double-focusing mass spectrometer: A mass spectrometer that uses a magnetic sector for m/z focusing and an electric sector for energy focusing of an ion beam.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_cyclotron">
            <summary>cyclotron: A device that uses an oscillating electric field and magnetic field to accelerate charged particles.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TOF_MS">
            <summary>TOF-MS: An instrument that separates ions by m/z in a field-free region after acceleration to a fixed kinetic energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_time_of_flight_mass_spectrometer">
            <summary>time-of-flight mass spectrometer: An instrument that separates ions by m/z in a field-free region after acceleration to a fixed kinetic energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TLF">
            <summary>TLF: Energy focusing in a time-of-flight mass spectrometer that is accomplished by introducing a time delay between the formation of the ions and the application of the accelerating voltage pulse.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_time_lag_focusing">
            <summary>time lag focusing: Energy focusing in a time-of-flight mass spectrometer that is accomplished by introducing a time delay between the formation of the ions and the application of the accelerating voltage pulse.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TIC">
            <summary>TIC: The sum of all the separate ion currents carried by the ions of different m/z contributing to a complete mass spectrum or in a specified m/z range of a mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_total_ion_current">
            <summary>total ion current: The sum of all the separate ion currents carried by the ions of different m/z contributing to a complete mass spectrum or in a specified m/z range of a mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SWIFT">
            <summary>SWIFT: A technique to create excitation waveforms for ions in FT-ICR mass spectrometer or Paul ion trap. An excitation waveform in the time-domain is generated by taking the inverse Fourier transform of an appropriate frequency-domain programmed excitation spectrum, in which the resonance frequencies of ions to be excited are included. This technique may be used for selection of precursor ions in MS/MS experiments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_stored_waveform_inverse_fourier_transform">
            <summary>stored waveform inverse fourier transform: A technique to create excitation waveforms for ions in FT-ICR mass spectrometer or Paul ion trap. An excitation waveform in the time-domain is generated by taking the inverse Fourier transform of an appropriate frequency-domain programmed excitation spectrum, in which the resonance frequencies of ions to be excited are included. This technique may be used for selection of precursor ions in MS/MS experiments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SSMS_OBSOLETE">
            <summary>SSMS: Mass spectrometry using spark ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Spark_Source_Mass_Spectrometry_OBSOLETE">
            <summary>Spark Source Mass Spectrometry: Mass spectrometry using spark ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SORI">
            <summary>SORI: A technique associated with Fourier transform ion cyclotron resonance (FT-ICR) mass spectrometry to carry out ion/neutral reactions such as low-energy collision-induced dissociation. A radio-frequency electric field of slightly off-resonance to the cyclotron frequency of the reactant ion cyclically accelerates and decelerates the reactant ion that is confined in the Penning ion trap. The ion's orbit does not exceed the dimensions of ion trap while the ion undergoes an ion/neutral species process that produces a high average translational energy for an extended time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sustained_off_resonance_irradiation">
            <summary>sustained off-resonance irradiation: A technique associated with Fourier transform ion cyclotron resonance (FT-ICR) mass spectrometry to carry out ion/neutral reactions such as low-energy collision-induced dissociation. A radio-frequency electric field of slightly off-resonance to the cyclotron frequency of the reactant ion cyclically accelerates and decelerates the reactant ion that is confined in the Penning ion trap. The ion's orbit does not exceed the dimensions of ion trap while the ion undergoes an ion/neutral species process that produces a high average translational energy for an extended time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SIFT">
            <summary>SIFT: A device in which m/z selected ions are entrained in an inert carrier gas and undergo ion-molecule reactions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_ion_flow_tube">
            <summary>selected ion flow tube: A device in which m/z selected ions are entrained in an inert carrier gas and undergo ion-molecule reactions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SI_OBSOLETE">
            <summary>SI: The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_suface_ionization_OBSOLETE">
            <summary>suface ionization: The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SEND">
            <summary>SEND: Matrix-assisted laser desorption ionization in which the matrix is covalently linked to the target surface.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_surface_enhanced_neat_desorption">
            <summary>surface enhanced neat desorption: Matrix-assisted laser desorption ionization in which the matrix is covalently linked to the target surface.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SELDI">
            <summary>SELDI: The formation of ionized species in the gas phase from analytes deposited on a particular surface substrate which is irradiated with a laser beam of which wavelength is absorbed by the surface. See also desorption/ionization on silicon and laser desorption/ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_surface_enhanced_laser_desorption_ionization">
            <summary>surface enhanced laser desorption ionization: The formation of ionized species in the gas phase from analytes deposited on a particular surface substrate which is irradiated with a laser beam of which wavelength is absorbed by the surface. See also desorption/ionization on silicon and laser desorption/ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_RGA">
            <summary>RGA: A mass spectrometer used to measure the composition and pressure of gasses in an evacuated chamber.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_residual_gas_analyzer">
            <summary>residual gas analyzer: A mass spectrometer used to measure the composition and pressure of gasses in an evacuated chamber.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_REMPI">
            <summary>REMPI: Multiphoton ionization in which the ionization cross section is significantly enhanced because the energy of the incident photons is resonant with an intermediate excited state of the neutral species.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_resonance_enhanced_multiphoton_ionization">
            <summary>resonance enhanced multiphoton ionization: Multiphoton ionization in which the ionization cross section is significantly enhanced because the energy of the incident photons is resonant with an intermediate excited state of the neutral species.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_q">
            <summary>q: A transmission quadrupole to which an oscillating potential is applied so as to focus a beam of ions through a collision gas with no m/z separation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_collision_quadrupole">
            <summary>collision quadrupole: A transmission quadrupole to which an oscillating potential is applied so as to focus a beam of ions through a collision gas with no m/z separation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PyMS">
            <summary>PyMS: A mass spectrometry technique in which the sample is heated to the point of decomposition and the gaseous decomposition products are introduced into the ion source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pyrolysis_mass_spectrometry">
            <summary>pyrolysis mass spectrometry: A mass spectrometry technique in which the sample is heated to the point of decomposition and the gaseous decomposition products are introduced into the ion source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PI">
            <summary>PI: The ionization of an atom or molecule by a photon, written M + h? ? M^+ + e. The term photon impact is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_photoionization">
            <summary>photoionization: The ionization of an atom or molecule by a photon, written M + h? ? M^+ + e. The term photon impact is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NRMS">
            <summary>NRMS: With this technique, m/z selected ions form neutrals by charge transfer to a collision gas or by dissociation. The neutrals are separated from the remaining ions and ionized in collisions with a second gas. This method is used to investigate reaction intermediates and other unstable species.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_neutralization_reionization_mass_spectrometry">
            <summary>neutralization reionization mass spectrometry: With this technique, m/z selected ions form neutrals by charge transfer to a collision gas or by dissociation. The neutrals are separated from the remaining ions and ionized in collisions with a second gas. This method is used to investigate reaction intermediates and other unstable species.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NICI">
            <summary>NICI: Chemical ionization that results in the formation of negative ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Negative_Ion_chemical_ionization">
            <summary>Negative Ion chemical ionization: Chemical ionization that results in the formation of negative ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MSn">
            <summary>MSn: Multiple stages of precursor ion m/z selection followed by product ion detection for successive progeny ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_stage_mass_spectrometry">
            <summary>multiple stage mass spectrometry: Multiple stages of precursor ion m/z selection followed by product ion detection for successive progeny ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MS_MS">
            <summary>MS/MS: The acquisition, study and spectra of the electrically charged products or precursors of a m/z selected ion or ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_spectrometry_mass_spectrometry">
            <summary>mass spectrometry/mass spectrometry: The acquisition, study and spectra of the electrically charged products or precursors of a m/z selected ion or ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MS">
            <summary>MS: The branch of science that deals with all aspects of mass spectrometers and the results obtained with these instruments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_spectrometry">
            <summary>mass spectrometry: The branch of science that deals with all aspects of mass spectrometers and the results obtained with these instruments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MIKES">
            <summary>MIKES: Spectra that are obtained from a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector in reverse geometry. The accelerating voltage, V, and the magnetic sector field, B, are set at fixed values to select the precursor ions, which are then allowed to dissociate or to react in a field free region between the two sectors. The kinetic energy product ions of m/z selected precursor ions is analyzed by scanning the electric sector field, E. The width of the product ion spectrum peaks is related to the kinetic energy release distribution (KERD) for the dissociation process.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_analyzed_ion_kinetic_energy_spectrometry">
            <summary>mass analyzed ion kinetic energy spectrometry: Spectra that are obtained from a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector in reverse geometry. The accelerating voltage, V, and the magnetic sector field, B, are set at fixed values to select the precursor ions, which are then allowed to dissociate or to react in a field free region between the two sectors. The kinetic energy product ions of m/z selected precursor ions is analyzed by scanning the electric sector field, E. The width of the product ion spectrum peaks is related to the kinetic energy release distribution (KERD) for the dissociation process.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LD_OBSOLETE">
            <summary>LD: The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Laser_Ionization_MERGE_OBSOLETE">
            <summary>Laser Ionization MERGE: The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Laser_Desorption_OBSOLETE">
            <summary>Laser Desorption: The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_KERD">
            <summary>KERD: Distribution of values of translational kinetic energy release for an ensemble of metastable ions undergoing a specific dissociation reaction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_kinetic_energy_release_distribution">
            <summary>kinetic energy release distribution: Distribution of values of translational kinetic energy release for an ensemble of metastable ions undergoing a specific dissociation reaction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IT">
            <summary>IT: A device for spatially confining ions using electric and magnetic fields alone or in combination.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_trap">
            <summary>ion trap: A device for spatially confining ions using electric and magnetic fields alone or in combination.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IRMS">
            <summary>IRMS: The measurement of the relative quantity of the different isotopes of an element in a material with a mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isotope_ratio_mass_spectrometry">
            <summary>isotope ratio mass spectrometry: The measurement of the relative quantity of the different isotopes of an element in a material with a mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IRMPD">
            <summary>IRMPD: Multiphoton ionization where the reactant ion dissociates as a result of the absorption of multiple infrared photons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_infrared_multiphoton_dissociation">
            <summary>infrared multiphoton dissociation: Multiphoton ionization where the reactant ion dissociates as a result of the absorption of multiple infrared photons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IMS">
            <summary>IMS: The separation of ions according to their velocity through a buffer gas under the influence of an electric field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_mobility_spectrometry">
            <summary>ion mobility spectrometry: The separation of ions according to their velocity through a buffer gas under the influence of an electric field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IKES">
            <summary>IKES: A method of analysis in which a beam of ions is separated according to the ratio of its translational energy to charge.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ion_kinetic_energy_spectrometry">
            <summary>ion kinetic energy spectrometry: A method of analysis in which a beam of ions is separated according to the ratio of its translational energy to charge.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_GD_MS">
            <summary>GD-MS: The formation of ions in the gas phase and from solid samples at the cathode by application of a voltage to a low pressure gas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_glow_discharge_ionization">
            <summary>glow discharge ionization: The formation of ions in the gas phase and from solid samples at the cathode by application of a voltage to a low pressure gas.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FI">
            <summary>FI: The removal of electrons from any species by interaction with a high electric field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_field_ionization">
            <summary>field ionization: The removal of electrons from any species by interaction with a high electric field.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FD">
            <summary>FD: The formation of gas-phase ions from a material deposited on a solid surface in the presence of a high electric field. Because this process may encompass ionization by field ionization or other mechanisms, it is not recommended as a synonym for field desorption ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_field_desorption">
            <summary>field desorption: The formation of gas-phase ions from a material deposited on a solid surface in the presence of a high electric field. Because this process may encompass ionization by field ionization or other mechanisms, it is not recommended as a synonym for field desorption ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FAIMS">
            <summary>FAIMS: The separation of ions between two concentric cylindrical electrodes due to application of a high voltage asymmetric waveform whereby ions migrate towards one of the two electrodes depending on the ratio of the high- to low-field mobility of the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_high_field_asymmetric_waveform_ion_mobility_spectrometry">
            <summary>high-field asymmetric waveform ion mobility spectrometry: The separation of ions between two concentric cylindrical electrodes due to application of a high voltage asymmetric waveform whereby ions migrate towards one of the two electrodes depending on the ratio of the high- to low-field mobility of the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FA">
            <summary>FA: An ion source immersed in a flow of helium or other inert buffer gas that carries the ions through a meter-long reactor at pressures around 100 Pa.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_flowing_afterglow">
            <summary>flowing afterglow: An ion source immersed in a flow of helium or other inert buffer gas that carries the ions through a meter-long reactor at pressures around 100 Pa.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ESA">
            <summary>ESA: A device consisting of conducting parallel plates, concentric cylinders or concentric spheres that separates charged particles according to their kinetic energy by means of an electric field that is constant in time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electrostatic_energy_analyzer">
            <summary>electrostatic energy analyzer: A device consisting of conducting parallel plates, concentric cylinders or concentric spheres that separates charged particles according to their kinetic energy by means of an electric field that is constant in time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EM">
            <summary>EM: A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons. The secondary electrons are then accelerated to other electrodes or parts of a continuous electrode to produce further secondary electrons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_multiplier">
            <summary>electron multiplier: A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons. The secondary electrons are then accelerated to other electrodes or parts of a continuous electrode to produce further secondary electrons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EIEIO">
            <summary>EIEIO: The reaction of an ion with an electron in which the translational energy of the collision is converted into internal energy of the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_induced_excitation_in_organics">
            <summary>electron-induced excitation in organics: The reaction of an ion with an electron in which the translational energy of the collision is converted into internal energy of the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EE">
            <summary>EE: An ion containing no unpaired electrons in its ground electronic state, e.g. CH3+ in its ground state.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_even_electron_ion">
            <summary>even-electron ion: An ion containing no unpaired electrons in its ground electronic state, e.g. CH3+ in its ground state.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ECD">
            <summary>ECD: A process in which a multiply protonated molecules interacts with a low energy electrons. Capture of the electron leads the liberation of energy and a reduction in charge state of the ion with the production of the (M + nH) (n-1)+ odd electron ion, which readily fragments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_capture_dissociation">
            <summary>electron capture dissociation: A process in which a multiply protonated molecules interacts with a low energy electrons. Capture of the electron leads the liberation of energy and a reduction in charge state of the ion with the production of the (M + nH) (n-1)+ odd electron ion, which readily fragments.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DLI">
            <summary>DLI: The delivery of a liquid sample into a mass spectrometer for spray or desorption ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_direct_liquid_introduction">
            <summary>direct liquid introduction: The delivery of a liquid sample into a mass spectrometer for spray or desorption ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DIP">
            <summary>DIP: A device for introducing a solid or liquid sample into a mass spectrometer ion source for desorption ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_direct_insertion_probe">
            <summary>direct insertion probe: A device for introducing a solid or liquid sample into a mass spectrometer ion source for desorption ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DI">
            <summary>DI: The formation of ions from a solid or liquid material after the rapid vaporization of that sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_desorption_ionization">
            <summary>desorption ionization: The formation of ions from a solid or liquid material after the rapid vaporization of that sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DE">
            <summary>DE: The application of the accelerating voltage pulse after a time delay in desorption ionization from a surface. The extraction delay can produce energy focusing in a time-of-flight mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_delayed_extraction">
            <summary>delayed extraction: The application of the accelerating voltage pulse after a time delay in desorption ionization from a surface. The extraction delay can produce energy focusing in a time-of-flight mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CS">
            <summary>CS: The reaction of a positive ion with an atom or molecule that results in the removal of one or more electrons from the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_stripping">
            <summary>charge stripping: The reaction of a positive ion with an atom or molecule that results in the removal of one or more electrons from the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CRM">
            <summary>CRM: MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_consecutive_reaction_monitoring">
            <summary>consecutive reaction monitoring: MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CRF">
            <summary>CRF: A fragmentation of an even-electron ion in which the cleaved bond is not adjacent to the apparent charge site.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_remote_fragmentation">
            <summary>charge-remote fragmentation: A fragmentation of an even-electron ion in which the cleaved bond is not adjacent to the apparent charge site.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BIRD">
            <summary>BIRD: A special case of infrared multiphoton dissociation wherein excitation of the reactant ion is caused by absorption of infrared photons radiating from heated blackbody surroundings, which are usually the walls of a vacuum chamber. See also infrared multiphoton dissociation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_blackbody_infrared_radiative_dissociation">
            <summary>blackbody infrared radiative dissociation: A special case of infrared multiphoton dissociation wherein excitation of the reactant ion is caused by absorption of infrared photons radiating from heated blackbody surroundings, which are usually the walls of a vacuum chamber. See also infrared multiphoton dissociation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_APPI_OBSOLETE">
            <summary>APPI: Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Atmostpheric_Pressure_Photoionization_OBSOLETE">
            <summary>Atmostpheric Pressure Photoionization: Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API">
            <summary>API: Any ionization process in which ions are formed in the gas phase at atmospheric pressure.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_atmospheric_pressure_ionization">
            <summary>atmospheric pressure ionization: Any ionization process in which ions are formed in the gas phase at atmospheric pressure.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AP_MALDI">
            <summary>AP MALDI: Matrix-assisted laser desorption ionization in which the sample target is at atmospheric pressure and the ions formed by the pulsed laser are sampled through a small aperture into the mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_atmospheric_pressure_matrix_assisted_laser_desorption_ionization">
            <summary>atmospheric pressure matrix-assisted laser desorption ionization: Matrix-assisted laser desorption ionization in which the sample target is at atmospheric pressure and the ions formed by the pulsed laser are sampled through a small aperture into the mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AMS">
            <summary>AMS: A mass spectrometry technique in which atoms extracted from a sample are ionized, accelerated to MeV energies and separated according to their momentum, charge and energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_accelerator_mass_spectrometry">
            <summary>accelerator mass spectrometry: A mass spectrometry technique in which atoms extracted from a sample are ionized, accelerated to MeV energies and separated according to their momentum, charge and energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_u_OBSOLETE">
            <summary>u: A non-SI unit of mass (u) defined as one twelfth of ^12 C in its ground state and equal to 1.660 538 86(28) x 10^-27 kg.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_unified_atomic_mass_unit_OBSOLETE">
            <summary>unified atomic mass unit: A non-SI unit of mass (u) defined as one twelfth of ^12 C in its ground state and equal to 1.660 538 86(28) x 10^-27 kg.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transmission">
            <summary>transmission: The ratio of the number of ions leaving a region of a mass spectrometer to the number entering that region.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TIC_chromatogram">
            <summary>TIC chromatogram: Chromatogram obtained by plotting the total ion current detected in each of a series of mass spectra recorded as a function of retention time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_total_ion_current_chromatogram">
            <summary>total ion current chromatogram: Chromatogram obtained by plotting the total ion current detected in each of a series of mass spectra recorded as a function of retention time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_resolving_power_OBSOLETE">
            <summary>mass resolving power: In a mass spectrum, the observed mass divided by the difference between two masses that can be separated. The method by which delta m was obtained and the mass at which the measurement was made should be reported.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PA">
            <summary>PA: The proton affinity of a species M is defined as the negative of the enthalpy change for the reaction M + H+ -&gt;[M+H]+, where all species are in their ground rotational, vibrational and electronic states.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_proton_affinity">
            <summary>proton affinity: The proton affinity of a species M is defined as the negative of the enthalpy change for the reaction M + H+ -&gt;[M+H]+, where all species are in their ground rotational, vibrational and electronic states.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak_intensity_OBSOLETE">
            <summary>peak intensity: The height or area of a peak in a mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak">
            <summary>peak: A localized region of relatively large ion signal in a mass spectrum. Although peaks are often associated with particular ions, the terms peak and ion should not be used interchangeably.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_odd_electron_rule">
            <summary>odd-electron rule: Odd-electron ions may dissociate to form either odd or even-electron ions, whereas even-electron ions generally form even-electron fragment ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nominal_mass">
            <summary>nominal mass: The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element rounded to the nearest integer value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_nitrogen_rule">
            <summary>nitrogen rule: An organic molecule containing the elements C, H, O, S, P, or halogen has an odd nominal mass if it contains an odd number of nitrogen atoms.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MPI">
            <summary>MPI: Photoionization of an atom or molecule in which in two or more photons are absorbed.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiphoton_ionization">
            <summary>multiphoton ionization: Photoionization of an atom or molecule in which in two or more photons are absorbed.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MBMS">
            <summary>MBMS: A mass spectrometry technique in which the sample is introduced into the mass spectrometer as a molecular beam.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_molecular_beam_mass_spectrometry">
            <summary>molecular beam mass spectrometry: A mass spectrometry technique in which the sample is introduced into the mass spectrometer as a molecular beam.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_monoisotopic_mass">
            <summary>monoisotopic mass: The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_molecular_mass">
            <summary>molecular mass: The mass of one mole of a molecular substance (6.022 1415(10) x 10^23 molecules).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_number">
            <summary>mass number: The sum of the protons and neutrons in an atom, molecule or ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_defect">
            <summary>mass defect: The difference between the monoisotipic and nominal mass of a molecule or atom.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_magnetic_deflection">
            <summary>magnetic deflection: The deflection of charged particles in a magnetic field due to a force equal to qv B where q is the particle charge, v its velocity and B the magnetic field. Magnetic deflection of an ion beam is used for m/z separation in a magnetic sector mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IDMS">
            <summary>IDMS: A quantitative mass spectrometry technique in which an isotopically enriched compound is used as an internal standard.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isotope_dilution_mass_spectrometry">
            <summary>isotope dilution mass spectrometry: A quantitative mass spectrometry technique in which an isotopically enriched compound is used as an internal standard.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IE">
            <summary>IE: The minimum energy required to remove an electron from an atom or molecule to produce a positive ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ionization_energy">
            <summary>ionization energy: The minimum energy required to remove an electron from an atom or molecule to produce a positive ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ioniazation_efficiency_OBSOLETE">
            <summary>ioniazation efficiency: The ratio of the number of ions formed to the number of electrons, molecules or photons used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ionization_cross_section">
            <summary>ionization cross section: A measure of the probability that a given ionization process will occur when an atom or molecule interacts with a photon, electron, atom or molecule.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FFR">
            <summary>FFR: A section of a mass spectrometer in which there are no electric or magnetic fields.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_field_free_region">
            <summary>field-free region: A section of a mass spectrometer in which there are no electric or magnetic fields.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_exact_mass">
            <summary>exact mass: The calculated mass of an ion or molecule containing a single isotope of each atom.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_energy_obsolete">
            <summary>electron energy obsolete: The potential difference through which electrons are accelerated before they are used to bring about electron ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EA">
            <summary>EA: The electron affinity of M is the minimum energy required for the process M- ? M + e where M- and M are in their ground rotational, vibrational and electronic states and the electron has zero kinetic energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_affinity">
            <summary>electron affinity: The electron affinity of M is the minimum energy required for the process M- ? M + e where M- and M are in their ground rotational, vibrational and electronic states and the electron has zero kinetic energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Da_OBSOLETE">
            <summary>Da: A non-SI unit of mass (symbol Da) that is equal to the unified atomic mass unit: 1.660 538 86(28) x 10^-27 kg.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dalton_OBSOLETE">
            <summary>dalton: A non-SI unit of mass (symbol Da) that is equal to the unified atomic mass unit: 1.660 538 86(28) x 10^-27 kg.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_z_OBSOLETE">
            <summary>z: OBSOLETE. The total charge on an ion divided by the electron charge e. OBSOLETED 2009-10-27 since this was viewed as a duplication of 00041 charge state.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OBSOLETE_charge_number_OBSOLETE">
            <summary>OBSOLETE charge number: OBSOLETE. The total charge on an ion divided by the electron charge e. OBSOLETED 2009-10-27 since this was viewed as a duplication of 00041 charge state.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BP">
            <summary>BP: The peak in a mass spectrum that has the greatest intensity. This term may be applied to the spectra of pure substances or mixtures.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_base_peak">
            <summary>base peak: The peak in a mass spectrum that has the greatest intensity. This term may be applied to the spectra of pure substances or mixtures.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AE">
            <summary>AE: The minimum energy that must be imparted to an atom or molecule to produce a specified ion. The term appearance potential is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_appearance_energy">
            <summary>appearance energy: The minimum energy that must be imparted to an atom or molecule to produce a specified ion. The term appearance potential is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_average_mass">
            <summary>average mass: The mass of an ion or molecule calculated using the average mass of each element weighted for its natural isotopic abundance.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_accurate_mass">
            <summary>accurate mass: An experimentally determined mass that is can be to determine a unique elemental formula. For ions less than 200 u, a measurement with 5 ppm accuracy is sufficient to determine the elemental composition.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SRM">
            <summary>SRM: Data acquired from specific product ions corresponding to m/z selected precursor ions recorded via multiple stages of mass spectrometry. Selected reaction monitoring can be performed in time or in space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_reaction_monitoring">
            <summary>selected reaction monitoring: Data acquired from specific product ions corresponding to m/z selected precursor ions recorded via multiple stages of mass spectrometry. Selected reaction monitoring can be performed in time or in space.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SIM">
            <summary>SIM: The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Multiple_Ion_Monitoring">
            <summary>Multiple Ion Monitoring: The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_ion_monitoring">
            <summary>selected ion monitoring: The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Voyager_DE_STR">
            <summary>Voyager-DE STR: Applied Biosystems/MDS SCIEX Voyager-DE STR MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Voyager_DE_PRO">
            <summary>Voyager-DE PRO: Applied Biosystems/MDS SCIEX Voyager-DE PRO MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ultraflex_TOF_TOF">
            <summary>ultraflex TOF/TOF: Bruker Daltonics' ultraflex TOF/TOF: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ultraflex">
            <summary>ultraflex: Bruker Daltonics' ultraflex: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ultima">
            <summary>ultima: IonSpec Ultima MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TSQ_Quantum">
            <summary>TSQ Quantum: ThermoFinnigan TSQ Quantum MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TRITON">
            <summary>TRITON: ThermoFinnigan TRITON MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TRACE_DSQ">
            <summary>TRACE DSQ: ThermoFinnigan TRACE DSQ MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TEMPUS_TOF">
            <summary>TEMPUS TOF: ThermoFinnigan TEMPUS TOF MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SymBiot_XVI">
            <summary>SymBiot XVI: Applied Biosystems/MDS SCIEX SymBiot XVI MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SymBiot_I">
            <summary>SymBiot I: Applied Biosystems/MDS SCIEX SymBiot I MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Surveyor_MSQ">
            <summary>Surveyor MSQ: ThermoFinnigan Surveyor MSQ MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Quattro_UItima">
            <summary>Quattro UItima: Waters Quattro Uitima MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quattro_micro">
            <summary>quattro micro: Waters Quattro micro MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_QSTAR">
            <summary>QSTAR: Applied Biosystems/MDS SCIEX QSTAR MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Q_Tof_ultima">
            <summary>Q-Tof ultima: Waters Q-Tof Ultima MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Q_Tof_micro">
            <summary>Q-Tof micro: Waters Q-Tof micro MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Q_TRAP">
            <summary>Q TRAP: Applied Biosystems/MDS SCIEX Q TRAP MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_proteomics_solution_1">
            <summary>proteomics solution 1: Applied Biosystems/MDS SCIEX Proteomics Solution 1 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PolarisQ">
            <summary>PolarisQ: ThermoFinnigan PolarisQ MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Platform_ICP">
            <summary>Platform ICP: Waters Platform ICP MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OmniFlex">
            <summary>OmniFlex: Bruker Daltonics' OmniFlex: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMEGA_2001">
            <summary>OMEGA-2001: IonSpec OMEGA-2001 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_OMEGA">
            <summary>OMEGA: IonSpec OMEGA MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_NG_5400">
            <summary>NG-5400: Waters NG-5400 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_neptune">
            <summary>neptune: ThermoFinnigan NEPTUNE MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_microTOF_LC">
            <summary>microTOF LC: Bruker Daltonics' microTOF LC: ESI TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_microflex">
            <summary>microflex: Bruker Daltonics' microflex: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MAT95XP_Trap">
            <summary>MAT95XP Trap: ThermoFinnigan MAT95XP Trap MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MAT95XP">
            <summary>MAT95XP: ThermoFinnigan MAT95XP MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MAT900XP_Trap">
            <summary>MAT900XP Trap: ThermoFinnigan MAT900XP Trap MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MAT900XP">
            <summary>MAT900XP: ThermoFinnigan MAT900XP MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MAT253">
            <summary>MAT253: ThermoFinnigan MAT253 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_M_LDI_LR">
            <summary>M@LDI LR: Waters MALDI LR MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_M_LDI_L">
            <summary>M@LDI L: Waters MALDI L MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCQ_Deca_XP_Plus">
            <summary>LCQ Deca XP Plus: ThermoFinnigan LCQ Deca XP Plus MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCQ_Classic">
            <summary>LCQ Classic: ThermoFinnigan LCQ Classic MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_LCQ_Advantage">
            <summary>LCQ Advantage: ThermoFinnigan LCQ Advantage MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IsoProbe_T">
            <summary>IsoProbe T: Waters IsoProbe T MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IsoProbe">
            <summary>IsoProbe: Waters IsoProbe MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IsoPrime">
            <summary>IsoPrime: Waters IsoPrime MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HiRes_MALDI">
            <summary>HiRes MALDI: IonSpec HiResMALDI MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HiRes_ESI">
            <summary>HiRes ESI: IonSpec HiResESI MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HCTplus">
            <summary>HCTplus: Bruker Daltonics' HCTplus: ESI Q-TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_HCT">
            <summary>HCT: Bruker Daltonics' HCT: ESI Q-TOF, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_GCT">
            <summary>GCT: Waters GCT MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_explorer">
            <summary>explorer: IonSpec Explorer MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_esquire_6000">
            <summary>esquire 6000: Bruker Daltonics' esquire 6000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_esquire_4000">
            <summary>esquire 4000: Bruker Daltonics' esquire 4000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ELEMENT2">
            <summary>ELEMENT2: ThermoFinnigan ELEMENT2 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DELTAplusXP">
            <summary>DELTAplusXP: ThermoFinnigan DELTAplusXP MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_DELTA_plusAdvantage">
            <summary>DELTA plusAdvantage: ThermoFinnigan DELTA plusAdvantage MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BioTOF_Q">
            <summary>BioTOF-Q: Bruker Daltonics' BioTOF-Q: ESI Q-TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_BioTOF_II">
            <summary>BioTOF II: Bruker Daltonics' BioTOF II: ESI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Auto_Spec_Ultima_NT">
            <summary>Auto Spec Ultima NT: Waters AutoSpec Ultima NT MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autoflex_TOF_TOF">
            <summary>autoflex TOF/TOF: Bruker Daltonics' autoflex TOF/TOF MS: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_autoflex_II">
            <summary>autoflex II: Bruker Daltonics' autoflex II: MALDI TOF.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API_4000">
            <summary>API 4000: Applied Biosystems/MDS SCIEX API 4000 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API_3000">
            <summary>API 3000: Applied Biosystems/MDS SCIEX API 3000 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API_2000">
            <summary>API 2000: Applied Biosystems/MDS SCIEX API 2000 MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API_150EX_Prep">
            <summary>API 150EX Prep: Applied Biosystems/MDS SCIEX API 150EX Prep MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_API_150EX">
            <summary>API 150EX: Applied Biosystems/MDS SCIEX API 150EX MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_apex_Q">
            <summary>apex Q: Bruker Daltonics' apex Q: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_apex_IV">
            <summary>apex IV: Bruker Daltonics' apex IV: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_4700_Proteomics_Analyzer">
            <summary>4700 Proteomics Analyzer: Applied Biosystems/MDS SCIEX 4700 Proteomics Analyzer MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_4000_Q_TRAP">
            <summary>4000 Q TRAP: Applied Biosystems/MDS SCIEX Q 4000 TRAP MS.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_percent_collision_energy">
            <summary>percent collision energy: Collision energy required to fragment an ion represented as a percent value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_eV_OBSOLETE">
            <summary>eV: A non-SI unit of energy (eV) defined as the energy acquired by a particle containing one unit of charge through a potential difference of one volt. An electron-volt is equal to 1.602 176 53(14) x 10^-19 J.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_volt_OBSOLETE">
            <summary>electron volt: A non-SI unit of energy (eV) defined as the energy acquired by a particle containing one unit of charge through a potential difference of one volt. An electron-volt is equal to 1.602 176 53(14) x 10^-19 J.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_SID">
            <summary>SID: Fragmentation that results from the collision of an ion with a surface.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_surface_induced_dissociation">
            <summary>surface-induced dissociation: Fragmentation that results from the collision of an ion with a surface.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PSD">
            <summary>PSD: A technique specific to reflectron time-of-flight mass spectrometers where product ions of metastable transitions or collision-induced dissociations generated in the drift tube prior to entering the reflectron are m/z separated to yield product ion spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_post_source_decay">
            <summary>post-source decay: A technique specific to reflectron time-of-flight mass spectrometers where product ions of metastable transitions or collision-induced dissociations generated in the drift tube prior to entering the reflectron are m/z separated to yield product ion spectra.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PD">
            <summary>PD: The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_plasma_desorption">
            <summary>plasma desorption: The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CID">
            <summary>CID: The dissociation of an ion after collisional excitation. The term collisional-activated dissociation is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_collision_induced_dissociation">
            <summary>collision-induced dissociation: The dissociation of an ion after collisional excitation. The term collisional-activated dissociation is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_percent_of_base_peak">
            <summary>percent of base peak: The magnitude of a peak or measurement element expressed in terms of the percentage of the magnitude of the base peak intensity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_number_of_counts">
            <summary>number of counts: The number of counted events observed in one or a group of elements of a detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_positive_scan">
            <summary>positive scan: Polarity of the scan is positive.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_negative_scan">
            <summary>negative scan: Polarity of the scan is negative.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Continuum_Mass_Spectrum">
            <summary>Continuum Mass Spectrum: A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_continuous_mass_spectrum">
            <summary>continuous mass spectrum: A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_profile_spectrum">
            <summary>profile spectrum: A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Discrete_Mass_Spectrum">
            <summary>Discrete Mass Spectrum: Processing of profile data to produce spectra that contains discrete peaks of zero width. Often used to reduce the size of dataset.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_centroid_spectrum">
            <summary>centroid spectrum: Processing of profile data to produce spectra that contains discrete peaks of zero width. Often used to reduce the size of dataset.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Waters_instrument_model">
            <summary>Waters instrument model: Waters Corporation instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Thermo_Finnigan_instrument_model">
            <summary>Thermo Finnigan instrument model: ThermoFinnigan from Thermo Electron Corporation instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Shimadzu_instrument_model">
            <summary>Shimadzu instrument model: Shimadzu corporation instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_IonSpec_instrument_model">
            <summary>IonSpec instrument model: IonSpec corporation instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Bruker_Daltonics_instrument_model">
            <summary>Bruker Daltonics instrument model: Bruker Daltonics instrument model.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_AB_SCIEX_instrument_model">
            <summary>AB SCIEX instrument model: The brand of instruments from the joint venture between Applied Biosystems and MDS Analytical Technologies (formerly MDS SCIEX). Previously branded as \"Applied Biosystems|MDS SCIEX\".</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_transient_recorder">
            <summary>transient recorder: A detector acquisition mode used for detecting transient signals.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TDC">
            <summary>TDC: A device for converting a signal of sporadic pluses into a digital representation of their time indices.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_time_digital_converter">
            <summary>time-digital converter: A device for converting a signal of sporadic pluses into a digital representation of their time indices.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_pulse_counting">
            <summary>pulse counting: Definition to do.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ADC">
            <summary>ADC: Analog-to-digital converter (abbreviated ADC, A/D or A to D) is an electronic integrated circuit (i/c) that converts continuous signals to discrete digital numbers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_analog_digital_converter">
            <summary>analog-digital converter: Analog-to-digital converter (abbreviated ADC, A/D or A to D) is an electronic integrated circuit (i/c) that converts continuous signals to discrete digital numbers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_PMT">
            <summary>PMT: A detector for conversion of the ion/electron signal into photon(s) which are then amplified and detected.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_photomultiplier">
            <summary>photomultiplier: A detector for conversion of the ion/electron signal into photon(s) which are then amplified and detected.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multi_collector">
            <summary>multi-collector: A detector system commonly used in inductively coupled plasma mass spectrometers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multichannel_plate">
            <summary>multichannel plate: A thin plate that contains a closely spaced array of channels that each act as a continuous dynode particle multiplier. A charged particle, fast neutral particle, or photon striking the plate causes a cascade of secondary electrons that ultimately exits the opposite side of the plate.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_microchannel_plate_detector">
            <summary>microchannel plate detector: A thin plate that contains a closely spaced array of channels that each act as a continuous dynode particle multiplier. A charged particle, fast neutral particle, or photon striking the plate causes a cascade of secondary electrons that ultimately exits the opposite side of the plate.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_focal_plane_array">
            <summary>focal plane array: An array of detectors for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_faraday_cup">
            <summary>faraday cup: A conducting cup or chamber that intercepts a charged particle beam and is electrically connected to a current measuring device.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EMT">
            <summary>EMT: A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electron_multiplier_tube">
            <summary>electron multiplier tube: A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Daly">
            <summary>Daly: Detector consisting of a conversion dynode, scintillator and photomultiplier. The metal knob at high potential emits secondary electrons when ions impinge on the surface. The secondary electrons are accelerated onto the scintillator that produces light that is then detected by the photomultiplier detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_daly_detector">
            <summary>daly detector: Detector consisting of a conversion dynode, scintillator and photomultiplier. The metal knob at high potential emits secondary electrons when ions impinge on the surface. The secondary electrons are accelerated onto the scintillator that produces light that is then detected by the photomultiplier detector.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_conversion_dynode_photomultiplier">
            <summary>conversion dynode photomultiplier: A detector in which ions strike a conversion dynode to produce electrons that in turn generate photons through a phosphorescent screen that are detected by a photomultiplier.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_conversion_dynode_electron_multiplier">
            <summary>conversion dynode electron multiplier: A surface that is held at high potential so that ions striking the surface produce electrons that are subsequently detected.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Channeltron_Detector">
            <summary>Channeltron Detector: A horn-shaped (or cone-shaped) continuous dynode particle multiplier. The ion strikes the inner surface of the device and induces the production of secondary electrons that in turn impinge on the inner surfaces to produce more secondary electrons. This avalanche effect produces an increase in signal in the final measured current pulse.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_channeltron">
            <summary>channeltron: A horn-shaped (or cone-shaped) continuous dynode particle multiplier. The ion strikes the inner surface of the device and induces the production of secondary electrons that in turn impinge on the inner surfaces to produce more secondary electrons. This avalanche effect produces an increase in signal in the final measured current pulse.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_reflectron_on">
            <summary>reflectron on: Reflectron is on.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_reflectron_off">
            <summary>reflectron off: Reflectron is off.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_None_____OBSOLETE">
            <summary>None  ??: None.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_single_reaction_monitoring_OBSOLETE">
            <summary>single reaction monitoring: This term is not recommended. See Selected Reaction Monitoring.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_single_ion_monitoring_OBSOLETE">
            <summary>single ion monitoring: The operation of a mass spectrometer to monitor a single ion rather than scanning entire mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_product_ion_scan">
            <summary>product ion scan: The specific scan function or process that records product ion spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_precursor_ion_scan">
            <summary>precursor ion scan: The specific scan function or process that will record a precursor ion spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MRM_OBSOLETE">
            <summary>MRM: This term is not recommended. See Selected Reaction Monitoring.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_reaction_monitoring_OBSOLETE">
            <summary>multiple reaction monitoring: This term is not recommended. See Selected Reaction Monitoring.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_multiple_ion_monitoring">
            <summary>multiple ion monitoring: Data acquired when monitoring the ion current of a few specific m/z values. Remap to MS:1000205 -Selected Ion Monitoring.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant_neutral_mass_loss">
            <summary>constant neutral mass loss: A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quadratic">
            <summary>quadratic: The mass scan is done in quadratic mode.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_linear">
            <summary>linear: The mass scan is done in linear mode.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_exponential">
            <summary>exponential: The mass scan is done in exponential mode.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_increasing_m_z_scan">
            <summary>increasing m/z scan: Low to high direction in terms of m/z of the scan for scanning analyzers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_decreasing_m_z_scan">
            <summary>decreasing m/z scan: High to low direction in terms of m/z of the scan for scanning analyzers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_selected_ion_detection">
            <summary>selected ion detection: Please see Single Ion Monitoring.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_scan">
            <summary>mass scan: A variation of instrument where a selected mass is scanned.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_proportional">
            <summary>proportional: When resolution is proportional with respect to m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_constant">
            <summary>constant: When resolution is constant with respect to m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ten_percent_valley">
            <summary>ten percent valley: An attribute of resolution when the ratio between adjacent signals is 10% of the signal height.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FWHM">
            <summary>FWHM: A measure of resolution represented as width of the peak at half peak height.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_full_width_at_half_maximum">
            <summary>full width at half-maximum: A measure of resolution represented as width of the peak at half peak height.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_baseline">
            <summary>baseline: An attribute of resolution when recording the detector response in absence of the analyte.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TOF">
            <summary>TOF: Instrument that separates ions by m/z in a field-free region after acceleration to a fixed acceleration energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_time_of_flight">
            <summary>time-of-flight: Instrument that separates ions by m/z in a field-free region after acceleration to a fixed acceleration energy.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_radial_ejection_linear_ion_trap">
            <summary>radial ejection linear ion trap: A linear ion trap mass spectrometer where ions are ejected along the radius of the analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Quistor">
            <summary>Quistor: Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_QIT">
            <summary>QIT: Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Paul_Ion_trap">
            <summary>Paul Ion trap: Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quadrupole_ion_trap">
            <summary>quadrupole ion trap: Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_quadrupole">
            <summary>quadrupole: A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_magnetic_sector">
            <summary>magnetic sector: A device that produces a magnetic field perpendicular to a charged particle beam that deflects the beam to an extent that is proportional to the particle momentum per unit charge. For a monoenergetic beam, the deflection is proportional to m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FT_ICR">
            <summary>FT_ICR: A mass spectrometer based on the principle of ion cyclotron resonance in which an ion in a magnetic field moves in a circular orbit at a frequency characteristic of its m/z value. Ions are coherently excited to a larger radius orbit using a pulse of radio frequency energy and their image charge is detected on receiver plates as a time domain signal. Fourier transformation of the time domain signal results in a frequency domain signal which is converted to a mass spectrum based in the inverse relationship between frequency and m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fourier_transform_ion_cyclotron_resonance_mass_spectrometer">
            <summary>fourier transform ion cyclotron resonance mass spectrometer: A mass spectrometer based on the principle of ion cyclotron resonance in which an ion in a magnetic field moves in a circular orbit at a frequency characteristic of its m/z value. Ions are coherently excited to a larger radius orbit using a pulse of radio frequency energy and their image charge is detected on receiver plates as a time domain signal. Fourier transformation of the time domain signal results in a frequency domain signal which is converted to a mass spectrum based in the inverse relationship between frequency and m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_axial_ejection_linear_ion_trap">
            <summary>axial ejection linear ion trap: A linear ion trap mass spectrometer where ions are ejected along the axis of the analyzer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_positive_ion_mode_OBSOLETE">
            <summary>positive ion mode: OBSOLETE</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_negative_ion_mode_OBSOLETE">
            <summary>negative ion mode: OBSOLETE</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_MALDI">
            <summary>MALDI: The formation of gas-phase ions from molecules that are present in a solid or solvent matrix that is irradiated with a pulsed laser. See also laser desorption/ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_matrix_assisted_laser_desorption_ionization">
            <summary>matrix-assisted laser desorption ionization: The formation of gas-phase ions from molecules that are present in a solid or solvent matrix that is irradiated with a pulsed laser. See also laser desorption/ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_FAB">
            <summary>FAB: The ionization of any species by the interaction of a focused beam of neutral atoms having a translational energy of several thousand eV with a sample that is typically dissolved in a solvent matrix. See also secondary ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_fast_atom_bombardment_ionization">
            <summary>fast atom bombardment ionization: The ionization of any species by the interaction of a focused beam of neutral atoms having a translational energy of several thousand eV with a sample that is typically dissolved in a solvent matrix. See also secondary ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ESI">
            <summary>ESI: A process in which ionized species in the gas phase are produced from an analyte-containing solution via highly charged fine droplets, by means of spraying the solution from a narrow-bore needle tip at atmospheric pressure in the presence of a high electric field. When a pressurized gas is used to aid in the formation of a stable spray, the term pneumatically assisted electrospray ionization is used. The term ion spray is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electrospray_ionization">
            <summary>electrospray ionization: A process in which ionized species in the gas phase are produced from an analyte-containing solution via highly charged fine droplets, by means of spraying the solution from a narrow-bore needle tip at atmospheric pressure in the presence of a high electric field. When a pressurized gas is used to aid in the formation of a stable spray, the term pneumatically assisted electrospray ionization is used. The term ion spray is not recommended.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_EI_OBSOLETE">
            <summary>EI: The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended. </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Electronic_Ionization_OBSOLETE">
            <summary>Electronic Ionization: The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended. </summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CI">
            <summary>CI: The formation of a new ion by the reaction of a neutral species with an ion. The process may involve transfer of an electron, a proton or other charged species between the reactants. When a positive ion results from chemical ionization the term may be used without qualification. When a negative ion results the term negative ion chemical ionization should be used. Note that this term is not synonymous with chemi-ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chemical_ionization">
            <summary>chemical ionization: The formation of a new ion by the reaction of a neutral species with an ion. The process may involve transfer of an electron, a proton or other charged species between the reactants. When a positive ion results from chemical ionization the term may be used without qualification. When a negative ion results the term negative ion chemical ionization should be used. Note that this term is not synonymous with chemi-ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_APCI">
            <summary>APCI: Chemical ionization that takes place at atmospheric pressure as opposed to the reduced pressure is normally used for chemical ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_atmospheric_pressure_chemical_ionization">
            <summary>atmospheric pressure chemical ionization: Chemical ionization that takes place at atmospheric pressure as opposed to the reduced pressure is normally used for chemical ionization.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_thermospray_inlet">
            <summary>thermospray inlet: A method for generating gas phase ions from a solution of an analyte by rapid heating of the sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_septum">
            <summary>septum: A disc composed of a flexible material that seals the entrance to the reservoir. Can also be enterance to the vaccum chamber.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_reservoir">
            <summary>reservoir: A sample inlet method involving a reservoir.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_particle_beam">
            <summary>particle beam: Method for generating ions from a solution of an analyte.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_open_split">
            <summary>open split: A division of flowing stream of liquid into two streams.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_moving_wire">
            <summary>moving wire: Continuous moving surface in the form of a wire which passes through an ionsource carrying analyte molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_moving_belt">
            <summary>moving belt: Continuous moving surface in the form of a belt which passes through an ionsource carrying analyte molecules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_membrane_separator">
            <summary>membrane separator: A device to separate carrier molecules from analyte molecules on the basis of ease of diffusion across a semipermeable membrane.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_jet_separator">
            <summary>jet separator: A device that separates carrier gas from gaseous analyte molecules on the basis of diffusivity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_infusion">
            <summary>infusion: The continuous flow of solution of a sample into the ionization source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_inductively_coupled_plasma">
            <summary>inductively coupled plasma: A gas discharge ion source in which the energy to the plasma is supplied by electromagnetic induction.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_flow_injection_analysis">
            <summary>flow injection analysis: Sample is directly injected or infused into the ionization source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_electrospray_inlet">
            <summary>electrospray inlet: Inlet used for introducing the liquid sample into an electrospray ionization source.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_direct_inlet">
            <summary>direct inlet: The sample is directly inserted into the ion source, usually on the end of a heatable probe.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_CF_FAB">
            <summary>CF-FAB: Fast atom bombardment ionization in which the analyte in solution is entrained in a flowing liquid matrix.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_continuous_flow_fast_atom_bombardment">
            <summary>continuous flow fast atom bombardment: Fast atom bombardment ionization in which the analyte in solution is entrained in a flowing liquid matrix.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_chromatography">
            <summary>chromatography: Chromatographic conditions used to obtain the sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_batch">
            <summary>sample batch: Sample batch lot identifier.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_suspension">
            <summary>suspension: State if the sample is in suspension form.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_solution">
            <summary>solution: State if the sample is in solution form.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_solid">
            <summary>solid: State if the sample is in solid form.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_liquid">
            <summary>liquid: State if the sample is in liquid form.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_gas">
            <summary>gas: State if the sample is in gaseous form.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_emulsion">
            <summary>emulsion: State if the sample is in emulsion form.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_energy_unit_OBSOLETE">
            <summary>energy unit: Energy units are represented in either eV or Joules.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_collision_energy">
            <summary>collision energy: Energy for an ion experiencing collision with a stationary gas particle resulting in dissociation of the ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_dissociation_method">
            <summary>dissociation method: Fragmentation method used for dissociation or fragmentation.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_intensity_unit">
            <summary>intensity unit: Intensity units are commonly arbitrary. Detected in counts per second (cps) when using counting detectors, but measured in volts when using analog detectors.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak_intensity">
            <summary>peak intensity: Intensity of ions as measured by the height or area of a peak in a mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_z">
            <summary>z: The charge state of the ion, single or multiple and positive or negatively charged.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_state">
            <summary>charge state: The charge state of the ion, single or multiple and positive or negatively charged.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_thomson">
            <summary>thomson: Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Th">
            <summary>Th: Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_to_charge_ratio">
            <summary>mass-to-charge ratio: Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_m_z">
            <summary>m/z: Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_second_OBSOLETE">
            <summary>second: Acquisition time in seconds.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_minute_OBSOLETE">
            <summary>minute: Acquisition time in minutes.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_polarity">
            <summary>polarity: Terms to describe the polarity setting of the instrument.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_mode_OBSOLETE">
            <summary>scan mode: OBSOLETE</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_peak_picking">
            <summary>peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_charge_deconvolution">
            <summary>charge deconvolution: The determination of the mass of an ion based on the mass spectral peaks that represent multiple-charge ions.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_deisotoping">
            <summary>deisotoping: The removal of isotope peaks to represent the fragment ion as one data point and is commonly done to reduce complexity. It is done in conjunction with the charge state deconvolution.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_customization">
            <summary>customization: Free text description of a single customization made to the instrument; for several modifications, use several entries.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_instrument_model">
            <summary>instrument model: Instrument model name not including the vendor's name.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_vendor_OBSOLETE">
            <summary>vendor: Name of instrument vendor</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sampling_frequency">
            <summary>sampling frequency: The rate of signal sampling (measurement) with respect to time.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_detector_resolution">
            <summary>detector resolution: The resolving power of the detector to detect the smallest difference between two ions so that the valley between them is a specified fraction of the peak height.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_detector_acquisition_mode">
            <summary>detector acquisition mode: Method by which detector signal is acquired by the data system.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_detector_type">
            <summary>detector type: Type of detector used in the mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_B">
            <summary>B: A property of space that produces a force on a charged particle equal to qv x B where q is the particle charge and v its velocity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_magnetic_field_strength">
            <summary>magnetic field strength: A property of space that produces a force on a charged particle equal to qv x B where q is the particle charge and v its velocity.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_final_MS_exponent">
            <summary>final MS exponent: Final MS level achieved when performing PFF with the ion trap (e.g. MS E10).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_isolation_width">
            <summary>isolation width: The total width (i.e. not half for plus-or-minus) of the gate applied around a selected precursor ion.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_TOF_Total_Path_Length">
            <summary>TOF Total Path Length: The length of the field free drift space in a time of flight mass spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_reflectron_state">
            <summary>reflectron state: Status of the reflectron, turned on or off.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scanning_method">
            <summary>scanning method: Describes the acquisition data type produced by a tandem mass spectrometry experiment.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_law">
            <summary>scan law: Describes the function in control of the m/z scan (for scanning instruments). Commonly the scan function is linear, but in principle any function can be used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_direction">
            <summary>scan direction: Direction in terms of m/z of the scan for scanning analyzers (low to high, or high to low).</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Scan_Function">
            <summary>Scan Function: Describes the type of mass analysis being performed. Two primary modes are: typical acquisition over a range of masses (Mass Scan), and Selected Ion Detection. The primary difference is that Selected Ion Detection produces a single value for the signal at the selected mass rather than producing a mass spectrum.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_start_time">
            <summary>scan start time: The time that an analyzer started a scan, relative to the start of the MS run.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_scan_rate">
            <summary>scan rate: Rate in Th/sec for scanning analyzers.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_accuracy">
            <summary>accuracy: Accuracy is the degree of conformity of a measured mass to its actual value.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_resolution_type">
            <summary>resolution type: Specify the nature of resolution for the mass analyzer. Resolution is usually either constant with respect to m/z or proportional to m/z.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_resolution_measurement_method">
            <summary>resolution measurement method: Which of the available standard measures is used to define whether two peaks are separate.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_mass_resolution">
            <summary>mass resolution: Smallest mass difference between two equal magnitude peaks so that the valley between them is a specified fraction of the peak height.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_analyzer_type">
            <summary>analyzer type: The common name of the particular analyzer stage being described. Synonym of mass analyzer, should be obsoleted.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ionization_mode_OBSOLETE">
            <summary>ionization mode: Whether positive or negative ions are selected for analysis by the spectrometer.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_ionization_type">
            <summary>ionization type: The method by which gas phase ions are generated from the sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_inlet_type">
            <summary>inlet type: The nature of the sample inlet.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_concentration">
            <summary>sample concentration: Concentration of sample in picomol/ul, femtomol/ul or attomol/ul solution used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_volume">
            <summary>sample volume: Total volume of solution used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_mass">
            <summary>sample mass: Total mass of sample used.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_state">
            <summary>sample state: The chemical phase of a pure sample, or the state of a mixed sample.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_name">
            <summary>sample name: A reference string relevant to the sample under study.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_sample_number">
            <summary>sample number: A reference number relevant to the sample under study.</summary>
        </member>
        <member name="F:pwiz.CLI.cv.CVID.MS_Proteomics_Standards_Initiative_Mass_Spectrometry_Vocabularies">
            <summary>Proteomics Standards Initiative Mass Spectrometry Vocabularies: Proteomics Standards Initiative Mass Spectrometry Vocabularies.</summary>
        </member>
        <member name="M:pwiz.cv.cvids">
returns vector of all valid CVIDs
</member>
        <member name="M:pwiz.cv.cvIsA(pwiz.cv.CVID,pwiz.cv.CVID)">
returns true iff child IsA parent in the CV
</member>
        <member name="M:pwiz.cv.cvTermInfo(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns CV term info for the specified id (accession number)
</member>
        <member name="M:pwiz.cv.cvTermInfo(pwiz.cv.CVID)">
returns CV term info for the specified CVID
</member>
        <member name="T:pwiz.cv.CVTermInfo">
structure for holding CV term info
</member>
        <member name="M:pwiz.cv.cv(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns a CV object for the specified namespace (prefix);
currently supported namespaces are: MS UO
</member>
        <member name="M:pwiz.cv.CV.empty">
returns ture iff id, URI, fullName, and version are all empty
</member>
        <member name="M:pwiz.cv.CV.op_Equality(pwiz.cv.CV!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
returns true iff id, URI, fullName, and version are all pairwise equal
</member>
        <member name="F:pwiz.cv.CV.version">
the version of the CV from which the referred-to terms are drawn.
</member>
        <member name="F:pwiz.cv.CV.fullName">
the usual name for the resource (e.g. The PSI-MS Controlled Vocabulary).
</member>
        <member name="F:pwiz.cv.CV.URI">
the URI for the resource.
</member>
        <member name="F:pwiz.cv.CV.id">
the short label to be used as a reference tag with which to refer to this particular Controlled Vocabulary source description (e.g., from the cvLabel attribute, in CVParamType elements).
</member>
        <member name="T:pwiz.cv.CV">
Information about an ontology or CV source and a short 'lookup' tag to refer to.
</member>
        <member name="T:pwiz.cv.CVID">
enumeration of controlled vocabulary (CV) terms, generated from OBO file(s)
</member>
        <member name="F:UNIMOD_Methylmalonylation">
Methylmalonylation: Methylmalonylation on Serine
</member>
        <member name="F:UNIMOD_HNE_BAHAH">
HNE-BAHAH: 4-hydroxy-2-nonenal and biotinamidohexanoic acid hydrazide, reduced
</member>
        <member name="F:UNIMOD_MTSL">
MTSL: Cys modification by (1-oxyl-2,2,5,5-tetramethyl-3-pyrroline-3-methyl)methanesulfonate (MTSL)
</member>
        <member name="F:UNIMOD_Bacillosamine">
Bacillosamine: 2,4-diacetamido-2,4,6-trideoxyglucopyranose
</member>
        <member name="F:UNIMOD_SMCC_maleimide">
SMCC-maleimide: Modified SMCC maleimide with 3-(dimethylamino)-1-propylamine
</member>
        <member name="F:UNIMOD_Galactosyl">
Galactosyl: Galactosyl hydroxylysine
</member>
        <member name="F:UNIMOD_Lys__MetOx">
Lys-&gt;MetOx: Lys-&gt;Met substitution and sulfoxidation
</member>
        <member name="F:UNIMOD_Leu__MetOx">
Leu-&gt;MetOx: Leu-&gt;Met substitution and sulfoxidation
</member>
        <member name="F:UNIMOD_Phe__CamCys">
Phe-&gt;CamCys: Phe-&gt;Cys substitution and carbamidomethylation
</member>
        <member name="F:UNIMOD_Lys__CamCys">
Lys-&gt;CamCys: Lys-&gt;Cys substitution and carbamidomethylation
</member>
        <member name="F:UNIMOD_DimethylArsino">
DimethylArsino: Reaction with dimethylarsinous (AsIII) acid
</member>
        <member name="F:UNIMOD_4AcAllylGal">
4AcAllylGal: 2,3,4,6-tetra-O-Acetyl-1-allyl-伪-D-galactopyranoside modification of cysteine
</member>
        <member name="F:UNIMOD_Met__Hpg">
Met-&gt;Hpg: methionine replacement by homopropargylglycine
</member>
        <member name="F:UNIMOD_pyrophospho">
pyrophospho: pyrophosphorylation of Ser/Thr
</member>
        <member name="F:UNIMOD_Label_15N_4_">
Label:15N(4): SILAC 15N(4)
</member>
        <member name="F:UNIMOD_Met__Aha">
Met-&gt;Aha: Methionine replacement by azido homoalanine
</member>
        <member name="F:UNIMOD_Biotin_PEG_PRA">
Biotin-PEG-PRA: Biotin polyethyleneoxide (n=3) alkyne
</member>
        <member name="F:UNIMOD_CarboxymethylDTT">
CarboxymethylDTT: Carboxymethylated DTT modification of cysteine
</member>
        <member name="F:UNIMOD_CarbamidomethylDTT">
CarbamidomethylDTT: Carbamidomethylated DTT modification of cysteine
</member>
        <member name="F:UNIMOD_Methyl_PEO12_Maleimide">
Methyl-PEO12-Maleimide: Methyl-PEO12-Maleimide
</member>
        <member name="F:UNIMOD_DyLight_maleimide">
DyLight-maleimide: Thiol-reactive dye for fluorescence labelling of proteins
</member>
        <member name="F:UNIMOD_mTRAQ_13C_3_15N_1_">
mTRAQ:13C(3)15N(1): mTRAQ heavy
</member>
        <member name="F:UNIMOD_mTRAQ">
mTRAQ: mTRAQ light
</member>
        <member name="F:UNIMOD_MDCC">
MDCC: covalent linkage of maleimidyl coumarin probe (Molecular Probes D-10253)
</member>
        <member name="F:UNIMOD_HydroxymethylOP">
HydroxymethylOP: 2-ammonio-6-[4-(hydroxymethyl)-3-oxidopyridinium-1-yl]- hexanoate
</member>
        <member name="F:UNIMOD_Label_13C_1_2H_3__Oxidation">
Label:13C(1)2H(3)+Oxidation: Oxidised methionine 13C(1)2H(3) SILAC label
</member>
        <member name="F:UNIMOD_ChromoBiotin">
ChromoBiotin: EZ-Link NHS-Chromogenic Biotin
</member>
        <member name="F:UNIMOD_Bodipy">
Bodipy: Bodipy modifications onto cysteine
</member>
        <member name="F:UNIMOD_QQQTGG">
QQQTGG: SUMOylation by SUMO-2/3
</member>
        <member name="F:UNIMOD_QEQTGG">
QEQTGG: SUMOylation by SUMO-1
</member>
        <member name="F:UNIMOD_ICPL_13C_6_2H_4_">
ICPL:13C(6)2H(4): Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, +10 Da form
</member>
        <member name="F:UNIMOD_Label_13C_6_15N_2__GlyGly">
Label:13C(6)15N(2)+GlyGly: 13C(6) 15N(2) Lysine glygly
</member>
        <member name="F:UNIMOD_Label_13C_1_2H_3_">
Label:13C(1)2H(3): SILAC
</member>
        <member name="F:UNIMOD_ZGB">
ZGB: NHS ester linked Green Fluorescent Bodipy Dye
</member>
        <member name="F:UNIMOD_G_H1">
G-H1: Glyoxal-derived hydroimiadazolone
</member>
        <member name="F:UNIMOD_MG_H1">
MG-H1: Methylglyoxal-derived hydroimidazolone
</member>
        <member name="F:UNIMOD_Label_13C_8_15N_2_">
Label:13C(8)15N(2): 13C(8) 15N(2) Silac label
</member>
        <member name="F:UNIMOD_Label_2H_4__GlyGly">
Label:2H(4)+GlyGly: Ubiquitination 2H4 lysine
</member>
        <member name="F:UNIMOD_cGMP_RMP_loss">
cGMP+RMP-loss: S-guanylation-2
</member>
        <member name="F:UNIMOD_cGMP">
cGMP: S-guanylation
</member>
        <member name="F:UNIMOD_Arg2PG">
Arg2PG: Adduct of phenylglyoxal with Arg
</member>
        <member name="F:UNIMOD_EQIGG">
EQIGG: Sumo mutant Smt3-WT tail following trypsin digestion
</member>
        <member name="F:UNIMOD_Arg__Npo">
Arg-&gt;Npo: Arginine replacement by Nitropyrimidyl ornithine
</member>
        <member name="F:UNIMOD_Label_13C_6_15N_2__Acetyl">
Label:13C(6)15N(2)+Acetyl: Acetyl_13C(6) 15N(2) Silac label
</member>
        <member name="F:UNIMOD_Label_13C_6__Acetyl">
Label:13C(6)+Acetyl: Acetyl 13C(6) Silac label
</member>
        <member name="F:UNIMOD_Label_2H_4__Acetyl">
Label:2H(4)+Acetyl: Acetyl 4,4,5,5-D4 Lysine
</member>
        <member name="F:UNIMOD_Dihydroxyimidazolidine">
Dihydroxyimidazolidine: Dihydroxy methylglyoxal adduct
</member>
        <member name="F:UNIMOD_TMPP_Ac">
TMPP-Ac: tris(2,4,6-trimethoxyphenyl)phosphonium acetic acid N-hydroxysuccinimide ester derivative
</member>
        <member name="F:UNIMOD_DFDNB">
DFDNB: Addition of DFDNB crosslinker
</member>
        <member name="F:UNIMOD_BMOE">
BMOE: Addition of BMOE crosslinker
</member>
        <member name="F:UNIMOD_Gly_loss_Amide">
Gly-loss+Amide: Enzymatic glycine removal leaving an amidated C-terminus
</member>
        <member name="F:UNIMOD_Cy3b_maleimide">
Cy3b-maleimide: fluorescent dye that labels cysteines
</member>
        <member name="F:UNIMOD_Biotin_PEO4_hydrazide">
Biotin-PEO4-hydrazide: Pierce EZ link biotin hydrazide prod no. 21360
</member>
        <member name="F:UNIMOD_Pentylamine">
Pentylamine: Labeling transglutaminase substrate on glutamine side chain
</member>
        <member name="F:UNIMOD_PentylamineBiotin">
PentylamineBiotin: Used for labeling glutamine-donor substrate of transglutaminase
</member>
        <member name="F:UNIMOD_Label_13C_6__GlyGly">
Label:13C(6)+GlyGly: 13C6 labeled ubiquitinylation residue
</member>
        <member name="F:UNIMOD_Hex1HexNAc1">
Hex1HexNAc1: Hex1HexNAc1
</member>
        <member name="F:UNIMOD_AEC_MAEC_2H_4_">
AEC-MAEC:2H(4): deuterium cysteamine modification to S or T
</member>
        <member name="F:UNIMOD_NEM_2H_5_">
NEM:2H(5): D5 N-ethylmaleimide on cysteines
</member>
        <member name="F:UNIMOD_Carboxymethyl_13C_2_">
Carboxymethyl:13C(2): Iodoacetic acid derivative w/ 13C label
</member>
        <member name="F:UNIMOD_Biotin_phenacyl">
Biotin-phenacyl: Alkylation by biotinylated form of phenacyl bromide
</member>
        <member name="F:UNIMOD_maleimide">
maleimide: maleimide
</member>
        <member name="F:UNIMOD_Label_13C_5_">
Label:13C(5): 13C(5) Silac label
</member>
        <member name="F:UNIMOD_lapachenole">
lapachenole: lapachenole photochemically added to cysteine
</member>
        <member name="F:UNIMOD_Methyl_Acetyl_2H_3_">
Methyl+Acetyl:2H(3): Mono-methylated lysine labelled with Acetyl_heavy
</member>
        <member name="F:UNIMOD_Menadione_HQ">
Menadione-HQ: Menadione hydroquinone derivative
</member>
        <member name="F:UNIMOD_Met_loss_Acetyl">
Met-loss+Acetyl: Removal of initiator methionine from protein N-terminus, then acetylation of the new N-terminus
</member>
        <member name="F:UNIMOD_Met_loss">
Met-loss: Removal of initiator methionine from protein N-terminus
</member>
        <member name="F:UNIMOD_DTT_C_2H_6_">
DTT_C:2H(6): Isotopically labeled Dithiothreitol (DTT) modification of cysteines
</member>
        <member name="F:UNIMOD_DTT_ST_2H_6_">
DTT_ST:2H(6): Isotopically labeled Dithiothreitol (DTT) modification of serines or threonines
</member>
        <member name="F:UNIMOD_IDEnT">
IDEnT: Isotope Distribution Encoded Tag
</member>
        <member name="F:UNIMOD_TNBS">
TNBS: tri nitro benzene
</member>
        <member name="F:UNIMOD_trifluoro">
trifluoro: trifluoroleucine replacement of leucine
</member>
        <member name="F:UNIMOD_3sulfo">
3sulfo: derivatization by N-term modification using 3-Sulfobenzoic succinimidyl ester
</member>
        <member name="F:UNIMOD_Malonyl">
Malonyl: Malonylation of C and S residues
</member>
        <member name="F:UNIMOD_NO_SMX_SIMD">
NO_SMX_SIMD: Nitroso Sulfamethoxazole Sulfinamide thiol adduct
</member>
        <member name="F:UNIMOD_NO_SMX_SMCT">
NO_SMX_SMCT: Nitroso Sulfamethoxazole semimercaptal thiol adduct
</member>
        <member name="F:UNIMOD_NO_SMX_SEMD">
NO_SMX_SEMD: Nitroso Sulfamethoxazole Sulphenamide thiol adduct
</member>
        <member name="F:UNIMOD_4_ONE_Delta_H__2_O__1_">
4-ONE+Delta:H(-2)O(-1): Dehydrated 4-Oxononenal Michael adduct
</member>
        <member name="F:UNIMOD_ExacTagAmine">
ExacTagAmine: ExacTag Amine label mass for 2-4-7-10 plex
</member>
        <member name="F:UNIMOD_ExacTagThiol">
ExacTagThiol: ExacTag Thiol label mass for 2-4-7-10 plex
</member>
        <member name="F:UNIMOD_TMT">
TMT: Native Tandem Mass Tag庐
</member>
        <member name="F:UNIMOD_TMT2plex">
TMT2plex: Duplex Tandem Mass Tag庐
</member>
        <member name="F:UNIMOD_TMT6plex">
TMT6plex: Sixplex Tandem Mass Tag庐
</member>
        <member name="F:UNIMOD_DTT_C">
DTT_C: Dithiothreitol (DTT) on Cys
</member>
        <member name="F:UNIMOD_DTT_ST">
DTT_ST: Dithiothreitol (DTT)
</member>
        <member name="F:UNIMOD_Ethanolamine">
Ethanolamine: Carboxyl modification with ethanolamine
</member>
        <member name="F:UNIMOD_O_Isopropylmethylphosphonate">
O-Isopropylmethylphosphonate: O-Isopropylmethylphosphonylation
</member>
        <member name="F:UNIMOD_Methylphosphonate">
Methylphosphonate: Methylphosphonylation
</member>
        <member name="F:UNIMOD_O_pinacolylmethylphosphonate">
O-pinacolylmethylphosphonate: O-pinacolylmethylphosphonylation
</member>
        <member name="F:UNIMOD_O_Ethylphosphate">
O-Ethylphosphate: O-Ethylphosphorylation
</member>
        <member name="F:UNIMOD_O_Diethylphosphate">
O-Diethylphosphate: O-Diethylphosphorylation
</member>
        <member name="F:UNIMOD_O_Methylphosphate">
O-Methylphosphate: O-Methylphosphorylation
</member>
        <member name="F:UNIMOD_O_Dimethylphosphate">
O-Dimethylphosphate: O-Dimethylphosphorylation
</member>
        <member name="F:UNIMOD_4_ONE">
4-ONE: 4-Oxononenal (ONE)
</member>
        <member name="F:UNIMOD_HNE_Delta_H_2_O">
HNE-Delta:H(2)O: Dehydrated 4-hydroxynonenal
</member>
        <member name="F:UNIMOD_dNIC">
dNIC: deuterated Nicotinic Acid
</member>
        <member name="F:UNIMOD_NIC">
NIC: Nicotinic Acid
</member>
        <member name="F:UNIMOD_Label_2H_9_13C_6_15N_2_">
Label:2H(9)13C(6)15N(2): 13C(6) 15N(2) (D)9 SILAC label
</member>
        <member name="F:UNIMOD_Label_13C_6_15N_1_">
Label:13C(6)15N(1): 13C(6) 15N(1) Silac label
</member>
        <member name="F:UNIMOD_ICPL_2H_4_">
ICPL:2H(4): Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, medium form
</member>
        <member name="F:UNIMOD_NA_OA_NO2">
NA-OA-NO2: Nitroalkylation by Nitro Oleic Acid
</member>
        <member name="F:UNIMOD_NA_LNO2">
NA-LNO2: Nitroalkylation by Nitro Linoleic Acid
</member>
        <member name="F:UNIMOD_BDMAPP">
BDMAPP: Mass Defect Tag on lysine e-amino
</member>
        <member name="F:UNIMOD_Tyr__Cys">
Tyr-&gt;Cys: Tyr-&gt;Cys substitution
</member>
        <member name="F:UNIMOD_Tyr__Asp">
Tyr-&gt;Asp: Tyr-&gt;Asp substitution
</member>
        <member name="F:UNIMOD_Tyr__His">
Tyr-&gt;His: Tyr-&gt;His substitution
</member>
        <member name="F:UNIMOD_Tyr__Asn">
Tyr-&gt;Asn: Tyr-&gt;Asn substitution
</member>
        <member name="F:UNIMOD_Tyr__Ser">
Tyr-&gt;Ser: Tyr-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Tyr__Phe">
Tyr-&gt;Phe: Tyr-&gt;Phe substitution
</member>
        <member name="F:UNIMOD_Trp__Leu">
Trp-&gt;Leu: Trp-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Trp__Gly">
Trp-&gt;Gly: Trp-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Trp__Arg">
Trp-&gt;Arg: Trp-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Trp__Cys">
Trp-&gt;Cys: Trp-&gt;Cys substitution
</member>
        <member name="F:UNIMOD_Trp__Ser">
Trp-&gt;Ser: Trp-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Val__Gly">
Val-&gt;Gly: Val-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Val__Ile">
Val-&gt;Ile: Val-&gt;Ile or Val-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Val__Asp">
Val-&gt;Asp: Val-&gt;Asp substitution
</member>
        <member name="F:UNIMOD_Val__Met">
Val-&gt;Met: Val-&gt;Met substitution
</member>
        <member name="F:UNIMOD_Val__Glu">
Val-&gt;Glu: Val-&gt;Glu substitution
</member>
        <member name="F:UNIMOD_Val__Ala">
Val-&gt;Ala: Val-&gt;Ala substitution
</member>
        <member name="F:UNIMOD_Val__Phe">
Val-&gt;Phe: Val-&gt;Phe substitution
</member>
        <member name="F:UNIMOD_Thr__Arg">
Thr-&gt;Arg: Thr-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Thr__Ile">
Thr-&gt;Ile: Thr-&gt;Ile substitution
</member>
        <member name="F:UNIMOD_Thr__Met">
Thr-&gt;Met: Thr-&gt;Met substitution
</member>
        <member name="F:UNIMOD_Thr__Pro">
Thr-&gt;Pro: Thr-&gt;Pro substitution
</member>
        <member name="F:UNIMOD_Thr__Lys">
Thr-&gt;Lys: Thr-&gt;Lys substitution
</member>
        <member name="F:UNIMOD_Thr__Asn">
Thr-&gt;Asn: Thr-&gt;Asn substitution
</member>
        <member name="F:UNIMOD_Thr__Ala">
Thr-&gt;Ala: Thr-&gt;Ala substitution
</member>
        <member name="F:UNIMOD_Thr__Ser">
Thr-&gt;Ser: Thr-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Ser__Gly">
Ser-&gt;Gly: Ser-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Ser__Ile">
Ser-&gt;Ile: Ser-&gt;Ile or Ser-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Ser__Arg">
Ser-&gt;Arg: Ser-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Ser__Cys">
Ser-&gt;Cys: Ser-&gt;Cys substitution
</member>
        <member name="F:UNIMOD_Ser__Tyr">
Ser-&gt;Tyr: Ser-&gt;Tyr substitution
</member>
        <member name="F:UNIMOD_Ser__Pro">
Ser-&gt;Pro: Ser-&gt;Pro substitution
</member>
        <member name="F:UNIMOD_Ser__Asn">
Ser-&gt;Asn: Ser-&gt;Asn substitution
</member>
        <member name="F:UNIMOD_Ser__Thr">
Ser-&gt;Thr: Ser-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Ser__Trp">
Ser-&gt;Trp: Ser-&gt;Trp substitution
</member>
        <member name="F:UNIMOD_Ser__Ala">
Ser-&gt;Ala: Ser-&gt;Ala substitution
</member>
        <member name="F:UNIMOD_Ser__Phe">
Ser-&gt;Phe: Ser-&gt;Phe substitution
</member>
        <member name="F:UNIMOD_Arg__Gly">
Arg-&gt;Gly: Arg-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Arg__Ile">
Arg-&gt;Ile: Arg-&gt;Ile or Arg-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Arg__Cys">
Arg-&gt;Cys: Arg-&gt;Cys substitution
</member>
        <member name="F:UNIMOD_Arg__Met">
Arg-&gt;Met: Arg-&gt;Met substitution
</member>
        <member name="F:UNIMOD_Arg__Gln">
Arg-&gt;Gln: Arg-&gt;Gln substitution
</member>
        <member name="F:UNIMOD_Arg__His">
Arg-&gt;His: Arg-&gt;His substitution
</member>
        <member name="F:UNIMOD_Arg__Lys">
Arg-&gt;Lys: Arg-&gt;Lys substitution
</member>
        <member name="F:UNIMOD_Arg__Pro">
Arg-&gt;Pro: Arg-&gt;Pro substitution
</member>
        <member name="F:UNIMOD_Arg__Thr">
Arg-&gt;Thr: Arg-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Arg__Trp">
Arg-&gt;Trp: Arg-&gt;Trp substitution
</member>
        <member name="F:UNIMOD_Arg__Ser">
Arg-&gt;Ser: Arg-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Gln__Leu">
Gln-&gt;Leu: Gln-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Gln__Arg">
Gln-&gt;Arg: Gln-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Gln__His">
Gln-&gt;His: Gln-&gt;His substitution
</member>
        <member name="F:UNIMOD_Gln__Glu">
Gln-&gt;Glu: Gln-&gt;Glu substitution
</member>
        <member name="F:UNIMOD_Gln__Lys">
Gln-&gt;Lys: Gln-&gt;Lys substitution
</member>
        <member name="F:UNIMOD_Gln__Pro">
Gln-&gt;Pro: Gln-&gt;Pro substitution
</member>
        <member name="F:UNIMOD_Pro__Leu">
Pro-&gt;Leu: Pro-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Pro__Arg">
Pro-&gt;Arg: Pro-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Pro__Thr">
Pro-&gt;Thr: Pro-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Pro__Gln">
Pro-&gt;Gln: Pro-&gt;Gln substitution
</member>
        <member name="F:UNIMOD_Pro__His">
Pro-&gt;His: Pro-&gt;His substitution
</member>
        <member name="F:UNIMOD_Pro__Ala">
Pro-&gt;Ala: Pro-&gt;Ala substitution
</member>
        <member name="F:UNIMOD_Pro__Ser">
Pro-&gt;Ser: Pro-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Asn__Ile">
Asn-&gt;Ile: Asn-&gt;Ile substitution
</member>
        <member name="F:UNIMOD_Asn__Asp">
Asn-&gt;Asp: Asn-&gt;Asp substitution
</member>
        <member name="F:UNIMOD_Asn__His">
Asn-&gt;His: Asn-&gt;His substitution
</member>
        <member name="F:UNIMOD_Asn__Tyr">
Asn-&gt;Tyr: Asn-&gt;Tyr substitution
</member>
        <member name="F:UNIMOD_Asn__Lys">
Asn-&gt;Lys: Asn-&gt;Lys substitution
</member>
        <member name="F:UNIMOD_Asn__Thr">
Asn-&gt;Thr: Asn-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Asn__Ser">
Asn-&gt;Ser: Asn-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Met__Val">
Met-&gt;Val: Met-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Met__Leu">
Met-&gt;Leu: Met-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Met__Lys">
Met-&gt;Lys: Met-&gt;Lys substitution
</member>
        <member name="F:UNIMOD_Met__Ile">
Met-&gt;Ile: Met-&gt;Ile substitution
</member>
        <member name="F:UNIMOD_Met__Arg">
Met-&gt;Arg: Met-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Met__Thr">
Met-&gt;Thr: Met-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Leu__Arg">
Leu-&gt;Arg: Leu-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Leu__Met">
Leu-&gt;Met: Leu-&gt;Met substitution
</member>
        <member name="F:UNIMOD_Leu__Gln">
Leu-&gt;Gln: Leu-&gt;Gln substitution
</member>
        <member name="F:UNIMOD_Leu__His">
Leu-&gt;His: Leu-&gt;His substitution
</member>
        <member name="F:UNIMOD_Leu__Val">
Leu-&gt;Val: Leu-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Leu__Pro">
Leu-&gt;Pro: Leu-&gt;Pro substitution
</member>
        <member name="F:UNIMOD_Leu__Trp">
Leu-&gt;Trp: Leu-&gt;Trp substitution
</member>
        <member name="F:UNIMOD_Leu__Phe">
Leu-&gt;Phe: Leu-&gt;Phe substitution
</member>
        <member name="F:UNIMOD_Leu__Ser">
Leu-&gt;Ser: Leu-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Lys__Ile">
Lys-&gt;Ile: Lys-&gt;Ile substitution
</member>
        <member name="F:UNIMOD_Lys__Arg">
Lys-&gt;Arg: Lys-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Lys__Met">
Lys-&gt;Met: Lys-&gt;Met substitution
</member>
        <member name="F:UNIMOD_Lys__Gln">
Lys-&gt;Gln: Lys-&gt;Gln substitution
</member>
        <member name="F:UNIMOD_Lys__Glu">
Lys-&gt;Glu: Lys-&gt;Glu substitution
</member>
        <member name="F:UNIMOD_Lys__Asn">
Lys-&gt;Asn: Lys-&gt;Asn substitution
</member>
        <member name="F:UNIMOD_Lys__Thr">
Lys-&gt;Thr: Lys-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Ile__Arg">
Ile-&gt;Arg: Ile-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Ile__Met">
Ile-&gt;Met: Ile-&gt;Met substitution
</member>
        <member name="F:UNIMOD_Ile__Val">
Ile-&gt;Val: Ile-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Ile__Lys">
Ile-&gt;Lys: Ile-&gt;Lys substitution
</member>
        <member name="F:UNIMOD_Ile__Asn">
Ile-&gt;Asn: Ile-&gt;Asn substitution
</member>
        <member name="F:UNIMOD_Ile__Thr">
Ile-&gt;Thr: Ile-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Ile__Ser">
Ile-&gt;Ser: Ile-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Ile__Phe">
Ile-&gt;Phe: Ile-&gt;Phe substitution
</member>
        <member name="F:UNIMOD_His__Leu">
His-&gt;Leu: His-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_His__Arg">
His-&gt;Arg: His-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_His__Gln">
His-&gt;Gln: His-&gt;Gln substitution
</member>
        <member name="F:UNIMOD_His__Tyr">
His-&gt;Tyr: His-&gt;Tyr substitution
</member>
        <member name="F:UNIMOD_His__Pro">
His-&gt;Pro: His-&gt;Pro substitution
</member>
        <member name="F:UNIMOD_Gly__Arg">
Gly-&gt;Arg: Gly-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Gly__Cys">
Gly-&gt;Cys: Gly-&gt;Cys substitution
</member>
        <member name="F:UNIMOD_Gly__Asp">
Gly-&gt;Asp: Gly-&gt;Asp substitution
</member>
        <member name="F:UNIMOD_Gly__Val">
Gly-&gt;Val: Gly-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Gly__Glu">
Gly-&gt;Glu: Gly-&gt;Glu substitution
</member>
        <member name="F:UNIMOD_Gly__Trp">
Gly-&gt;Trp: Gly-&gt;Trp substitution
</member>
        <member name="F:UNIMOD_Gly__Ser">
Gly-&gt;Ser: Gly-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Gly__Ala">
Gly-&gt;Ala: Gly-&gt;Ala substitution
</member>
        <member name="F:UNIMOD_Phe__Val">
Phe-&gt;Val: Phe-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Phe__Tyr">
Phe-&gt;Tyr: Phe-&gt;Tyr substitution
</member>
        <member name="F:UNIMOD_Phe__Ile">
Phe-&gt;Ile: Phe-&gt;Ile or Phe-&gt;Leu substitution
</member>
        <member name="F:UNIMOD_Phe__Cys">
Phe-&gt;Cys: Phe-&gt;Cys substitution
</member>
        <member name="F:UNIMOD_Phe__Ser">
Phe-&gt;Ser: Phe-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Glu__Val">
Glu-&gt;Val: Glu-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Glu__Gly">
Glu-&gt;Gly: Glu-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Glu__Lys">
Glu-&gt;Lys: Glu-&gt;Lys substitution
</member>
        <member name="F:UNIMOD_Glu__Asp">
Glu-&gt;Asp: Glu-&gt;Asp substitution
</member>
        <member name="F:UNIMOD_Glu__Gln">
Glu-&gt;Gln: Glu-&gt;Gln substitution
</member>
        <member name="F:UNIMOD_Glu__Ala">
Glu-&gt;Ala: Glu-&gt;Ala substitution
</member>
        <member name="F:UNIMOD_Asp__Val">
Asp-&gt;Val: Asp-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Asp__Glu">
Asp-&gt;Glu: Asp-&gt;Glu substitution
</member>
        <member name="F:UNIMOD_Asp__Tyr">
Asp-&gt;Tyr: Asp-&gt;Tyr substitution
</member>
        <member name="F:UNIMOD_Asp__Gly">
Asp-&gt;Gly: Asp-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Asp__Asn">
Asp-&gt;Asn: Asp-&gt;Asn substitution
</member>
        <member name="F:UNIMOD_Asp__His">
Asp-&gt;His: Asp-&gt;His substitution
</member>
        <member name="F:UNIMOD_Asp__Ala">
Asp-&gt;Ala: Asp-&gt;Ala substitution
</member>
        <member name="F:UNIMOD_Cys__Gly">
Cys-&gt;Gly: Cys-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Cys__Arg">
Cys-&gt;Arg: Cys-&gt;Arg substitution
</member>
        <member name="F:UNIMOD_Cys__Tyr">
Cys-&gt;Tyr: Cys-&gt;Tyr substitution
</member>
        <member name="F:UNIMOD_Cys__Trp">
Cys-&gt;Trp: Cys-&gt;Trp substitution
</member>
        <member name="F:UNIMOD_Cys__Ser">
Cys-&gt;Ser: Cys-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_Cys__Phe">
Cys-&gt;Phe: Cys-&gt;Phe substitution
</member>
        <member name="F:UNIMOD_Ala__Val">
Ala-&gt;Val: Ala-&gt;Val substitution
</member>
        <member name="F:UNIMOD_Ala__Glu">
Ala-&gt;Glu: Ala-&gt;Glu substitution
</member>
        <member name="F:UNIMOD_Ala__Gly">
Ala-&gt;Gly: Ala-&gt;Gly substitution
</member>
        <member name="F:UNIMOD_Ala__Pro">
Ala-&gt;Pro: Ala-&gt;Pro substitution
</member>
        <member name="F:UNIMOD_Ala__Asp">
Ala-&gt;Asp: Ala-&gt;Asp substitution
</member>
        <member name="F:UNIMOD_Ala__Thr">
Ala-&gt;Thr: Ala-&gt;Thr substitution
</member>
        <member name="F:UNIMOD_Ala__Ser">
Ala-&gt;Ser: Ala-&gt;Ser substitution
</member>
        <member name="F:UNIMOD_PGA1_biotin">
PGA1-biotin: Prostaglandin A1-biotinimide
</member>
        <member name="F:UNIMOD_15dB_biotin">
15dB-biotin: 15-deoxy-delta 12,14-Prostaglandin J2-biotinimide
</member>
        <member name="F:UNIMOD_CLIP_TRAQ_4">
CLIP_TRAQ_4: CLIP_TRAQ_4
</member>
        <member name="F:UNIMOD_CLIP_TRAQ_3">
CLIP_TRAQ_3: CLIP_TRAQ_3
</member>
        <member name="F:UNIMOD_LeuArgGlyGly">
LeuArgGlyGly: Ubiquitination
</member>
        <member name="F:UNIMOD_Dibromo">
Dibromo: Dibromo
</member>
        <member name="F:UNIMOD_iTRAQ4plex115">
iTRAQ4plex115: Accurate mass for 115
</member>
        <member name="F:UNIMOD_iTRAQ4plex114">
iTRAQ4plex114: Accurate mass for 114
</member>
        <member name="F:UNIMOD_Cation_Cu_I_">
Cation:Cu[I]: Replacement of proton by copper
</member>
        <member name="F:UNIMOD_Cation_K">
Cation:K: Replacement of proton by potassium
</member>
        <member name="F:UNIMOD_Delta_H_5_C_2_">
Delta:H(5)C(2): Dimethylation of proline residue
</member>
        <member name="F:UNIMOD_Methyl_Deamidated">
Methyl+Deamidated: Deamidation followed by a methylation
</member>
        <member name="F:UNIMOD_Dethiomethyl">
Dethiomethyl: Prompt loss of side chain from oxidised Met
</member>
        <member name="F:UNIMOD_CLIP_TRAQ_2">
CLIP_TRAQ_2: CLIP_TRAQ_2
</member>
        <member name="F:UNIMOD_CLIP_TRAQ_1">
CLIP_TRAQ_1: CLIP_TRAQ_1
</member>
        <member name="F:UNIMOD_Sulfo_NHS_LC_LC_Biotin">
Sulfo-NHS-LC-LC-Biotin: Sulfo-NHS-LC-LC-Biotin
</member>
        <member name="F:UNIMOD_Maleimide_PEO2_Biotin">
Maleimide-PEO2-Biotin: Maleimide-PEO2-Biotin
</member>
        <member name="F:UNIMOD_Piperidine">
Piperidine: Piperidination
</member>
        <member name="F:UNIMOD_BisANS">
BisANS: 4,4\'-dianilino-1,1\'-binaphthyl-5,5\'-disulfonic acid
</member>
        <member name="F:UNIMOD_Diethyl">
Diethyl: Diethylation, analogous to Dimethylation
</member>
        <member name="F:UNIMOD_FNEM">
FNEM: fluorescein-5-maleimide
</member>
        <member name="F:UNIMOD_PropylNAGthiazoline">
PropylNAGthiazoline: propyl-1,2-dideoxy-2\'-methyl-alpha-D-glucopyranoso-[2,1-d]-Delta2\'-thiazoline
</member>
        <member name="F:UNIMOD_C8_QAT">
C8-QAT: [3-(2,5)-Dioxopyrrolidin-1-yloxycarbonyl)-propyl]dimethyloctylammonium
</member>
        <member name="F:UNIMOD_Hex_2_">
Hex(2): Lactosylation
</member>
        <member name="F:UNIMOD_Dimethyl_2H_4_13C_2_">
Dimethyl:2H(4)13C(2): DiMethyl-C13HD2
</member>
        <member name="F:UNIMOD_LG_Hlactam_R">
LG-Hlactam-R: Levuglandinyl - arginine hydroxylactam adduct
</member>
        <member name="F:UNIMOD_LG_lactam_R">
LG-lactam-R: Levuglandinyl - arginine lactam adduct
</member>
        <member name="F:UNIMOD_LG_Hlactam_K">
LG-Hlactam-K: Levuglandinyl - lysine hydroxylactam adduct
</member>
        <member name="F:UNIMOD_LG_lactam_K">
LG-lactam-K: Levuglandinyl - lysine lactam adduct
</member>
        <member name="F:UNIMOD_PyMIC">
PyMIC: 3-methyl-2-pyridyl isocyanate
</member>
        <member name="F:UNIMOD_Nmethylmaleimide_water">
Nmethylmaleimide+water: Nmethylmaleimidehydrolysis
</member>
        <member name="F:UNIMOD_IGBP_13C_2_">
IGBP:13C(2): Heavy IDBEST tag for quantitation
</member>
        <member name="F:UNIMOD_BHTOH">
BHTOH: Michael addition of t-butyl hydroxylated BHT (BHTOH) to C, H or K
</member>
        <member name="F:UNIMOD_CyDye_Cy5">
CyDye-Cy5: Cy5 CyDye DIGE Fluor saturation dye
</member>
        <member name="F:UNIMOD_CyDye_Cy3">
CyDye-Cy3: Cy3 CyDye DIGE Fluor saturation dye
</member>
        <member name="F:UNIMOD_BADGE">
BADGE: Bisphenol A diglycidyl ether derivative
</member>
        <member name="F:UNIMOD_Hep">
Hep: Heptose
</member>
        <member name="F:UNIMOD_DHP">
DHP: Dehydropyrrolizidine alkaloid (dehydroretronecine) on cysteines
</member>
        <member name="F:UNIMOD_Label_2H_4_">
Label:2H(4): 4,4,5,5-D4 Lysine
</member>
        <member name="F:UNIMOD_FTC">
FTC: fluorescein-5-thiosemicarbazide
</member>
        <member name="F:UNIMOD_TMAB_2H_9_">
TMAB:2H(9): d9-4-trimethyllammoniumbutyryl-
</member>
        <member name="F:UNIMOD_TMAB">
TMAB: 4-trimethyllammoniumbutyryl-
</member>
        <member name="F:UNIMOD_AEC_MAEC">
AEC-MAEC: aminoethylcysteine
</member>
        <member name="F:UNIMOD_SPITC_13C_6_">
SPITC:13C(6): 4-sulfophenyl isothiocyanate (Heavy C13)
</member>
        <member name="F:UNIMOD_NDA">
NDA: naphthalene-2,3-dicarboxaldehyde
</member>
        <member name="F:UNIMOD_Xlink_DMP">
Xlink:DMP: Both ends of crosslink attached to same peptide
</member>
        <member name="F:UNIMOD_Xlink_DMP_s">
Xlink:DMP-s: One end of crosslink attached, one end free
</member>
        <member name="F:UNIMOD_HexN">
HexN: Hexosamine
</member>
        <member name="F:UNIMOD_GluGluGluGlu">
GluGluGluGlu: tetraglutamyl
</member>
        <member name="F:UNIMOD_GluGluGlu">
GluGluGlu: triglutamyl
</member>
        <member name="F:UNIMOD_GluGlu">
GluGlu: diglutamyl
</member>
        <member name="F:UNIMOD_Glu">
Glu: monoglutamyl
</member>
        <member name="F:UNIMOD_Decanoyl">
Decanoyl: lipid
</member>
        <member name="F:UNIMOD_Microcin">
Microcin: microcin E492 siderophore ester from serine
</member>
        <member name="F:UNIMOD_Deoxy">
Deoxy: reduction
</member>
        <member name="F:UNIMOD_Hydroxytrimethyl">
Hydroxytrimethyl: 5-hydroxy-N6,N6,N6-trimethyl
</member>
        <member name="F:UNIMOD_CuSMo">
CuSMo: copper sulfido molybdopterin cytosine dinuncleotide
</member>
        <member name="F:UNIMOD_FMNC">
FMNC: S-(4a-FMN)
</member>
        <member name="F:UNIMOD_FMN">
FMN: O3-(riboflavin phosphoryl)
</member>
        <member name="F:UNIMOD_Amidino">
Amidino: amidino
</member>
        <member name="F:UNIMOD_Diironsubcluster">
Diironsubcluster: hydrogenase diiron subcluster
</member>
        <member name="F:UNIMOD_Cyano">
Cyano: cyano
</member>
        <member name="F:UNIMOD_MicrocinC7">
MicrocinC7: (3-aminopropyl)(L-aspartyl-1-amino)phosphoryl-5-adenosine
</member>
        <member name="F:UNIMOD_Hydroxyheme">
Hydroxyheme: hydroxyheme
</member>
        <member name="F:UNIMOD_Methylpyrroline">
Methylpyrroline: 4-methyl-delta-1-pyrroline-5-carboxyl
</member>
        <member name="F:UNIMOD_CHDH">
CHDH: cis-14-hydroxy-10,13-dioxo-7-heptadecenoic ester
</member>
        <member name="F:UNIMOD_Didehydroretinylidene">
Didehydroretinylidene: 3,4-didehydroretinylidene
</member>
        <member name="F:UNIMOD_Cholesterol">
Cholesterol: cholesterol ester
</member>
        <member name="F:UNIMOD_Palmitoleyl">
Palmitoleyl: palmitoleyl
</member>
        <member name="F:UNIMOD_PhosphoHex">
PhosphoHex: phosphoglycosyl-D-mannose-1-phosphoryl
</member>
        <member name="F:UNIMOD_PhosphoHexNAc">
PhosphoHexNAc: N-acetylglucosamine-1-phosphoryl
</member>
        <member name="F:UNIMOD_Octanoyl">
Octanoyl: octanoyl
</member>
        <member name="F:UNIMOD_Dioxidation">
Dioxidation: dihydroxy
</member>
        <member name="F:UNIMOD_MolybdopterinGD">
MolybdopterinGD: molybdenum bis(molybdopterin guanine dinucleotide)
</member>
        <member name="F:UNIMOD_Delta_Se_1_">
Delta:Se(1): selenyl
</member>
        <member name="F:UNIMOD_PyruvicAcidIminyl">
PyruvicAcidIminyl: N-pyruvic acid 2-iminyl
</member>
        <member name="F:UNIMOD_Sulfide">
Sulfide: persulfide
</member>
        <member name="F:UNIMOD_Carboxy__Thiocarboxy">
Carboxy-&gt;Thiocarboxy: thiocarboxylic acid
</member>
        <member name="F:UNIMOD_Glycerophospho">
Glycerophospho: glycerophospho
</member>
        <member name="F:UNIMOD_PhosphoUridine">
PhosphoUridine: uridine phosphodiester
</member>
        <member name="F:UNIMOD_Dipyrrolylmethanemethyl">
Dipyrrolylmethanemethyl: dipyrrolylmethanemethyl
</member>
        <member name="F:UNIMOD_MolybdopterinGD_Delta_S__1_Se_1_">
MolybdopterinGD+Delta:S(-1)Se(1): L-selenocysteinyl molybdenum bis(molybdopterin guanine dinucleotide)
</member>
        <member name="F:UNIMOD_Hydroxymethyl">
Hydroxymethyl: hydroxymethyl
</member>
        <member name="F:UNIMOD_Phosphoguanosine">
Phosphoguanosine: phospho-guanosine
</member>
        <member name="F:UNIMOD_Phenylisocyanate_2H_5_">
Phenylisocyanate:2H(5): d5-phenyl isocyanate
</member>
        <member name="F:UNIMOD_Phenylisocyanate">
Phenylisocyanate: phenyl isocyanate
</member>
        <member name="F:UNIMOD_Archaeol">
Archaeol: S-diphytanylglycerol diether
</member>
        <member name="F:UNIMOD_FMNH">
FMNH: flavin mononucleotide
</member>
        <member name="F:UNIMOD_Glycosyl">
Glycosyl: glycosyl-L-hydroxyproline
</member>
        <member name="F:UNIMOD_Hydroxycinnamyl">
Hydroxycinnamyl: hydroxycinnamyl
</member>
        <member name="F:UNIMOD_Phosphoadenosine">
Phosphoadenosine: AMP binding site
</member>
        <member name="F:UNIMOD_Ser__LacticAcid">
Ser-&gt;LacticAcid: lactic acid from N-term Ser
</member>
        <member name="F:UNIMOD_Cys__Oxoalanine">
Cys-&gt;Oxoalanine: oxoalanine
</member>
        <member name="F:UNIMOD_Didehydro">
Didehydro: 2-amino-3-oxo-butanoic_acid
</member>
        <member name="F:UNIMOD_Tyr__Dha">
Tyr-&gt;Dha: Dehydroalanine (from Tyrosine)
</member>
        <member name="F:UNIMOD_Thyroxine">
Thyroxine: tetraiodo
</member>
        <member name="F:UNIMOD_Triiodothyronine">
Triiodothyronine: triiodo
</member>
        <member name="F:UNIMOD_GlycerylPE">
GlycerylPE: glycerylphosphorylethanolamine
</member>
        <member name="F:UNIMOD_PhosphoribosyldephosphoCoA">
PhosphoribosyldephosphoCoA: phosphoribosyl dephospho-coenzyme A
</member>
        <member name="F:UNIMOD_GPIanchor">
GPIanchor: glycosylphosphatidylinositol
</member>
        <member name="F:UNIMOD_Glucosylgalactosyl">
Glucosylgalactosyl: glucosylgalactosyl hydroxylysine
</member>
        <member name="F:UNIMOD_Quinone">
Quinone: quinone
</member>
        <member name="F:UNIMOD_Molybdopterin">
Molybdopterin: molybdopterin
</member>
        <member name="F:UNIMOD_Heme">
Heme: heme
</member>
        <member name="F:UNIMOD_Phytochromobilin">
Phytochromobilin: phytochromobilin
</member>
        <member name="F:UNIMOD_Phycoerythrobilin">
Phycoerythrobilin: phycoerythrobilin
</member>
        <member name="F:UNIMOD_Phycocyanobilin">
Phycocyanobilin: phycocyanobilin
</member>
        <member name="F:UNIMOD_Ammonia_loss">
Ammonia-loss: Loss of ammonia
</member>
        <member name="F:UNIMOD_Cys__PyruvicAcid">
Cys-&gt;PyruvicAcid: pyruvic acid from N-term cys
</member>
        <member name="F:UNIMOD_Lys__AminoadipicAcid">
Lys-&gt;AminoadipicAcid: alpha-amino adipic acid
</member>
        <member name="F:UNIMOD_Retinylidene">
Retinylidene: retinal
</member>
        <member name="F:UNIMOD_Hypusine">
Hypusine: hypusine
</member>
        <member name="F:UNIMOD_Carboxyethyl">
Carboxyethyl: carboxyethyl
</member>
        <member name="F:UNIMOD_Diacylglycerol">
Diacylglycerol: diacylglycerol
</member>
        <member name="F:UNIMOD_Hydroxyfarnesyl">
Hydroxyfarnesyl: hydroxyfarnesyl
</member>
        <member name="F:UNIMOD_Diphthamide">
Diphthamide: Diphthamide
</member>
        <member name="F:UNIMOD_Dehydro">
Dehydro: Half of a disulfide bridge
</member>
        <member name="F:UNIMOD_Arg__Orn">
Arg-&gt;Orn: Ornithine from Arginine
</member>
        <member name="F:UNIMOD_HMVK">
HMVK: Michael addition of hydroxymethylvinyl ketone to cysteine
</member>
        <member name="F:UNIMOD_Pro__Pyrrolidone">
Pro-&gt;Pyrrolidone: Pyrrolidone from Proline
</member>
        <member name="F:UNIMOD_Cys__Dha">
Cys-&gt;Dha: Dehydroalanine (from Cysteine)
</member>
        <member name="F:UNIMOD_Deamidated_18O_1_">
Deamidated:18O(1): Deamidation in presence of O18
</member>
        <member name="F:UNIMOD_ICPL">
ICPL: Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, light form
</member>
        <member name="F:UNIMOD_ICPL_13C_6_">
ICPL:13C(6): Bruker Daltonics SERVA-ICPL(TM) quantification chemistry, heavy form
</member>
        <member name="F:UNIMOD_Isopropylphospho">
Isopropylphospho: O-Isopropylphosphorylation
</member>
        <member name="F:UNIMOD_Diisopropylphosphate">
Diisopropylphosphate: O-Diisopropylphosphorylation
</member>
        <member name="F:UNIMOD_Thrbiotinhydrazide">
Thrbiotinhydrazide: oxidized Threonine biotinylated with biotin hydrazide
</member>
        <member name="F:UNIMOD_Pro__Pyrrolidinone">
Pro-&gt;Pyrrolidinone: Proline oxidation to pyrrolidinone
</member>
        <member name="F:UNIMOD_Pro__pyro_Glu">
Pro-&gt;pyro-Glu: proline oxidation to pyroglutamic acid
</member>
        <member name="F:UNIMOD_probiotinhydrazide">
probiotinhydrazide: oxidized proline biotinylated with biotin hydrazide
</member>
        <member name="F:UNIMOD_Nitro">
Nitro: Oxidation to nitro
</member>
        <member name="F:UNIMOD_Lysbiotinhydrazide">
Lysbiotinhydrazide: oxidized Lysine biotinylated with biotin hydrazide
</member>
        <member name="F:UNIMOD_Lys__Allysine">
Lys-&gt;Allysine: Lysine oxidation to aminoadipic semialdehyde
</member>
        <member name="F:UNIMOD_Trp__Kynurenin">
Trp-&gt;Kynurenin: tryptophan oxidation to kynurenin
</member>
        <member name="F:UNIMOD_Trp__Hydroxykynurenin">
Trp-&gt;Hydroxykynurenin: tryptophan oxidation to hydroxykynurenin
</member>
        <member name="F:UNIMOD_His__Asp">
His-&gt;Asp: histidine oxidation to aspartic acid
</member>
        <member name="F:UNIMOD_His__Asn">
His-&gt;Asn: histidine oxidation to aspargine
</member>
        <member name="F:UNIMOD_Trioxidation">
Trioxidation: cysteine oxidation to cysteic acid
</member>
        <member name="F:UNIMOD_Arg__GluSA">
Arg-&gt;GluSA: Arginine oxidation to glutamic semialdehyde
</member>
        <member name="F:UNIMOD_Argbiotinhydrazide">
Argbiotinhydrazide: oxidized Arginine biotinylated with biotin hydrazide
</member>
        <member name="F:UNIMOD_Amino">
Amino: Tyrosine oxidation to 2-aminotyrosine
</member>
        <member name="F:UNIMOD_Bromo">
Bromo: bromination
</member>
        <member name="F:UNIMOD_Methylamine">
Methylamine: Michael addition with methylamine
</member>
        <member name="F:UNIMOD_HNE_Delta_H_2_">
HNE+Delta:H(2): reduced 4-Hydroxynonenal
</member>
        <member name="F:UNIMOD_Can_FP_biotin">
Can-FP-biotin: 6-N-biotinylaminohexyl isopropyl phosphate
</member>
        <member name="F:UNIMOD_Thiophos_S_S_biotin">
Thiophos-S-S-biotin: thiophosphate labeled with biotin-HPDP
</member>
        <member name="F:UNIMOD_Dimethyl_2H_6_13C_2_">
Dimethyl:2H(6)13C(2): dimethylated arginine
</member>
        <member name="F:UNIMOD_Methyl_2H_3_13C_1_">
Methyl:2H(3)13C(1): monomethylated arginine
</member>
        <member name="F:UNIMOD_Delta_H_4_C_2_O__1_S_1_">
Delta:H(4)C(2)O(-1)S(1): S-Ethylcystine from Serine
</member>
        <member name="F:UNIMOD_FP_Biotin">
FP-Biotin: 10-ethoxyphosphinyl-N-(biotinamidopentyl)decanamide
</member>
        <member name="F:UNIMOD_DTBP">
DTBP: dimethyl 3,3\'-dithiobispropionimidate
</member>
        <member name="F:UNIMOD_Xlink_B10621">
Xlink:B10621: bis-N-I-sulfonerahodamine
</member>
        <member name="F:UNIMOD_Nethylmaleimide_water">
Nethylmaleimide+water: Nethylmaleimidehydrolysis
</member>
        <member name="F:UNIMOD_Delta_H_2_C_3_O_1_">
Delta:H(2)C(3)O(1): MDA adduct +54
</member>
        <member name="F:UNIMOD_Delta_H_2_C_5_">
Delta:H(2)C(5): MDA adduct +62
</member>
        <member name="F:UNIMOD_DimethylpyrroleAdduct">
DimethylpyrroleAdduct: 2,5-dimethypyrrole
</member>
        <member name="F:UNIMOD_Nmethylmaleimide">
Nmethylmaleimide: Nmethylmaleimide
</member>
        <member name="F:UNIMOD_Lys_loss">
Lys-loss: Loss of C-terminal K from Heavy Chain of MAb
</member>
        <member name="F:UNIMOD_Cysteinyl">
Cysteinyl: Cysteinylation
</member>
        <member name="F:UNIMOD_Hex_5_HexNAc_4_">
Hex(5)HexNAc(4): Biantennary
</member>
        <member name="F:UNIMOD_Hex_4_HexNAc_4_">
Hex(4)HexNAc(4): Biantennary (-1 galactose)
</member>
        <member name="F:UNIMOD_Hex_3_HexNAc_4_">
Hex(3)HexNAc(4): Biantennary (-2 galactose)
</member>
        <member name="F:UNIMOD_dHex_1_Hex_5_HexNAc_4_">
dHex(1)Hex(5)HexNAc(4): Fucosylated biantennary
</member>
        <member name="F:UNIMOD_dHex_1_Hex_4_HexNAc_4_">
dHex(1)Hex(4)HexNAc(4): Fucosylated biantennary (-1 galactose)
</member>
        <member name="F:UNIMOD_dHex_1_Hex_3_HexNAc_4_">
dHex(1)Hex(3)HexNAc(4): Fucosylated biantennary (-2 galactose)
</member>
        <member name="F:UNIMOD_DeStreak">
DeStreak: Cysteine mercaptoethanol
</member>
        <member name="F:UNIMOD_Menadione">
Menadione: Menadione quinone derivative
</member>
        <member name="F:UNIMOD_Bromobimane">
Bromobimane: Monobromobimane derivative
</member>
        <member name="F:UNIMOD_Carboxy">
Carboxy: Carboxylation
</member>
        <member name="F:UNIMOD_Methyl_2H_3_">
Methyl:2H(3): deuterated methyl ester
</member>
        <member name="F:UNIMOD_dHex">
dHex: Fucose
</member>
        <member name="F:UNIMOD_IED_Biotin">
IED-Biotin: biotinoyl-iodoacetyl-ethylenediamine
</member>
        <member name="F:UNIMOD_CAMthiopropanoyl">
CAMthiopropanoyl: 3-(carbamidomethylthio)propanoyl
</member>
        <member name="F:UNIMOD_IodoU_AMP">
IodoU-AMP: Cross-link of (Iodo)-uracil MP with W,F,Y
</member>
        <member name="F:UNIMOD_Delta_Hg_1_">
Delta:Hg(1): Mercury Mercaptan
</member>
        <member name="F:UNIMOD_Biotin_HPDP">
Biotin-HPDP: Pierce EZ-Link Biotin-HPDP
</member>
        <member name="F:UNIMOD_Biotin_PEO_Amine">
Biotin-PEO-Amine: Biotin polyethyleneoxide amine
</member>
        <member name="F:UNIMOD_Trp__Oxolactone">
Trp-&gt;Oxolactone: Tryptophan oxidation to oxolactone
</member>
        <member name="F:UNIMOD_SulfanilicAcid_13C_6_">
SulfanilicAcid:13C(6): Heavy Sulfanilic Acid (SA) C13
</member>
        <member name="F:UNIMOD_SulfanilicAcid">
SulfanilicAcid: Light Sulfanilic Acid (SA) C12
</member>
        <member name="F:UNIMOD_Methyl_2H_2_">
Methyl:2H(2): Deuterium Methylation of Lysine
</member>
        <member name="F:UNIMOD_CoenzymeA">
CoenzymeA: Cysteine modified Coenzyme A
</member>
        <member name="F:UNIMOD_Ethyl">
Ethyl: Ethylation
</member>
        <member name="F:UNIMOD_Ethanolyl">
Ethanolyl: Ethanolation of Cys
</member>
        <member name="F:UNIMOD_AEBS">
AEBS: Aminoethylbenzenesulfonylation
</member>
        <member name="F:UNIMOD_Nitrosyl">
Nitrosyl: S-nitrosylation
</member>
        <member name="F:UNIMOD_Xlink_SSD">
Xlink:SSD: covalent modification of lysine by cross-linking reagent
</member>
        <member name="F:UNIMOD_CAF">
CAF: sulfonation of N-terminus
</member>
        <member name="F:UNIMOD_Cytopiloyne_water">
Cytopiloyne+water: nucleophilic addition to cytopiloyne+H2O
</member>
        <member name="F:UNIMOD_Cytopiloyne">
Cytopiloyne: nucleophilic addtion to cytopiloyne
</member>
        <member name="F:UNIMOD_Label_13C_9_15N_1_">
Label:13C(9)15N(1): 13C(9) 15N(1) Silac label
</member>
        <member name="F:UNIMOD_Label_13C_5_15N_1_">
Label:13C(5)15N(1): 13C(5) 15N(1) Silac label
</member>
        <member name="F:UNIMOD_Label_13C_6_15N_4_">
Label:13C(6)15N(4): 13C(6) 15N(4) Silac label
</member>
        <member name="F:UNIMOD_PET">
PET: phosphorylation to pyridyl thiol
</member>
        <member name="F:UNIMOD_Label_2H_3_">
Label:2H(3): Trideuteration
</member>
        <member name="F:UNIMOD_SPITC">
SPITC: 4-sulfophenyl isothiocyanate
</member>
        <member name="F:UNIMOD_Thiophospho">
Thiophospho: Thiophosphorylation
</member>
        <member name="F:UNIMOD_Label_13C_6_15N_2_">
Label:13C(6)15N(2): 13C(6) 15N(2) Silac label
</member>
        <member name="F:UNIMOD_Label_18O_1_">
Label:18O(1): O18 Labeling
</member>
        <member name="F:UNIMOD_Delta_H_4_C_3_">
Delta:H(4)C(3): Propionaldehyde +40
</member>
        <member name="F:UNIMOD_Delta_H_4_C_2_">
Delta:H(4)C(2): Acetaldehyde +28
</member>
        <member name="F:UNIMOD_Delta_H_2_C_2_">
Delta:H(2)C(2): Acetaldehyde +26
</member>
        <member name="F:UNIMOD_Crotonaldehyde">
Crotonaldehyde: Crotonaldehyde
</member>
        <member name="F:UNIMOD_IGBP">
IGBP: Light IDBEST tag for quantitation
</member>
        <member name="F:UNIMOD_ADP_Ribosyl">
ADP-Ribosyl: ADP  Ribose addition
</member>
        <member name="F:UNIMOD_NEIAA_2H_5_">
NEIAA:2H(5): N-ethyl iodoacetamide-d5
</member>
        <member name="F:UNIMOD_NEIAA">
NEIAA: N-ethyl iodoacetamide-d0
</member>
        <member name="F:UNIMOD_Delta_H_8_C_6_O_2_">
Delta:H(8)C(6)O(2): Acrolein addition +112
</member>
        <member name="F:UNIMOD_Delta_H_4_C_6_">
Delta:H(4)C(6): Acrolein addition +76
</member>
        <member name="F:UNIMOD_Delta_H_2_C_3_">
Delta:H(2)C(3): Acrolein addition +38
</member>
        <member name="F:UNIMOD_Delta_H_4_C_3_O_1_">
Delta:H(4)C(3)O(1): Acrolein addition +56
</member>
        <member name="F:UNIMOD_Delta_H_6_C_6_O_1_">
Delta:H(6)C(6)O(1): Acrolein addition +94
</member>
        <member name="F:UNIMOD_Ethanedithiol">
Ethanedithiol: EDT
</member>
        <member name="F:UNIMOD_Dimethyl_2H_4_">
Dimethyl:2H(4): DiMethyl-CHD2
</member>
        <member name="F:UNIMOD_EQAT_2H_5_">
EQAT:2H(5): EAPTA d5
</member>
        <member name="F:UNIMOD_EQAT">
EQAT: EAPTA d0
</member>
        <member name="F:UNIMOD_QAT_2H_3_">
QAT:2H(3): APTA d3
</member>
        <member name="F:UNIMOD_QAT">
QAT: APTA-d0
</member>
        <member name="F:UNIMOD_AccQTag">
AccQTag: 6-aminoquinolyl-N-hydroxysuccinimidyl carbamate
</member>
        <member name="F:UNIMOD_Label_18O_2_">
Label:18O(2): O18 label at both C-terminal oxygens
</member>
        <member name="F:UNIMOD_Label_13C_6_">
Label:13C(6): 13C(6) Silac label
</member>
        <member name="F:UNIMOD_2HPG">
2HPG: bis(hydroxphenylglyoxal) arginine
</member>
        <member name="F:UNIMOD_HPG">
HPG: Hydroxyphenylglyoxal arginine
</member>
        <member name="F:UNIMOD_Label_13C_9__Phospho">
Label:13C(9)+Phospho: C13 label (Phosphotyrosine)
</member>
        <member name="F:UNIMOD_Label_13C_9_">
Label:13C(9): 13C(9) Silac label
</member>
        <member name="F:UNIMOD_DAET">
DAET: phosphorylation to amine thiol
</member>
        <member name="F:UNIMOD_BHT">
BHT: Michael addition of BHT quinone methide to Cysteine and Lysine
</member>
        <member name="F:UNIMOD_NBS">
NBS: Shimadzu NBS-12C
</member>
        <member name="F:UNIMOD_NBS_13C_6_">
NBS:13C(6): Shimadzu NBS-13C
</member>
        <member name="F:UNIMOD_Delta_H_1_O__1_18O_1_">
Delta:H(1)O(-1)18O(1): glycosylated asparagine 18O labeling
</member>
        <member name="F:UNIMOD_Delta_S__1_Se_1_">
Delta:S(-1)Se(1): Selenium replaces sulphur
</member>
        <member name="F:UNIMOD_Hex_3_HexNAc_2_P_1_">
Hex(3)HexNAc(2)P(1): Hex3HexNAc2P1
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_1_NeuAc_2_">
Hex(1)HexNAc(1)NeuAc(2): Hex1HexNAc1NeuAc2
</member>
        <member name="F:UNIMOD_Hex_3_HexNAc_2_">
Hex(3)HexNAc(2): Hex3HexNAc2
</member>
        <member name="F:UNIMOD_Hex_2_HexNAc_2_dHex_1_">
Hex(2)HexNAc(2)dHex(1): Hex2HexNAc2dHex1
</member>
        <member name="F:UNIMOD_Hex_2_HexNAc_2_Pent_1_">
Hex(2)HexNAc(2)Pent(1): Hex2HexNAc2Pent1
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_2_dHex_2_">
Hex(1)HexNAc(2)dHex(2): Hex1HexNAc2dHex2
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_2_dHex_1_Pent_1_">
Hex(1)HexNAc(2)dHex(1)Pent(1): Hex1HexNAc2dHex1Pent1
</member>
        <member name="F:UNIMOD_Hex_3_HexNAc_1_Pent_1_">
Hex(3)HexNAc(1)Pent(1): Hex3HexNAc1Pent1
</member>
        <member name="F:UNIMOD_Hex_2_HexNAc_2_">
Hex(2)HexNAc(2): Hex2HexNAc2
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_2_dHex_1_">
Hex(1)HexNAc(2)dHex(1): Hex1HexNAc2dHex1
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_2_Pent_1_">
Hex(1)HexNAc(2)Pent(1): Hex1HexNAc2Pent1
</member>
        <member name="F:UNIMOD_HexNAc_2_dHex_2_">
HexNAc(2)dHex(2): HexNAc2dHex2
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_1_NeuAc_1_">
Hex(1)HexNAc(1)NeuAc(1): Hex1HexNAc1NeuAc1
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_2_">
Hex(1)HexNAc(2): Hex1HexNAc2
</member>
        <member name="F:UNIMOD_HexNAc_2_dHex_1_">
HexNAc(2)dHex(1): HexNAc2dHex1
</member>
        <member name="F:UNIMOD_Hex_1_HexNAc_1_dHex_1_">
Hex(1)HexNAc(1)dHex(1): Hex1HexNAc1dHex1
</member>
        <member name="F:UNIMOD_HexNAc_1_dHex_2_">
HexNAc(1)dHex(2): HexNAc1dHex2
</member>
        <member name="F:UNIMOD_Hex_3_">
Hex(3): Hex3
</member>
        <member name="F:UNIMOD_HexNAc_2_">
HexNAc(2): HexNAc2
</member>
        <member name="F:UNIMOD_HexNAc_1_dHex_1_">
HexNAc(1)dHex(1): HexNAc1dHex1
</member>
        <member name="F:UNIMOD_Amidine">
Amidine: amidination of lysines or N-terminal amines with methyl acetimidate
</member>
        <member name="F:UNIMOD_a_type_ion">
a-type-ion: ISD a-series (C-Term)
</member>
        <member name="F:UNIMOD_Dansyl">
Dansyl: 5-dimethylaminonaphthalene-1-sulfonyl
</member>
        <member name="F:UNIMOD_Hex_5_HexNAc_2_">
Hex(5)HexNAc(2): N-linked glycan core
</member>
        <member name="F:UNIMOD_Myristoyl_Delta_H__4_">
Myristoyl+Delta:H(-4): (cis,cis-delta 5, delta 8)-tetradecadienoyl
</member>
        <member name="F:UNIMOD_Myristoleyl">
Myristoleyl: (cis-delta 5)-tetradecaenoyl
</member>
        <member name="F:UNIMOD_Triiodo">
Triiodo: tri-Iodination
</member>
        <member name="F:UNIMOD_Diiodo">
Diiodo: di-Iodination
</member>
        <member name="F:UNIMOD_Iodo">
Iodo: Iodination
</member>
        <member name="F:UNIMOD_Fluorescein">
Fluorescein: 5-Iodoacetamidofluorescein (Molecular Probe, Eugene, OR)
</member>
        <member name="F:UNIMOD_Fluoro">
Fluoro: fluorophenylalanine replacement of phenylalanine
</member>
        <member name="F:UNIMOD_Thioacyl">
Thioacyl: thioacylation of primary amines (N-term and Lys)
</member>
        <member name="F:UNIMOD_ICAT_H_13C_6_">
ICAT-H:13C(6): N-iodoacetyl, p-chlorobenzyl-13C6-glucamine
</member>
        <member name="F:UNIMOD_ICAT_H">
ICAT-H: N-iodoacetyl, p-chlorobenzyl-12C6-glucamine
</member>
        <member name="F:UNIMOD_Formyl">
Formyl: Formylation
</member>
        <member name="F:UNIMOD_GlyGly">
GlyGly: ubiquitinylation residue
</member>
        <member name="F:UNIMOD_IBTP">
IBTP: Thio Ether Formation - BTP Adduct
</member>
        <member name="F:UNIMOD_EDT_iodoacetyl_PEO_biotin">
EDT-iodoacetyl-PEO-biotin: EDT-iodo-PEO-biotin
</member>
        <member name="F:UNIMOD_OxArgBiotinRed">
OxArgBiotinRed: Oxidized arginine biotinylated with biotin-LC-hydrazide, reduced
</member>
        <member name="F:UNIMOD_OxArgBiotin">
OxArgBiotin: Oxidized arginine biotinylated with biotin-LC-hydrazide
</member>
        <member name="F:UNIMOD_OxProBiotin">
OxProBiotin: Oxidized Proline biotinylated with biotin-LC-hydrazide
</member>
        <member name="F:UNIMOD_OxProBiotinRed">
OxProBiotinRed: Oxidized proline biotinylated with biotin-LC-hydrazide, reduced
</member>
        <member name="F:UNIMOD_OxLysBiotin">
OxLysBiotin: Oxidized lysine biotinylated with biotin-LC-hydrazide
</member>
        <member name="F:UNIMOD_OxLysBiotinRed">
OxLysBiotinRed: Oxidized lysine biotinylated with biotin-LC-hydrazide, reduced
</member>
        <member name="F:UNIMOD_Nethylmaleimide">
Nethylmaleimide: N-ethylmaleimide on cysteines
</member>
        <member name="F:UNIMOD_FormylMet">
FormylMet: Addition of N-formyl met
</member>
        <member name="F:UNIMOD_ICAT_C_13C_9_">
ICAT-C:13C(9): Applied Biosystems cleavable ICAT(TM) heavy
</member>
        <member name="F:UNIMOD_ICAT_C">
ICAT-C: Applied Biosystems cleavable ICAT(TM) light
</member>
        <member name="F:UNIMOD_Propionamide_2H_3_">
Propionamide:2H(3): Acrylamide d3
</member>
        <member name="F:UNIMOD_IMID_2H_4_">
IMID:2H(4): IMID d4
</member>
        <member name="F:UNIMOD_IMID">
IMID: IMID d0
</member>
        <member name="F:UNIMOD_EDT_maleimide_PEO_biotin">
EDT-maleimide-PEO-biotin: EDT-maleimide-PEO-biotin
</member>
        <member name="F:UNIMOD_NHS_LC_Biotin">
NHS-LC-Biotin: NHS-LC-Biotin
</member>
        <member name="F:UNIMOD_ESP_2H_10_">
ESP:2H(10): ESP-Tag heavy d10
</member>
        <member name="F:UNIMOD_ESP">
ESP: ESP-Tag light d0
</member>
        <member name="F:UNIMOD_Iminobiotin">
Iminobiotin: Iminobiotinylation
</member>
        <member name="F:UNIMOD_Glutathione">
Glutathione: glutathione disulfide
</member>
        <member name="F:UNIMOD_Glucuronyl">
Glucuronyl: N-glucuronylation
</member>
        <member name="F:UNIMOD_HNE">
HNE: 4-hydroxynonenal (HNE)
</member>
        <member name="F:UNIMOD_Guanidinyl">
Guanidinyl: Guanidination
</member>
        <member name="F:UNIMOD_Tripalmitate">
Tripalmitate: N-acyl diglyceride cysteine
</member>
        <member name="F:UNIMOD_FAD">
FAD: Flavin adenine dinucleotide
</member>
        <member name="F:UNIMOD_Phosphopantetheine">
Phosphopantetheine: Phosphopantetheine
</member>
        <member name="F:UNIMOD_GeranylGeranyl">
GeranylGeranyl: Geranyl-geranyl
</member>
        <member name="F:UNIMOD_Palmitoyl">
Palmitoyl: Palmitoylation
</member>
        <member name="F:UNIMOD_PyridoxalPhosphate">
PyridoxalPhosphate: Pyridoxal phosphate
</member>
        <member name="F:UNIMOD_Myristoyl">
Myristoyl: Myristoylation
</member>
        <member name="F:UNIMOD_Farnesyl">
Farnesyl: Farnesylation
</member>
        <member name="F:UNIMOD_HexNAc">
HexNAc: N-Acetylhexosamine
</member>
        <member name="F:UNIMOD_Lipoyl">
Lipoyl: Lipoyl
</member>
        <member name="F:UNIMOD_Hex">
Hex: Hexose
</member>
        <member name="F:UNIMOD_Sulfo">
Sulfo: O-Sulfonation
</member>
        <member name="F:UNIMOD_Methylthio">
Methylthio: Beta-methylthiolation
</member>
        <member name="F:UNIMOD_Trimethyl">
Trimethyl: tri-Methylation
</member>
        <member name="F:UNIMOD_Dimethyl">
Dimethyl: di-Methylation
</member>
        <member name="F:UNIMOD_Oxidation">
Oxidation: Oxidation or Hydroxylation
</member>
        <member name="F:UNIMOD_Methyl">
Methyl: Methylation
</member>
        <member name="F:UNIMOD_Pyridylethyl">
Pyridylethyl: S-pyridylethylation
</member>
        <member name="F:UNIMOD_Cation_Na">
Cation:Na: Sodium adduct
</member>
        <member name="F:UNIMOD_SMA">
SMA: N-Succinimidyl-3-morpholine acetate
</member>
        <member name="F:UNIMOD_Gln__pyro_Glu">
Gln-&gt;pyro-Glu: Pyro-glu from Q
</member>
        <member name="F:UNIMOD_Glu__pyro_Glu">
Glu-&gt;pyro-Glu: Pyro-glu from E
</member>
        <member name="F:UNIMOD_Pyro_carbamidomethyl">
Pyro-carbamidomethyl: S-carbamoylmethylcysteine cyclization (N-terminus)
</member>
        <member name="F:UNIMOD_Pyridylacetyl">
Pyridylacetyl: pyridylacetyl
</member>
        <member name="F:UNIMOD_Propionamide">
Propionamide: Acrylamide adduct
</member>
        <member name="F:UNIMOD_Dehydrated">
Dehydrated: Dehydration
</member>
        <member name="F:UNIMOD_Phospho">
Phospho: Phosphorylation
</member>
        <member name="F:UNIMOD_PEO_Iodoacetyl_LC_Biotin">
PEO-Iodoacetyl-LC-Biotin: Biotinyl-iodoacetamidyl-3,6-dioxaoctanediamine
</member>
        <member name="F:UNIMOD_NIPCAM">
NIPCAM: N-isopropylcarboxamidomethyl
</member>
        <member name="F:UNIMOD_ICAT_D">
ICAT-D: Applied Biosystems original ICAT(TM) d0
</member>
        <member name="F:UNIMOD_ICAT_D_2H_8_">
ICAT-D:2H(8): Applied Biosystems original ICAT(TM) d8
</member>
        <member name="F:UNIMOD_Met__Hsl">
Met-&gt;Hsl: Homoserine lactone
</member>
        <member name="F:UNIMOD_Met__Hse">
Met-&gt;Hse: Homoserine
</member>
        <member name="F:UNIMOD_ICAT_G_2H_8_">
ICAT-G:2H(8): Gygi ICAT(TM) d8
</member>
        <member name="F:UNIMOD_ICAT_G">
ICAT-G: Gygi ICAT(TM) d0
</member>
        <member name="F:UNIMOD_Deamidated">
Deamidated: Deamidation
</member>
        <member name="F:UNIMOD_Carboxymethyl">
Carboxymethyl: Iodoacetic acid derivative
</member>
        <member name="F:UNIMOD_Carbamyl">
Carbamyl: Carbamylation
</member>
        <member name="F:UNIMOD_Carbamidomethyl">
Carbamidomethyl: Iodoacetamide derivative
</member>
        <member name="F:UNIMOD_Biotin">
Biotin: Biotinylation
</member>
        <member name="F:UNIMOD_Amidated">
Amidated: Amidation
</member>
        <member name="F:UNIMOD_Acetyl">
Acetyl: Acetylation
</member>
        <member name="F:UNIMOD_unimod_root_node">
unimod root node: The root node of the unimod modifications ontology.
</member>
        <member name="F:UO_microgram_per_liter">
microgram per liter: A mass unit density which is equal to mass of an object in micrograms divided by the volume in liters.
</member>
        <member name="F:UO_absorbance_unit">
absorbance unit: A dimensionless logarithmic unit assigned to a measure of absorbance of light through a partially absorbing substance, defined as -log10(I/I_0) where I = transmitted light and I_0 = incident light.
</member>
        <member name="F:UO_volt_per_meter">
volt per meter: The volt per meter is a unit of electric field strength equal to the a potential difference of 1 volt existing between two points that are 1 meter apart.
</member>
        <member name="F:UO_electric_field_strength_unit">
electric field strength unit: The electric field strength is a derived unit which is a measure of the potential difference between two points some distance apart.
</member>
        <member name="F:UO_electronvolt">
electronvolt: A non-SI unit of energy (eV) defined as the energy acquired by a single unbound electron when it passes through an electrostatic potential difference of one volt. An electronvolt is equal to 1.602 176 53(14) x 10^-19 J.
</member>
        <member name="F:UO_watt_per_meter_kelvin">
watt per meter kelvin: An heat conduction unit which is equal to one watt divided by meter kelvin.
</member>
        <member name="F:UO_siemens">
siemens: An electrical conduction unit which is equal to A/V.
</member>
        <member name="F:UO_heat_conduction_unit">
heat conduction unit: A derived unit which represents a standard measurement of the spontaneous transfer of thermal energy through matter, from a region of higher temperature to a region of lower temperature.
</member>
        <member name="F:UO_electrical_conduction_unit">
electrical conduction unit: A derived unit which represents a standard measurement of the movement of electrically charged particles through a transmission medium (electrical conductor).
</member>
        <member name="F:UO_conduction_unit">
conduction unit: A derived unit which represents a standard measurement of the transmission of an entity through a medium.
</member>
        <member name="F:UO_effective_dose_unit">
effective dose unit: 
</member>
        <member name="F:UO_decibel">
decibel: An ratio unit which is an indicator of sound power per unit area.
</member>
        <member name="F:UO_poise">
poise: A viscosity unit which is equal to one dyne second per square centimeter.
</member>
        <member name="F:UO_pascal_second">
pascal second: A viscosity unit which is equal to one pascale per second.
</member>
        <member name="F:UO_viscosity_unit">
viscosity unit: A derived unit which is a standard measure of the internal resistance of fluids to flow.
</member>
        <member name="F:UO_dyne_per_cm">
dyne per cm: A surface tension unit which is equal to one dyne per centimeter.
</member>
        <member name="F:UO_newton_per_meter">
newton per meter: A surface tension unit which is equal to one newton per meter.
</member>
        <member name="F:UO_surface_tension_unit">
surface tension unit: A unit which is a standard measure of the ability of a liguid to attraction of molecules at its surface as a result of unbalanced molecular cohesive forces.
</member>
        <member name="F:UO_megavolt">
megavolt: An electric potential difference unit which is equal to one million volts or 10^[6] V.
</member>
        <member name="F:UO_picovolt">
picovolt: An electric potential difference unit which is equal to one trillionth of a volt or 10^[-12] V.
</member>
        <member name="F:UO_nanovolt">
nanovolt: An electric potential difference unit which is equal to one billionth of a volt or 10^[-12] V.
</member>
        <member name="F:UO_microvolt">
microvolt: An electric potential difference unit which is equal to one millionth of a volt or 10^[-6] V.
</member>
        <member name="F:UO_kilovolt">
kilovolt: An electric potential difference unit which is equal to one thousand volts or 10^[3] V.
</member>
        <member name="F:UO_millivolt">
millivolt: An electric potential difference unit which is equal to one thousandth of a volt or 10^[-3] V.
</member>
        <member name="F:UO_mebibyte">
mebibyte: An information unit which is equal to 1024 KiB.
</member>
        <member name="F:UO_kibibyte">
kibibyte: An information unit which is equal to 1024 B.
</member>
        <member name="F:UO_base_pair">
base pair: A count unit which contains one nucleotide.
</member>
        <member name="F:UO_pixels_per_millimeter">
pixels per millimeter: A spatial resolution unit which is a standard measure of the number of pixels in one millimeter length or width of a digital image divided by the physical length or width of a printed image.
</member>
        <member name="F:UO_pixels_per_inch">
pixels per inch: A spatial resolution unit which is a standard measure of the resolution of a computer display, related to the size of the display in inches and the total number of pixels in the horizontal and vertical directions.
</member>
        <member name="F:UO_micron">
micron: A spatial resolution unit which is equal to a pixel size of one micrometer.
</member>
        <member name="F:UO_dots_per_inch">
dots per inch: A spatial resolution unit which is a standard measure of the printing resolution, in particular the number of individual dots of ink a printer or toner can produce within a linear one-inch space.
</member>
        <member name="F:UO_spatial_resolution_unit">
spatial resolution unit: An image resolution unit which is a standard measure of the way luminance and chrominance may be sampled at different levels.
</member>
        <member name="F:UO_dynamic_range_unit">
dynamic range unit: An image resolution unit which is a standard measure of the amount of contrast available in a pixel.
</member>
        <member name="F:UO_chroma_sampling_unit">
chroma sampling unit: An image resolution unit which is a standard measure of the amount of spatial detail in an image.
</member>
        <member name="F:UO_image_resolution_unit">
image resolution unit: An information unit which is a standard measure of the detail an image holds.
</member>
        <member name="F:UO_megabyte">
megabyte: An information unit which is equal to 1000 kB.
</member>
        <member name="F:UO_kilobyte">
kilobyte: An information unit which is equal to 1000 bytes.
</member>
        <member name="F:UO_byte">
byte: An information unit which is equal to 8 bits.
</member>
        <member name="F:UO_bit">
bit: An information unit which refers to a digit in the binary numeral system, which consists of base 2 digits (ie there are only 2 possible values: 0 or 1).
</member>
        <member name="F:UO_information_unit">
information unit: A unit which is a standard measure of the amount of information.
</member>
        <member name="F:UO_kilovolt_hour">
kilovolt-hour: A magnetic flux unit which is equal to one thousand volt-hours.
</member>
        <member name="F:UO_volt_hour">
volt-hour: A magnetic flux unit which is equal to 3600 Wb.
</member>
        <member name="F:UO_tesla">
tesla: A magnetic flux density unit which is equal to one weber per square meter.
</member>
        <member name="F:UO_magnetic_flux_density">
magnetic flux density: A derived unit which is a standard measure of the strength of a magnetic field.
</member>
        <member name="F:UO_weber">
weber: A magnetic flux unit which is equal to the amount of flux that when linked with a single turn of wire for an interval of one second will induce an electromotive force of one volt.
</member>
        <member name="F:UO_magnetic_flux_unit">
magnetic flux unit: A derived unit which is a standard measure of quantity of magnetism, taking account of the strength and the extent of a magnetic field.
</member>
        <member name="F:UO_kilowatt_hour">
kilowatt-hour: An energy unit which is equal to 1,000 watt-hours.
</member>
        <member name="F:UO_watt_hour">
watt-hour: An energy unit which is equal to the amount of electrical energy equivalent to a one-watt load drawing power for one hour.
</member>
        <member name="F:UO_kilodalton">
kilodalton: A mass unit which is equal to one thousand daltons.
</member>
        <member name="F:UO_dalton">
dalton: An independently to the base SI units defined mass unit which is equal to one twelfth of the mass of an unbound atom of the carbon-12 nuclide, at rest and in its ground state.
</member>
        <member name="F:UO_coulomb">
coulomb: An electrical charge unit which is equal to the amount of charge transferred by a current of 1 ampere in 1 second.
</member>
        <member name="F:UO_electric_charge">
electric charge: A derived unit which is a standard measure of the quantity of unbalanced electricity in a body (either positive or negative) and construed as an excess or deficiency of electrons.
</member>
        <member name="F:UO_volt">
volt: An electric potential difference unit which is equal to the work per unit charge. One volt is the potential difference required to move one coulomb of charge between two points in a circuit while using one joule of energy.
</member>
        <member name="F:UO_electric_potential_difference">
electric potential difference: A derived unit which is a standard measure of the work done per unit charge as a charge is moved between two points in an electric field.
</member>
        <member name="F:UO_disintegrations_per_second">
disintegrations per second: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second.
</member>
        <member name="F:UO_plaque_forming_unit_per_milliliter">
plaque forming unit per milliliter: A concentration unit which a measure of plague forming units in one milliliter.
</member>
        <member name="F:UO_plaque_forming_unit_per_volume">
plaque forming unit per volume: A concentration unit which a measure of plague forming units in a given volume.
</member>
        <member name="F:UO_colony_forming_unit_per_milliliter">
colony forming unit per milliliter: A colony forming unit which a measure of viable bacterial numbers in one milliliter.
</member>
        <member name="F:UO_colony_forming_unit_per_volume">
colony forming unit per volume: A concentration unit which a measure of viable bacterial numbers in a given volume.
</member>
        <member name="F:UO_plaque_forming_unit">
plaque forming unit: A dimensionless count unit which a measure of plague forming units in a given volume.
</member>
        <member name="F:UO_colony_forming_unit">
colony forming unit: A dimensionless count unit which a measure of viable bacterial numbers.
</member>
        <member name="F:UO_deciliter">
deciliter: A volume unit which is equal to one tenth of a liter or 10^[-1] L.
</member>
        <member name="F:UO_gram_per_deciliter">
gram per deciliter: A mass density unit which is equal to mass of an object in grams divided by the volume in deciliters.
</member>
        <member name="F:UO_milliliter_per_liter">
milliliter per liter: A volume per unit volume unit which is equal to one millionth of a liter of solute in one liter of solution.
</member>
        <member name="F:UO_milliliter_per_cubic_meter">
milliliter per cubic meter: A volume per unit volume unit which is equal to one millionth of a liter of solute in one cubic meter of solution.
</member>
        <member name="F:UO_volume_per_unit_volume">
volume per unit volume: A dimensionless concentration unit which denotes the given volume of the solute in the total volume of the resulting solution.
</member>
        <member name="F:UO_katal_per_liter">
katal per liter: A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one thousandth of a cubic meter.
</member>
        <member name="F:UO_katal_per_cubic_meter">
katal per cubic meter: A catalytic (activity) concentration unit which is equal to 1 katal activity of a catalyst in a given volume of one cubic meter.
</member>
        <member name="F:UO_catalytic__activity__concentration_unit">
catalytic (activity) concentration unit: A concentration unit which is a standard measure of the amount of the action of a catalyst in a given volume.
</member>
        <member name="F:UO_cells_per_milliliter">
cells per milliliter: A unit of cell concentration which is equal to one cell in a volume of 1 milliliter.
</member>
        <member name="F:UO_cell_concentration_unit">
cell concentration unit: A concentration unit which denotes the average cell number in a given volume.
</member>
        <member name="F:UO_microliter_per_kilogram">
microliter per kilogram: A specific volume unit which is equal to one millionth of a liter per kilogram or 10^[-6] l/kg.
</member>
        <member name="F:UO_milliliter_per_kilogram">
milliliter per kilogram: A specific volume unit which is equal to a thousandth of a liter per kilogram or 10^[-3] l/kg.
</member>
        <member name="F:UO_liter_per_kilogram">
liter per kilogram: A specific volume unit which is equal to one liter volume occupied by one kilogram of a particular substance.
</member>
        <member name="F:UO_pH">
pH: A dimensionless concentration notation which denotes the acidity of a solution in terms of activity of hydrogen ions (H+).
</member>
        <member name="F:UO_degree_fahrenheit">
degree fahrenheit: A temperature derived unit which is equal to 5/9ths of a kelvin. Negative 40 degrees Fahrenheit is equal to negative 40 degrees Celsius.
</member>
        <member name="F:UO_confluence_percentage">
confluence percentage: A dimensionless percent unit which denotes the density of an attached or monolayer culture (e.g., cell culture).
</member>
        <member name="F:UO_purity_percentage">
purity percentage: A dimensionless percent unit which denotes the homogeneity of a biomaterial.
</member>
        <member name="F:UO_molecule_count">
molecule count: A dimensionless count unit which denotes the number of molecules.
</member>
        <member name="F:UO_fraction">
fraction: A dimensionless ratio unit which relates the part (the numerator) to the whole (the denominator).
</member>
        <member name="F:UO_ratio">
ratio: A dimensionless unit which denotes an amount or magnitude of one quantity relative to another.
</member>
        <member name="F:UO_count_unit">
count unit: A dimensionless unit which denotes a simple count of things.
</member>
        <member name="F:UO_pi">
pi: A dimensionless unit which denoted an irrational real number, approximately equal to 3.14159 which is the ratio of a circle's circumference to its diameter in Euclidean geometry.
</member>
        <member name="F:UO_percent">
percent: A dimensionless ratio unit which denotes numbers as fractions of 100.
</member>
        <member name="F:UO_dimensionless_unit">
dimensionless unit: A derived unit which is a standard measure of physical quantity consisting of only a numerical number without any units.
</member>
        <member name="F:UO_degree">
degree: A plane angle unit which is equal to 1/360 of a full rotation or 1.7453310^[-2] rad.
</member>
        <member name="F:UO_kilogram_per_meter">
kilogram per meter: An area density unit which is equal to the mass of an object in kilograms divided by one meter.
</member>
        <member name="F:UO_linear_density_unit">
linear density unit: A density unit which is a standard measure of the mass exerting an influence on a one-dimensional object.
</member>
        <member name="F:UO_density_unit">
density unit: A derived unit which is a standard measure of the influence exerted by some mass.
</member>
        <member name="F:UO_enzyme_unit">
enzyme unit: A catalytic unit activity which is equal to the amount of the enzyme that catalyzes the conversion of 1 micro mole of substrate per minute.
</member>
        <member name="F:UO_mass_per_unit_volume">
mass per unit volume: A concentration unit which is a standard measure of the mass of a substance in a given volume (density).
</member>
        <member name="F:UO_unit_per_liter">
unit per liter: A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one liter.
</member>
        <member name="F:UO_unit_per_milliliter">
unit per milliliter: A unit per milliliter unit which is equal to one unit of an agreed arbitrary amount per one milliliter.
</member>
        <member name="F:UO_unit_per_volume_unit">
unit per volume unit: A derived concentration unit which is a standard measure of the number of units, as an agreed arbitrary amount, of a given substance per a specific volume of solution.
</member>
        <member name="F:UO_milligram_per_milliliter">
milligram per milliliter: A mass unit density which is equal to mass of an object in milligrams divided by the volume in milliliters.
</member>
        <member name="F:UO_gram_per_liter">
gram per liter: A mass unit density which is equal to mass of an object in grams divided by the volume in liters.
</member>
        <member name="F:UO_kilogram_per_liter">
kilogram per liter: A mass unit density which is equal to mass of an object in kilograms divided by the volume in liters.
</member>
        <member name="F:UO_gram_per_milliliter">
gram per milliliter: A mass unit density which is equal to mass of an object in grams divided by the volume in milliliter.
</member>
        <member name="F:UO_parts_per_quadrillion">
parts per quadrillion: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^[15].
</member>
        <member name="F:UO_parts_per_trillion">
parts per trillion: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^[12].
</member>
        <member name="F:UO_parts_per_billion">
parts per billion: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000,000 regardless of the units of measure as long as they are the same or 1 part in 10^[9].
</member>
        <member name="F:UO_parts_per_million">
parts per million: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1,000,000 regardless of the units of measure used as long as they are the same or 1 part in 10^[6].
</member>
        <member name="F:UO_parts_per_thousand">
parts per thousand: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 1000 regardless of the units of measure as long as they are the same.
</member>
        <member name="F:UO_parts_per_hundred">
parts per hundred: A dimensionless concentration notation which denotes the amount of a given substance in a total amount of 100 regardless of the units of measure as long as they are the same.
</member>
        <member name="F:UO_parts_per_notation">
parts per notation: A dimensionless concentration notation which describes the amount of one substance in another. It is the ratio of the amount of the substance of interest to the amount of that substance plus the amount of the substance.
</member>
        <member name="F:UO_volume_percentage">
volume percentage: A dimensionless concentration unit which denotes the volume of the solute in mL per 100 mL of the resulting solution.
</member>
        <member name="F:UO_mass_volume_percentage">
mass volume percentage: A dimensionless concentration unit which denotes the mass of the substance in a mixture as a percentage of the volume of the entire mixture.
</member>
        <member name="F:UO_mass_percentage">
mass percentage: A dimensionless concentration unit which denotes the mass of a substance in a mixture as a percentage of the mass of the entire mixture.
</member>
        <member name="F:UO_watt_per_steradian">
watt per steradian: A radiant intensity unit which is equal to one kilogram meter squared per second cubed per steradian.
</member>
        <member name="F:UO_radiance_unit">
radiance unit: A derived unit which is a standard measure of the power of electromagnetic radiation through space or through a material medium in the form of electromagnetic waves.
</member>
        <member name="F:UO_microeinstein_per_square_meter_per_second">
microeinstein per square meter per second: An irradiance unit which is equal to one microeinstein per square meter per second or 10^[-6] microeinstein/sm^[2].
</member>
        <member name="F:UO_radiant_intensity_unit">
radiant intensity unit: A derived unit which is a standard measure of the intensity of electromagnetic radiation.
</member>
        <member name="F:UO_watt_per_steradian_per_square_meter">
watt per steradian per square meter: A radiance unit which is equal to one watt of radiant power incident per steradian solid angle per one square meter projected area of the source, as viewed from the given direction.
</member>
        <member name="F:UO_light_unit">
light unit: A derived unit which is a standard measure of the intensity of light.
</member>
        <member name="F:UO_einstein_per_square_meter_per_second">
einstein per square meter per second: An irradiance unit which is equal to one einstein per square meter per second. One einstein is one mole of photons, regardless of their frequency. Therefore, the number of photons in an einstein is Avogadro's number.
</member>
        <member name="F:UO_watt_per_square_meter">
watt per square meter: An irradiance unit which is equal to 1 watt of radiant power incident per one square meter surface area.
</member>
        <member name="F:UO_irradiance_unit">
irradiance unit: A derived unit which is a standard measure of the power of electromagnetic radiation at a surface, per unit area.
</member>
        <member name="F:UO_foot_candle">
foot candle: An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 foot^[2]. One footcandle is equal to 10.76 lux.
</member>
        <member name="F:UO_half_life">
half life: A time unit which represents the period over which the activity or concentration of a specified chemical or element falls to half its original activity or concentration.
</member>
        <member name="F:UO_century">
century: A time unit which is equal to 100 years.
</member>
        <member name="F:UO_nanosecond">
nanosecond: A time unit which is equal to one thousandth of one millionth of a second or 10^[-9] s.
</member>
        <member name="F:UO_time_derived_unit">
time derived unit: A derived unit which is a standard measure of the dimension in which events occur in sequence.
</member>
        <member name="F:UO_counts_per_minute">
counts per minute: An activity (of a radionuclide) unit which is equal to the number of light emissions produced by ionizing radiation in one minute.
</member>
        <member name="F:UO_disintegrations_per_minute">
disintegrations per minute: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per minute or there is one atom disintegration per minute.
</member>
        <member name="F:UO_microcurie">
microcurie: An activity (of a radionuclide) unit which is equal to one millionth of a curie or 10^[-6] Ci.
</member>
        <member name="F:UO_millicurie">
millicurie: An activity (of a radionuclide) unit which is equal to one thousandth of a curie or 10^[-3] Ci.
</member>
        <member name="F:UO_nanosievert">
nanosievert: A dose equivalent unit which is equal to one thousandth of a millionth of a sievert or 10^[-9] Sv.
</member>
        <member name="F:UO_nanogray">
nanogray: An absorbed dose unit which is equal to one thousandth of a millionth of a gray or 10^[-9] Gy.
</member>
        <member name="F:UO_milligray">
milligray: An absorbed dose unit which is equal to one thousandth of a gray or 10^[-3] Gy.
</member>
        <member name="F:UO_microgray">
microgray: An absorbed dose unit which is equal to one millionth of a gray or 10^[-6] Gy.
</member>
        <member name="F:UO_Roentgen_equivalent_man">
Roentgen equivalent man: A dose equivalent unit which when multiplied by hundred is equal to one sievert or 1 Sv. 1 Sv is equal to 100 rem.
</member>
        <member name="F:UO_microsievert">
microsievert: A dose equivalent unit which is equal to one millionth of a sievert or 10^[-6] Sv.
</member>
        <member name="F:UO_millisievert">
millisievert: A dose equivalent unit which is equal to one thousandth of a sievert or 10^[-3] Sv.
</member>
        <member name="F:UO_sievert">
sievert: A dose equivalent unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter.
</member>
        <member name="F:UO_roentgen">
roentgen: An exposure unit which is equal to the amount of radiation required to liberate positive and negative charges of one electrostatic unit of charge in 1 cm^[3] of air at standard temperature and pressure (STP). This corresponds to the generation of approximately 2.0810^[9] ion pairs.
</member>
        <member name="F:UO_rad">
rad: An absorbed dose unit which is equal to 0.01 gray (Gy).
</member>
        <member name="F:UO_gray">
gray: An absorbed dose unit which is equal to the absorption of one joule of radiation energy by one kilogram of matter.
</member>
        <member name="F:UO_curie">
curie: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which there are 3.7 x 10^[10] atom disintegration per second (dps).
</member>
        <member name="F:UO_becquerel">
becquerel: An activity (of a radionuclide) unit which is equal to the activity of a quantity of radioactive material in which one nucleus decays per second or there is one atom disintegration per second (dps).
</member>
        <member name="F:UO_exposure_unit">
exposure unit: A derived unit which is a standard measure of the quantity that expresses the ability of radiation to ionize air and thereby create electric charges which can be collected and measured.
</member>
        <member name="F:UO_dose_equivalent_unit">
dose equivalent unit: A derived unit which is a standard measure of the expression of dose in terms of its biological effect.
</member>
        <member name="F:UO_absorbed_dose_unit">
absorbed dose unit: A derived unit which is a standard measure of the energy imparted by ionizing radiation to unit mass of matter such as tissue.
</member>
        <member name="F:UO_activity__of_a_radionuclide__unit">
activity (of a radionuclide) unit: A derived unit which is a standard measure of the transformation (disintegration) rate of a radioactive substance.
</member>
        <member name="F:UO_radiation_unit">
radiation unit: A derived unit which is a standard measure of the amount of radiation emitted by a given radiation source as well as the amount of radiation absorbed or deposited in a specific material by a radiation source.
</member>
        <member name="F:UO_temperature_derived_unit">
temperature derived unit: A derived unit which represents a standard measurement of temperature in a particular temperature scale.
</member>
        <member name="F:UO_steradian">
steradian: A solid angle unit which is equal to the solid angle subtended at the center of a sphere by an area on the surface of the sphere that is equal to the radius squared.
</member>
        <member name="F:UO_solid_angle_unit">
solid angle unit: A derived unit which is a standard measure of the angle formed by three or more planes intersecting at a common point.
</member>
        <member name="F:UO_radian">
radian: A plane angle unit which is equal to the angle subtended at the center of a circle by an arc equal in length to the radius of the circle, approximately 57 degrees 17 minutes and 44.6 seconds.
</member>
        <member name="F:UO_plane_angle_unit">
plane angle unit: A derived unit which is a standard measure of the angle formed by two straight lines in the same plane.
</member>
        <member name="F:UO_angle_unit">
angle unit: A derived unit which is a standard measure of the figure or space formed by the junction of two lines or planes.
</member>
        <member name="F:UO_katal">
katal: A catalytic unit activity which is equal to the activity of a catalyst in moles per second, such as the amount of an enzyme needed to transform one mole of substrate per second.
</member>
        <member name="F:UO_catalytic_activity_unit">
catalytic activity unit: A derived unit which is a standard measure of the amount of the action of a catalyst.
</member>
        <member name="F:UO_lumen">
lumen: A luminous flux unit which is equal to the luminous flux emitted into 1 steradian by a point source of 1 candela.
</member>
        <member name="F:UO_luminous_flux_unit">
luminous flux unit: A derived unit which is a standard measure of the flow of radiant energy.
</member>
        <member name="F:UO_lux">
lux: An illuminance unit which is equal to the illuminance produced by 1 lumen evenly spread over an area 1 m^[2].
</member>
        <member name="F:UO_illuminance_unit">
illuminance unit: A derived unit which is a standard measure of the luminous flux incident on a unit area.
</member>
        <member name="F:UO_watt">
watt: A power unit which is equal to the power used when work is done at the rate of 1 joule per second.
</member>
        <member name="F:UO_power_unit">
power unit: A derived unit which is a standard measure power or the rate of doing work.
</member>
        <member name="F:UO_joule">
joule: An energy unit which is equal to the energy required when a force of 1 newton moves an object 1 meter in the direction of the force.
</member>
        <member name="F:UO_energy_unit">
energy unit: A derived unit which is a standard measure of the work done by a certain force (gravitational, electric, magnetic, force of inertia, etc).
</member>
        <member name="F:UO_pascal">
pascal: A pressure unit which is equal to the pressure or stress on a surface caused by a force of 1 newton spread over a surface of 1 m^[2].
</member>
        <member name="F:UO_pressure_unit">
pressure unit: A derived unit which is a standard measure of the force applied to a given area.
</member>
        <member name="F:UO_newton">
newton: A force unit which is equal to the force required to cause an acceleration of 1m/s2 of a mass of 1 Kg in the direction of the force.
</member>
        <member name="F:UO_force_unit">
force unit: A derived unit which is a standard measure of the force is applied when a mass is accelerated.
</member>
        <member name="F:UO_hertz">
hertz: A frequency unit which is equal to 1 complete cycle of a recurring phenomenon in 1 second.
</member>
        <member name="F:UO_frequency_unit">
frequency unit: A derived unit which is a standard measure of the number of repetitive actions in a particular time.
</member>
        <member name="F:UO_femtoliter">
femtoliter: A volume unit which is equal to 10^[-15] L.
</member>
        <member name="F:UO_picoliter">
picoliter: A volume unit which is equal to 10^[-12] L.
</member>
        <member name="F:UO_nanoliter">
nanoliter: A volume unit which is equal to one thousandth of one millionth of a liter or 10^[-9] L.
</member>
        <member name="F:UO_microliter">
microliter: A volume unit which is equal to one millionth of a liter or 10^[-6] L.
</member>
        <member name="F:UO_cubic_decimeter">
cubic decimeter: A volume unit which is equal to one thousand of a cubic meter or 10^[-3] m^[3], or to 1 L.
</member>
        <member name="F:UO_liter">
liter: A volume unit which is equal to one thousandth of a cubic meter or 10^[-3] m^[3], or to 1 decimeter.
</member>
        <member name="F:UO_milliliter">
milliliter: A volume unit which is equal to one thousandth of a liter or 10^[-3] L, or to 1 cubic centimeter.
</member>
        <member name="F:UO_cubic_centimeter">
cubic centimeter: A volume unit which is equal to one millionth of a cubic meter or 10^[-9] m^[3], or to 1 ml.
</member>
        <member name="F:UO_cubic_meter">
cubic meter: A volume unit which is equal to the volume of a cube with edges one meter in length. One cubic meter equals to 1000 liters.
</member>
        <member name="F:UO_volume_unit">
volume unit: A derived unit which is a standard measure of the amount of space occupied by any substance, whether solid, liquid, or gas.
</member>
        <member name="F:UO_meter_per_second">
meter per second: A speed/velocity unit which is equal to the speed of an object traveling 1 meter distance in one second.
</member>
        <member name="F:UO_cubic_meter_per_kilogram">
cubic meter per kilogram: A specific volume unit which is equal to one cubic meter volume occupied by one kilogram of a particular substance.
</member>
        <member name="F:UO_one_turn_per_second">
one turn per second: A rotational frequency unit which is equal to 1 complete turn in a period of time that equals to 1 second.
</member>
        <member name="F:UO_kilogram_meter_per_second">
kilogram meter per second: A momentum unit which is equal to the momentum of a one kilogram mass object with a speed of one meter per second.
</member>
        <member name="F:UO_cubic_centimeter_per_mole">
cubic centimeter per mole: A molar volume unit which is equal to 1 cubic centimeter occupied by one mole of a substance in the form of a solid, liquid, or gas.
</member>
        <member name="F:UO_cubic_meter_per_mole">
cubic meter per mole: A molar volume unit which is equal to 1 cubic meter occupied by one mole of a substance in the form of a solid, liquid, or gas.
</member>
        <member name="F:UO_gram_per_mole">
gram per mole: A molar mass unit which is equal to one gram of mass of one mole of chemical element or chemical compound.
</member>
        <member name="F:UO_kilogram_per_mole">
kilogram per mole: A molar mass unit which is equal to one kilogram of mass of one mole of chemical element or chemical compound.
</member>
        <member name="F:UO_kilogram_per_square_meter">
kilogram per square meter: An area density unit which is equal to the mass of an object in kilograms divided by the surface area in meters squared.
</member>
        <member name="F:UO_candela_per_square_meter">
candela per square meter: A luminance unit which is equal to a luminous intensity of one candela radiating from a surface whose area is one square meter.
</member>
        <member name="F:UO_gram_per_cubic_centimeter">
gram per cubic centimeter: A mass unit density which is equal to mass of an object in grams divided by the volume in cubic centimeters.
</member>
        <member name="F:UO_kilogram_per_cubic_meter">
kilogram per cubic meter: A mass unit density which is equal to mass of an object in kilograms divided by the volume in cubic meters.
</member>
        <member name="F:UO_square_millimeter">
square millimeter: An area unit which is equal to one millionth of a square meter or 10^[-6] m^[2].
</member>
        <member name="F:UO_square_centimeter">
square centimeter: An area unit which is equal to one thousand of square meter or 10^[-3] m^[2].
</member>
        <member name="F:UO_square_meter">
square meter: An area unit which is equal to an area enclosed by a square with sides each 1 meter long.
</member>
        <member name="F:UO_radian_per_second">
radian per second: An angular unit velocity which is equal to about 9.54930 rpm (revolutions per minute).
</member>
        <member name="F:UO_radian_per_second_per_second">
radian per second per second: An angular unit acceleration which is equal to the angular acceleration of an object changing its angular velocity by 1rad/s over a time period that equals one second.
</member>
        <member name="F:UO_meter_per_second_per_second">
meter per second per second: An acceleration unit which is equal to the acceleration an object changing its velocity by 1meter/s over a time period that equals one second.
</member>
        <member name="F:UO_mole_fraction">
mole fraction: A concentration unit which denotes the number of moles of solute as a proportion of the total number of moles in a solution.
</member>
        <member name="F:UO_normal">
normal: A unit of concentration which is one gram equivalent of a solute per liter of solution. A gram equivalent weight or equivalent is a measure of the reactive capacity of a given molecule.
</member>
        <member name="F:UO_unit_of_normality">
unit of normality: A unit of concentration which highlights the chemical nature of salts.
</member>
        <member name="F:UO_femtomolar">
femtomolar: A unit of molarity which is equal to 10^[-15] M.
</member>
        <member name="F:UO_picomolal">
picomolal: A molality unit which is equal to 10^[-12] m.
</member>
        <member name="F:UO_nanomolal">
nanomolal: A molality unit which is equal to one thousandth of one millionth of a molal or 10^[-9] m.
</member>
        <member name="F:UO_micromolal">
micromolal: A molality unit which is equal to one millionth of a molal or 10^[-6] m.
</member>
        <member name="F:UO_millimolal">
millimolal: A molality unit which is equal to one thousandth of a molal or 10^[-3] m.
</member>
        <member name="F:UO_molal">
molal: A unit of concentration which expresses a concentration of a solution of 1 mole per kilogram of solvent (mol/kg).
</member>
        <member name="F:UO_unit_of_molality">
unit of molality: A derived concentration unit which is a standard measure of the number of moles of a given substance per kilogram of solvent.
</member>
        <member name="F:UO_picomolar">
picomolar: A unit of molarity which is equal to 10^[-12] M.
</member>
        <member name="F:UO_nanomolar">
nanomolar: A unit of molarity which is equal to one thousandth of one millionth of a molar or 10^[-9] M.
</member>
        <member name="F:UO_micromolar">
micromolar: A unit of molarity which is equal to one millionth of a molar or 10^[-6] M.
</member>
        <member name="F:UO_millimolar">
millimolar: A unit of molarity which is equal to one thousandth of a molar or 10^[-3] M.
</member>
        <member name="F:UO_molar">
molar: A unit of concentration which expresses a concentration of 1 mole of solute per liter of solution (mol/L).
</member>
        <member name="F:UO_unit_of_molarity">
unit of molarity: A derived concentration unit which is a standard measure of the number of moles of a given substance per liter of solution.
</member>
        <member name="F:UO_speed_velocity_unit">
speed/velocity unit: A derived unit which is a standard measure of the rate of movement. Speed is measured in the same physical units of measurement as velocity, but does not contain the element of direction that velocity has. Speed is thus the magnitude component of velocity.
</member>
        <member name="F:UO_specific_volume_unit">
specific volume unit: A derived unit which is a standard measure of the volume of a given mass of substance (the reciprocal of density).
</member>
        <member name="F:UO_rotational_frequency_unit">
rotational frequency unit: A derived unit which is a standard measure of the number of rotations in a given time.
</member>
        <member name="F:UO_momentum_unit">
momentum unit: A derived unit which is a standard measure of the quantity of motion measured by the product of mass and velocity.
</member>
        <member name="F:UO_molar_volume_unit">
molar volume unit: A derived unit which is a standard measure of the volume of a homogeneous substance containing 6.02 x 1023 atoms or molecules.
</member>
        <member name="F:UO_molar_mass_unit">
molar mass unit: A derived unit which is a standard measure of the mass of a homogeneous substance containing 6.02 x 1023 atoms or molecules.
</member>
        <member name="F:UO_area_density_unit">
area density unit: A density unit which is a standard measure of the mass exerting an influence on a given area.
</member>
        <member name="F:UO_luminance_unit">
luminance unit: A derived unit which is a standard measure of the luminous intensity impinging on a given area.
</member>
        <member name="F:UO_mass_density_unit">
mass density unit: A density unit which is a standard measure of the mass of a substance in a given volume.
</member>
        <member name="F:UO_concentration_unit">
concentration unit: A derived unit which represents a standard measurement of how much of a given substance there is mixed with another substance.
</member>
        <member name="F:UO_angular_acceleration_unit">
angular acceleration unit: A derived unit which is a standard measure of the rate of change of angular velocity.
</member>
        <member name="F:UO_angular_velocity_unit">
angular velocity unit: A derived unit which is a standard measure of the rate of angular movement about an axis; the angle rotated in a given time.
</member>
        <member name="F:UO_acceleration_unit">
acceleration unit: A derived unit which is a standard measure of the rate of change of velocity in either speed or direction.
</member>
        <member name="F:UO_area_unit">
area unit: A derived unit which is a standard measure of the amount of a 2-dimensional flat surface.
</member>
        <member name="F:UO_derived_unit">
derived unit: A unit which is derived from base units.
</member>
        <member name="F:UO_base_unit">
base unit: A unit which is one of a particular measure to which all measures of that type can be related.
</member>
        <member name="F:UO_attomole">
attomole: A substance unit equal to 10^[-18] mol.
</member>
        <member name="F:UO_femtomole">
femtomole: A substance unit equal to 10^[-15] mol.
</member>
        <member name="F:UO_picomole">
picomole: A substance unit equal to 10^[-12] mol.
</member>
        <member name="F:UO_nanomole">
nanomole: A substance unit equal to one thousandth of one millionth of a mole or 10^[-9] mol.
</member>
        <member name="F:UO_millimole">
millimole: A substance unit equal to a thousandth of a mol or 10^[-3] mol.
</member>
        <member name="F:UO_micromole">
micromole: A substance unit equal to a millionth of a mol or 10^[-6] mol.
</member>
        <member name="F:UO_microampere">
microampere: An electric current unit current which is equal to one millionth of an ampere or 10^[-6] A.
</member>
        <member name="F:UO_milliampere">
milliampere: An electric current unit current which is equal to one thousandth of an ampere or 10^[-3] A.
</member>
        <member name="F:UO_year">
year: A time unit which is equal to 12 months which is science is taken to be equal to 365.25 days.
</member>
        <member name="F:UO_month">
month: A time unit which is approximately equal to the length of time of one of cycle of the moon's phases which is science is taken to be equal to 30 days.
</member>
        <member name="F:UO_week">
week: A time unit which is equal to 7 days.
</member>
        <member name="F:UO_day">
day: A time unit which is equal to 24 hours.
</member>
        <member name="F:UO_hour">
hour: A time unit which is equal to 3600 seconds or 60 minutes.
</member>
        <member name="F:UO_minute">
minute: A time unit which is equal to 60 seconds.
</member>
        <member name="F:UO_picosecond">
picosecond: A time unit which is equal to 10^[-12] s.
</member>
        <member name="F:UO_microsecond">
microsecond: A time unit which is equal to one millionth of a second or 10^[-6] s.
</member>
        <member name="F:UO_millisecond">
millisecond: A time unit which is equal to one thousandth of a second or 10^[-3] s.
</member>
        <member name="F:UO_degree_celsius">
degree celsius: A temperature derived unit which is equal to one Kelvin degree. However, they have their zeros at different points. The Centigrade scale has its zero at 273.15 K.
</member>
        <member name="F:UO_femtogram">
femtogram: A mass unit which is equal to 10^[-15] g.
</member>
        <member name="F:UO_picogram">
picogram: A mass unit which is equal to 10^[-12] g.
</member>
        <member name="F:UO_nanogram">
nanogram: A mass unit which is equal to one thousandth of one millionth of a gram or 10^[-9] g.
</member>
        <member name="F:UO_microgram">
microgram: A mass unit which is equal to one millionth of a gram or 10^[-6] g.
</member>
        <member name="F:UO_milligram">
milligram: A mass unit which is equal to one thousandth of a gram or 10^[-3] g.
</member>
        <member name="F:UO_gram">
gram: A mass unit which is equal to one thousandth of a kilogram or 10^[-3] kg.
</member>
        <member name="F:UO_picometer">
picometer: A length unit which is equal to 10^[-12] m.
</member>
        <member name="F:UO_angstrom">
angstrom: A length unit which is equal to 10 [-10] m.
</member>
        <member name="F:UO_nanometer">
nanometer: A length unit which is equal to one thousandth of one millionth of a meter or 10^[-9] m.
</member>
        <member name="F:UO_micrometer">
micrometer: A length unit which is equal to one millionth of a meter or 10^[-6] m.
</member>
        <member name="F:UO_millimeter">
millimeter: A length unit which is equal to one thousandth of a meter or 10^[-3] m.
</member>
        <member name="F:UO_centimeter">
centimeter: A length unit which is equal to one hundredth of a meter or 10^[-2] m.
</member>
        <member name="F:UO_candela">
candela: A luminous intensity unit which equal to the luminous intensity, in a given direction, of a source that emits monochromatic radiation of frequency 540 x 1012 hertz and that has a radiant intensity in that direction of 1/683 watt per steradian.
</member>
        <member name="F:UO_mole">
mole: A substance unit which is equal to the amount of substance of a molecular system which contains as many elementary entities as there are atoms in 0.012 kilogram of carbon 12.
</member>
        <member name="F:UO_kelvin">
kelvin: A thermodynamic temperature unit which is equal to the fraction 1/273.16 of the thermodynamic temperature of the triple point of water.
</member>
        <member name="F:UO_ampere">
ampere: An electric current unit which is equal to the constant current which, if maintained in two straight parallel conductors of infinite length, of negligible circular cross-section, and placed 1 m apart in vacuum, would produce between these conductors a force equal to 2 x 10^[-7] newton per meter of length.
</member>
        <member name="F:UO_second">
second: A time unit which is equal to the duration of 9 192 631 770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the caesium 133 atom.
</member>
        <member name="F:UO_kilogram">
kilogram: A mass unit which is equal to the mass of the International Prototype Kilogram kept by the BIPM at Svres, France.
</member>
        <member name="F:UO_meter">
meter: A length unit which is equal to the length of the path traveled by light in vacuum during a time interval of 1/299 792 458 of a second.
</member>
        <member name="F:UO_luminous_intensity_unit">
luminous intensity unit: A base unit which is a standard measure of the wavelength-weighted power emitted by a light source in a particular direction.
</member>
        <member name="F:UO_substance_unit">
substance unit: A base unit which is a standardized quantity of an element or compound with uniform composition.
</member>
        <member name="F:UO_temperature_unit">
temperature unit: A base unit which is a standard measure of the average kinetic energy of the particles in a sample of matter.
</member>
        <member name="F:UO_electric_current_unit">
electric current unit: A base unit which is a standard measure of the flow of electric charge.
</member>
        <member name="F:UO_time_unit">
time unit: A base unit which is a standard measure of the dimension in which events occur in sequence.
</member>
        <member name="F:UO_mass_unit">
mass unit: A base unit which is a standard measure of the amount of matter/energy of a physical object.
</member>
        <member name="F:UO_length_unit">
length unit: A base unit which is a standard measure of the distance between two points.
</member>
        <member name="F:UO_unit">
unit: A unit of measurement is a standardized quantity of a physical quality.
</member>
        <member name="F:MS_ProteinScape_ProfoundProbability">
ProteinScape:ProfoundProbability: The Profound probability score stored by ProteinScape.
</member>
        <member name="F:MS_combined_pmf___ms_ms_search">
combined pmf + ms-ms search: Search that includes data from Peptide Mass Fingerprint (PMF) and MS/MS (aka Peptide Fragment Fingerprint - PFF).
</member>
        <member name="F:MS_MaxQuant">
MaxQuant: MaxQuant is a quantitative proteomics software package designed for analyzing large mass spectrometric data sets. It is specifically aimed at high resolution MS data.
</member>
        <member name="F:MS_XCMS">
XCMS: Bioconductor package XCMS for preprocessing high-throughput, untargeted analyte profiling data.
</member>
        <member name="F:MS_FAIMS_CV">
FAIMS CV (FAIMS compensation voltage): The DC potential applied to the asymmetric waveform in FAIMS that compensates for the difference between high and low field mobility of an ion.
</member>
        <member name="F:MS_FAIMS_compensation_voltage">
FAIMS compensation voltage: The DC potential applied to the asymmetric waveform in FAIMS that compensates for the difference between high and low field mobility of an ion.
</member>
        <member name="F:MS_SpectrumMill__Discriminant_Score">
SpectrumMill: Discriminant Score: Discriminant score from Agilent SpectrumMill software.
</member>
        <member name="F:MS_Scaffold__Protein_Probability">
Scaffold: Protein Probability: Scaffold protein probability score.
</member>
        <member name="F:MS_minimum_number_of_enzymatic_termini">
minimum number of enzymatic termini: Minimum number of enzymatic termini a pepide must have to be accepted.
</member>
        <member name="F:MS_Scaffold__Minimum_Peptide_Probability">
Scaffold: Minimum Peptide Probability: Minimum probability a peptide must have to be accepted for protein scoring.
</member>
        <member name="F:MS_Scaffold__Minimum_Protein_Probability">
Scaffold: Minimum Protein Probability: Minimum protein probability a protein must have to be accepted.
</member>
        <member name="F:MS_Scaffold__Minimum_Peptide_Count">
Scaffold: Minimum Peptide Count: Minimum number of peptides a protein must have to be accepted.
</member>
        <member name="F:MS_report_only_spectra_assigned_to_identified_proteins">
report only spectra assigned to identified proteins: .
</member>
        <member name="F:MS_SpectrumMill__SPI">
SpectrumMill: SPI: SpectrumMill SPI score (%).
</member>
        <member name="F:MS_SpectrumMill__Score">
SpectrumMill: Score: Spectrum mill peptide score.
</member>
        <member name="F:MS_ProteinLynx__Ladder_Score">
ProteinLynx: Ladder Score: Waters ProteinLynx Ladder score.
</member>
        <member name="F:MS_ProteinLynx__Log_Likelihood">
ProteinLynx: Log Likelihood: ProteinLynx log likelihood score.
</member>
        <member name="F:MS_IdentityE_Score">
IdentityE Score: Waters IdentityE peptide score.
</member>
        <member name="F:MS_Scaffold__Peptide_Probability">
Scaffold: Peptide Probability: Scaffold peptide probability score.
</member>
        <member name="F:MS_SpectrumMill_directories">
SpectrumMill directories: Source file for this mzIdentML was in Agilent SpectrumMill directory format.
</member>
        <member name="F:MS_ProteinLynx_XML">
ProteinLynx XML: Source file for this mzIdentML was in Waters ProteinLynx XML format.
</member>
        <member name="F:MS_IdentityE_XML">
IdentityE XML: Source file for this mzIdentML was in Waters IdentityE XML format.
</member>
        <member name="F:MS_Discoverer_MSF">
Discoverer MSF: Source file for this mzIdentML was in Thermo Scientific Discoverer MSF format.
</member>
        <member name="F:MS_Sequest_SQT">
Sequest SQT: Source file for this mzIdentML was a Sequest SQT.
</member>
        <member name="F:MS_Scaffold_nativeID_format">
Scaffold nativeID format: Scaffold native ID format.
</member>
        <member name="F:MS_Scaffold">
Scaffold: Scaffold analysis software, see www.proteomesoftware.com.
</member>
        <member name="F:MS_AB_SCIEX_TOF_TOF_T2D_file">
AB SCIEX TOF/TOF T2D file: Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument export format.
</member>
        <member name="F:MS_AB_SCIEX_TOF_TOF_T2D_nativeID_format">
AB SCIEX TOF/TOF T2D nativeID format: file=xsd:IDREF.
</member>
        <member name="F:MS_MALDI_Solutions">
MALDI Solutions: Shimadzu Biotech software for data acquisition, processing, and analysis.
</member>
        <member name="F:MS_Shimadzu_Biotech_software">
Shimadzu Biotech software: 
</member>
        <member name="F:MS_Bruker_Daltonics_apex_series">
Bruker Daltonics apex series: 
</member>
        <member name="F:MS_autoflex">
autoflex: Bruker Daltonics' autoflex: MALDI TOF.
</member>
        <member name="F:MS_autoflex_III_TOF_TOF_smartbeam">
autoflex III TOF/TOF smartbeam: Bruker Daltonics' autoflex III TOF/TOF smartbeam: MALDI TOF.
</member>
        <member name="F:MS_autoflex_II_TOF_TOF">
autoflex II TOF/TOF: Bruker Daltonics' autoflex II TOF/TOF: MALDI TOF.
</member>
        <member name="F:MS_microflex_II">
microflex II: Bruker Daltonics' microflex II: MALDI TOF.
</member>
        <member name="F:MS_solariX">
solariX: Bruker Daltonics' solariX: ESI, MALDI, Qh-FT_ICR.
</member>
        <member name="F:MS_Bruker_Daltonics_solarix_series">
Bruker Daltonics solarix series: Bruker Daltonics' solarix: ESI quadrupole ion trap, APCI, APPI, ETD, PTR.
</member>
        <member name="F:MS_Bruker_Daltonics_maXis_series">
Bruker Daltonics maXis series: 
</member>
        <member name="F:MS_amaZon_X">
amaZon X: Bruker Daltonics' amaZon X: ESI quadrupole ion trap, APCI, APPI, ETD, PTR.
</member>
        <member name="F:MS_Bruker_Daltonics_amaZon_series">
Bruker Daltonics amaZon series: 
</member>
        <member name="F:MS_ultrafleXtreme">
ultrafleXtreme: Bruker Daltonics' ultrafleXtreme: MALDI TOF.
</member>
        <member name="F:MS_microflex_LRF">
microflex LRF: Bruker Daltonics' microflex LRF: MALDI TOF.
</member>
        <member name="F:MS_amaZon_ETD">
amaZon ETD: Bruker Daltonics' amaZon ETD: ESI quadrupole ion trap, Nanospray, APCI, APPI, ETD, PTR.
</member>
        <member name="F:MS_maXis">
maXis: Bruker Daltonics' maXis: ESI Q-TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_micrOTOF_II">
micrOTOF II: Bruker Daltonics' micrOTOF II: ESI TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_UltroTOF_Q">
UltroTOF-Q: Bruker Daltonics' UltroTOF-Q: ESI Q-TOF (MALDI optional).
</member>
        <member name="F:MS_BioTOF_III">
BioTOF III: Bruker Daltonics' BioTOF III: ESI TOF
</member>
        <member name="F:MS_BioTOF">
BioTOF: Bruker Daltonics' BioTOF: ESI TOF
</member>
        <member name="F:MS_Bruker_Daltonics_micrOTOF_series">
Bruker Daltonics micrOTOF series: 
</member>
        <member name="F:MS_Bruker_Daltonics_BioTOF_series">
Bruker Daltonics BioTOF series: 
</member>
        <member name="F:MS_Bruker_Daltonics_flex_series">
Bruker Daltonics flex series: 
</member>
        <member name="F:MS_Bruker_Daltonics_esquire_series">
Bruker Daltonics esquire series: 
</member>
        <member name="F:MS_spectrum_from_database_nativeID_format_1001532">
spectrum from database nativeID format: databasekey=xsd:string
</member>
        <member name="F:MS_spectrum_from_ProteinScape_database_nativeID_format">
spectrum from ProteinScape database nativeID format: databasekey=xsd:long
</member>
        <member name="F:MS_mzML_unique_identifier">
mzML unique identifier: mzMLid=xsd:IDREF
</member>
        <member name="F:MS_spectra_data_details">
spectra data details: Child-terms contain information to map the results back to spectra.
</member>
        <member name="F:MS_Mascot_query_number">
Mascot query number: query=xsd:nonNegativeInteger
</member>
        <member name="F:MS_Proteinscape_spectra">
Proteinscape spectra: Spectra from Bruker/Protagen Proteinscape database.
</member>
        <member name="F:MS_spectrum_from_database_nativeID_format_1001526">
spectrum from database nativeID format: databasekey=xsd:Long
</member>
        <member name="F:MS_precursor_neutral_loss_">
precursor neutral loss : This term can describe a neutral loss m/z value that is lost from an ion.
</member>
        <member name="F:MS_fragment_neutral_loss">
fragment neutral loss: This term can describe a neutral loss m/z value that is lost from an ion.
</member>
        <member name="F:MS_frag__precursor_ion">
frag: precursor ion: Fragmentation information, type of product: precursor ion.
</member>
        <member name="F:MS_frag__precursor_ion___NH3">
frag: precursor ion - NH3: Fragmentation information, type of product: precursor ion without ammonia.
</member>
        <member name="F:MS_frag__precursor_ion___H2O">
frag: precursor ion - H2O: Fragmentation information, type of product: precursor ion without water.
</member>
        <member name="F:MS_frag__x_ion___NH3">
frag: x ion - NH3: Fragmentation information, type of product: x ion without ammonia.
</member>
        <member name="F:MS_frag__x_ion___H2O">
frag: x ion - H2O: Fragmentation information, type of product: x ion without water.
</member>
        <member name="F:MS_frag__z_ion___NH3">
frag: z ion - NH3: Fragmentation information, type of product: z ion without ammonia.
</member>
        <member name="F:MS_frag__z_ion___H2O">
frag: z ion - H2O: Fragmentation information, type of product: z ion without water.
</member>
        <member name="F:MS_frag__c_ion___NH3">
frag: c ion - NH3: Fragmentation information, type of product: c ion without ammonia.
</member>
        <member name="F:MS_frag__c_ion___H2O">
frag: c ion - H2O: Fragmentation information, type of product: c ion without water.
</member>
        <member name="F:MS_DB_accession_filter_string">
DB accession filter string: 
</member>
        <member name="F:MS_DB_sequence_filter_pattern">
DB sequence filter pattern: 
</member>
        <member name="F:MS_Sequence_database_filters">
Sequence database filters: Sequence database filters which actually can contains values, e.g. to limit PI value of the sequences used to search.
</member>
        <member name="F:MS_Sequence_database_filter_types">
Sequence database filter types: Filter types which are used to filter a sequence database.
</member>
        <member name="F:MS_TSQ_Vantage">
TSQ Vantage: TSQ Vantage.
</member>
        <member name="F:MS_Agilent_MassHunter_file">
Agilent MassHunter file: A data file found in an Agilent MassHunter directory which contains raw data acquired by an Agilent mass spectrometer.
</member>
        <member name="F:MS_Agilent_MassHunter_nativeID_format">
Agilent MassHunter nativeID format: scanId=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_ProteinExtractor_Score">
ProteinExtractor:Score: The score calculated by ProteinExtractor.
</member>
        <member name="F:MS_ProteinScape_SequestMetaScore">
ProteinScape:SequestMetaScore: The Sequest meta score calculated by ProteinScape from the original Sequest scores.
</member>
        <member name="F:MS_ProteinScape_IntensityCoverage">
ProteinScape:IntensityCoverage: The intensity coverage of the identified peaks in the spectrum calculated by ProteinScape.
</member>
        <member name="F:MS_ProteinScape_PFFSolverScore">
ProteinScape:PFFSolverScore: The ProteinSolver score stored by ProteinScape.
</member>
        <member name="F:MS_ProteinScape_PFFSolverExp">
ProteinScape:PFFSolverExp: The ProteinSolver exp value stored by ProteinScape.
</member>
        <member name="F:MS_Sonar_Score">
Sonar:Score: The Sonar score.
</member>
        <member name="F:MS_MSFit_Mowse_score">
MSFit:Mowse score: The MSFit Mowse score.
</member>
        <member name="F:MS_Profound_ClusterRank">
Profound:ClusterRank: The Profound cluster rank.
</member>
        <member name="F:MS_Profound_Cluster">
Profound:Cluster: The Profound cluster score.
</member>
        <member name="F:MS_Profound_z_value">
Profound:z value: The Profound z value.
</member>
        <member name="F:MS_ProteinScape_SearchEventId">
ProteinScape:SearchEventId: The SearchEventId of the SearchEvent in the ProteinScape database.
</member>
        <member name="F:MS_ProteinScape_SearchResultId">
ProteinScape:SearchResultId: The SearchResultId of this peptide as SearchResult in the ProteinScape database.
</member>
        <member name="F:MS_no_threshold">
no threshold: In case no threshold was used.
</member>
        <member name="F:MS_percolaror_PEP_">
percolaror:PEP : Posterior error probability.
</member>
        <member name="F:MS_percolator_score_">
percolator:score : percolator:score.
</member>
        <member name="F:MS_percolator_Q_value">
percolator:Q value: percolator:Q value.
</member>
        <member name="F:MS_Percolator_">
Percolator : Percolator.
</member>
        <member name="F:MS_Mascot_Integra_">
Mascot Integra : Mascot Integra.
</member>
        <member name="F:MS_Mascot_Distiller_">
Mascot Distiller : Mascot Distiller.
</member>
        <member name="F:MS_ProteinExtractor">
ProteinExtractor: An algorithm for protein determination/assembly integrated into Bruker's ProteinScape.
</member>
        <member name="F:MS_data_filtering">
data filtering: Filtering out part of the data.
</member>
        <member name="F:MS_m_z_calibration">
m/z calibration: Calibration of data point m/z positions.
</member>
        <member name="F:MS_intensity_normalization">
intensity normalization: Normalization of data point intensities.
</member>
        <member name="F:MS_AB_SCIEX_TOF_TOF_Series_Explorer_Software">
AB SCIEX TOF/TOF Series Explorer Software: AB SCIEX or Applied Biosystems software for TOF/TOF data acquisition and analysis.
</member>
        <member name="F:MS_AB_SCIEX_TOF_TOF_5800">
AB SCIEX TOF/TOF 5800: AB SCIEX or Applied Biosystems|MDS Analytical Technologies AB SCIEX TOF/TOF 5800 Analyzer.
</member>
        <member name="F:MS_AB_SCIEX_TOF_TOF_database">
AB SCIEX TOF/TOF database: Applied Biosystems/MDS Analytical Technologies TOF/TOF instrument database.
</member>
        <member name="F:MS_AB_SCIEX_TOF_TOF_nativeID_format">
AB SCIEX TOF/TOF nativeID format: jobRun=xsd:nonNegativeInteger spotLabel=xsd:string spectrum=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_null_terminated_ASCII_string">
null-terminated ASCII string: Sequence of zero or more non-zero ASCII characters terminated by a single null (0) byte.
</member>
        <member name="F:MS_Mascot_Parser">
Mascot Parser: Mascot Parser was used to analyze the spectra.
</member>
        <member name="F:MS_SpectraST">
SpectraST: SpectraST was used to analyze the spectra.
</member>
        <member name="F:MS_xtandem">
xtandem: X!Tandem was used to analyze the spectra.
</member>
        <member name="F:MS_OMSSA">
OMSSA: Open Mass Spectrometry Search Algorithm was used to analyze the spectra.
</member>
        <member name="F:MS_CRM_chromatogram_OBSOLETE">
CRM chromatogram (consecutive reaction monitoring chromatogram): Chromatogram created by creating an array of the measurements of a series of monitored reactions at each time point.
</member>
        <member name="F:MS_consecutive_reaction_monitoring_chromatogram_OBSOLETE">
consecutive reaction monitoring chromatogram: Chromatogram created by creating an array of the measurements of a series of monitored reactions at each time point.
</member>
        <member name="F:MS_SRM_chromatogram">
SRM chromatogram (selected reaction monitoring chromatogram): Chromatogram created by creating an array of the measurements of a selectively monitored reaction at each time point.
</member>
        <member name="F:MS_selected_reaction_monitoring_chromatogram">
selected reaction monitoring chromatogram: Chromatogram created by creating an array of the measurements of a selectively monitored reaction at each time point.
</member>
        <member name="F:MS_SIM_chromatogram">
SIM chromatogram (selected ion monitoring chromatogram): Chromatogram created by creating an array of the measurements of a selectively monitored ion at each time point.
</member>
        <member name="F:MS_selected_ion_monitoring_chromatogram">
selected ion monitoring chromatogram: Chromatogram created by creating an array of the measurements of a selectively monitored ion at each time point.
</member>
        <member name="F:MS_peptide_modification_details">
peptide modification details: The children of this term can be used to describe modifications.
</member>
        <member name="F:MS_taxonomy__Swiss_Prot_ID">
taxonomy: Swiss-Prot ID: This term is used if a swiss prot taxonomy id is specified, e.g. Human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.
</member>
        <member name="F:MS_taxonomy__scientific_name">
taxonomy: scientific name: This term is used if a scientific name is specified, e.g. Homo sapiens. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.
</member>
        <member name="F:MS_taxonomy__common_name">
taxonomy: common name: This term is used if a common name is specified, e.g. human. Recommend using MS:1001467 (taxonomy: NCBI TaxID) where possible.
</member>
        <member name="F:MS_taxonomy__NCBI_TaxID">
taxonomy: NCBI TaxID: This term is used if a NCBI TaxID is specified, e.g. 9606 for Homo sapiens.
</member>
        <member name="F:MS_MS2_file">
MS2 file: MS2 file.
</member>
        <member name="F:MS_DTASelect_file">
DTASelect file: 
</member>
        <member name="F:MS_Phenyx_XML_format">
Phenyx XML format: 
</member>
        <member name="F:MS_PEFF_format">
PEFF format: The sequence database was stored in the PEFF (PSI enhanced FastA file) format.
</member>
        <member name="F:MS_greylag">
greylag: greylag identification software, wee greylag.org.
</member>
        <member name="F:MS_unknown_modification">
unknown modification: This term should be given if the modification was unknown.
</member>
        <member name="F:MS_file_format">
file format: Format of data files.
</member>
        <member name="F:MS_spectrum_generation_information">
spectrum generation information: Vocabularies describing the spectrum generation information.
</member>
        <member name="F:MS_data_processing_software">
data processing software: Conversion software.
</member>
        <member name="F:MS_analysis_software">
analysis software: Analysis software.
</member>
        <member name="F:MS_acquisition_software">
acquisition software: Acquisition software.
</member>
        <member name="F:MS_quality_estimation_with_implicite_decoy_sequences">
quality estimation with implicite decoy sequences: Decoy entries are generated during the search, not explicitly stored in a database (like Mascot Decoy).
</member>
        <member name="F:MS_DB_composition_only_decoy">
DB composition only decoy: Decoy database composition: database contains only decoy entries.
</member>
        <member name="F:MS_decoy_DB_type_shuffle">
decoy DB type shuffle: Decoy type: Amino acids of protein sequences are used in a random order.
</member>
        <member name="F:MS_decoy_DB_generation_algorithm">
decoy DB generation algorithm: Name of algorithm used for decoy generation.
</member>
        <member name="F:MS_decoy_DB_details">
decoy DB details: Details of decoy generation and database structure.
</member>
        <member name="F:MS_OMSSA_e_value_threshold">
OMSSA e-value threshold: Threshold for OMSSA e-value for quality estimation.
</member>
        <member name="F:MS_pep_FDR_threshold">
pep:FDR threshold: False-discovery rate threshold for peptides.
</member>
        <member name="F:MS_prot_FDR_threshold">
prot:FDR threshold: False-discovery rate threshold for proteins.
</member>
        <member name="F:MS_ProteinExtractor_PhenyxWeighting">
ProteinExtractor:PhenyxWeighting: 
</member>
        <member name="F:MS_ProteinExtractor_PhenyxUniqueScore">
ProteinExtractor:PhenyxUniqueScore: 
</member>
        <member name="F:MS_ProteinExtractor_PhenyxPeptideScoreThreshold">
ProteinExtractor:PhenyxPeptideScoreThreshold: 
</member>
        <member name="F:MS_ProteinExtractor_UsePhenyx">
ProteinExtractor:UsePhenyx: 
</member>
        <member name="F:MS_ProteinExtractor_ProteinSolverWeighting">
ProteinExtractor:ProteinSolverWeighting: 
</member>
        <member name="F:MS_ProteinExtractor_ProteinSolverUniqueScore">
ProteinExtractor:ProteinSolverUniqueScore: 
</member>
        <member name="F:MS_ProteinExtractor_ProteinSolverPeptideScoreThreshold">
ProteinExtractor:ProteinSolverPeptideScoreThreshold: 
</member>
        <member name="F:MS_ProteinExtractor_UseProteinSolver">
ProteinExtractor:UseProteinSolver: 
</member>
        <member name="F:MS_ProteinExtractor_SequestWeighting">
ProteinExtractor:SequestWeighting: 
</member>
        <member name="F:MS_ProteinExtractor_SequestUniqueScore">
ProteinExtractor:SequestUniqueScore: 
</member>
        <member name="F:MS_ProteinExtractor_SequestPeptideScoreThreshold">
ProteinExtractor:SequestPeptideScoreThreshold: 
</member>
        <member name="F:MS_ProteinExtractor_UseSequest">
ProteinExtractor:UseSequest: 
</member>
        <member name="F:MS_ProteinExtractor_MascotWeighting">
ProteinExtractor:MascotWeighting: 
</member>
        <member name="F:MS_ProteinExtractor_MascotUseIdentityScore">
ProteinExtractor:MascotUseIdentityScore: 
</member>
        <member name="F:MS_ProteinExtractor_MascotUniqueScore">
ProteinExtractor:MascotUniqueScore: 
</member>
        <member name="F:MS_ProteinExtractor_MascotPeptideScoreThreshold">
ProteinExtractor:MascotPeptideScoreThreshold: 
</member>
        <member name="F:MS_ProteinExtractor_UseMascot">
ProteinExtractor:UseMascot: 
</member>
        <member name="F:MS_ProteinExtractor_MinNumberOfPeptides">
ProteinExtractor:MinNumberOfPeptides: 
</member>
        <member name="F:MS_ProteinExtractor_MaxProteinMass">
ProteinExtractor:MaxProteinMass: 
</member>
        <member name="F:MS_ProteinExtractor_MaxNumberOfProteins">
ProteinExtractor:MaxNumberOfProteins: 
</member>
        <member name="F:MS_ProteinExtractor_IncludeIdentified">
ProteinExtractor:IncludeIdentified: 
</member>
        <member name="F:MS_ProteinExtractor_GenerateNonRedundant">
ProteinExtractor:GenerateNonRedundant: 
</member>
        <member name="F:MS_ProteinExtractor_Methodname">
ProteinExtractor:Methodname: 
</member>
        <member name="F:MS_translation_table_description">
translation table description: A URL that describes the translation table used to translate the nucleotides to amino acids.
</member>
        <member name="F:MS_protXML_file">
protXML file: Source file for this mzIdentML was a protXML file.
</member>
        <member name="F:MS_pepXML_file">
pepXML file: Source file for this mzIdentML was a pepXML file.
</member>
        <member name="F:MS_SpectraST_delta">
SpectraST:delta: SpectraST normalised difference between dot product of top hit and runner-up.
</member>
        <member name="F:MS_SpectraST_discriminant_score_F">
SpectraST:discriminant score F: SpectraST spectrum score.
</member>
        <member name="F:MS_SpectraST_dot_bias">
SpectraST:dot_bias: SpectraST measure of how much of the dot product is dominated by a few peaks.
</member>
        <member name="F:MS_SpectraST_dot">
SpectraST:dot: SpectraST dot product of two spectra, measuring spectral similarity.
</member>
        <member name="F:MS_spectrum_title_OBSOLETE">
spectrum title: OBSOLETE: replaced by MS:1000796 (spectrum title): Holds the spectrum title from different input file formats, e.g. MGF TITLE.
</member>
        <member name="F:MS_MGF_raw_scans_OBSOLETE">
MGF raw scans: OBSOLETE: replaced by MS:1000798 (peak list raw scans): This term can hold the raw scans attribute from an MGF input file.
</member>
        <member name="F:MS_MGF_scans_OBSOLETE">
MGF scans: OBSOLETE: replaced by MS:1000797 (peak list scans): This term can hold the scans attribute from an MGF input file.
</member>
        <member name="F:MS_search_tolerance_minus_value">
search tolerance minus value: 
</member>
        <member name="F:MS_search_tolerance_plus_value">
search tolerance plus value: 
</member>
        <member name="F:MS_search_tolerance_specification">
search tolerance specification: 
</member>
        <member name="F:MS_translation_start_codons">
translation start codons: The translation start codons used to translate the nucleotides to amino acids.
</member>
        <member name="F:MS_param__z_2_ion">
param: z+2 ion: 
</member>
        <member name="F:MS_param__z_1_ion">
param: z+1 ion: 
</member>
        <member name="F:MS_param__internal_ya_ion">
param: internal ya ion: 
</member>
        <member name="F:MS_param__internal_yb_ion">
param: internal yb ion: 
</member>
        <member name="F:MS_spectrum_identification_result_details">
spectrum identification result details: This subsection describes terms which can describe details of spectrum identification results.
</member>
        <member name="F:MS_xtandem_xml_file">
xtandem xml file: Source file for this mzIdentML was an X!Tandem xml file.
</member>
        <member name="F:MS_OMSSA_xml_file">
OMSSA xml file: Source file for this mzIdentML was an OMSSA xml file.
</member>
        <member name="F:MS_OMSSA_csv_file">
OMSSA csv file: Source file for this mzIdentML was an OMSSA csv file.
</member>
        <member name="F:MS_Phenyx_Modif">
Phenyx:Modif: 
</member>
        <member name="F:MS_Phenyx_NumberOfMC">
Phenyx:NumberOfMC: 
</member>
        <member name="F:MS_Phenyx_PepPvalue">
Phenyx:PepPvalue: 
</member>
        <member name="F:MS_Phenyx_Pepzscore">
Phenyx:Pepzscore: 
</member>
        <member name="F:MS_Phenyx_User">
Phenyx:User: 
</member>
        <member name="F:MS_Phenyx_Auto">
Phenyx:Auto: 
</member>
        <member name="F:MS_Phenyx_Peptides2">
Phenyx:Peptides2: Second number of phenyx result \"#Peptides\".
</member>
        <member name="F:MS_Phenyx_Peptides1">
Phenyx:Peptides1: First number of phenyx result \"#Peptides\".
</member>
        <member name="F:MS_Phenyx_Score">
Phenyx:Score: 
</member>
        <member name="F:MS_Phenyx_ID">
Phenyx:ID: 
</member>
        <member name="F:MS_Phenyx_AC">
Phenyx:AC: 
</member>
        <member name="F:MS_Phenyx_Conflict_Resolution">
Phenyx:Conflict Resolution: 
</member>
        <member name="F:MS_Phenyx_AC_Score">
Phenyx:AC Score: 
</member>
        <member name="F:MS_Phenyx_MaxPepPvalue">
Phenyx:MaxPepPvalue: 
</member>
        <member name="F:MS_Phenyx_MinPepzscore">
Phenyx:MinPepzscore: 
</member>
        <member name="F:MS_Phenyx_MinPepLength">
Phenyx:MinPepLength: 
</member>
        <member name="F:MS_Phenyx_Turbo_Series">
Phenyx:Turbo:Series: 
</member>
        <member name="F:MS_Phenyx_Turbo_Coverage">
Phenyx:Turbo:Coverage: 
</member>
        <member name="F:MS_Phenyx_Turbo_ErrorTol">
Phenyx:Turbo:ErrorTol: 
</member>
        <member name="F:MS_Phenyx_Turbo">
Phenyx:Turbo: 
</member>
        <member name="F:MS_Phenyx_Trust_Parent_Charge">
Phenyx:Trust Parent Charge: 
</member>
        <member name="F:MS_Phenyx_Default_Parent_Charge">
Phenyx:Default Parent Charge: 
</member>
        <member name="F:MS_Phenyx_Scoring_Model">
Phenyx:Scoring Model: 
</member>
        <member name="F:MS_Phenyx_Instrument_Type">
Phenyx:Instrument Type: 
</member>
        <member name="F:MS_sequest_Sum">
sequest:Sum: 
</member>
        <member name="F:MS_sequest_TIC">
sequest:TIC: 
</member>
        <member name="F:MS_sequest_Sequences">
sequest:Sequences: 
</member>
        <member name="F:MS_mascot_identity_threshold">
mascot:identity threshold: The Mascot result 'identity threshold'.
</member>
        <member name="F:MS_mascot_homology_threshold">
mascot:homology threshold: The Mascot result 'homology threshold'.
</member>
        <member name="F:MS_text_file">
text file: Simple text file of \"m/z [intensity]\" values for a PMF (or single MS-MS) search.
</member>
        <member name="F:MS_frag__z_2_ion">
frag: z+2 ion: 
</member>
        <member name="F:MS_frag__z_1_ion">
frag: z+1 ion: 
</member>
        <member name="F:MS_frag__internal_ya_ion">
frag: internal ya ion: 
</member>
        <member name="F:MS_frag__internal_yb_ion">
frag: internal yb ion: 
</member>
        <member name="F:MS_pep_global_FDR">
pep:global FDR: Estimation of global false discovery rate of the peptides.
</member>
        <member name="F:MS_peptide_unique_to_one_protein">
peptide unique to one protein: 
</member>
        <member name="F:MS_number_of_unmatched_peaks">
number of unmatched peaks: The number of unmatched peaks.
</member>
        <member name="F:MS_alternate_mass">
alternate mass: List of masses a non-standard letter code is replaced with.
</member>
        <member name="F:MS_alternate_single_letter_codes">
alternate single letter codes: List of standard residue one letter codes which are used to replace a non-standard.
</member>
        <member name="F:MS_ambiguous_residues">
ambiguous residues: Children of this term describe abiguous residues.
</member>
        <member name="F:MS_msmsEval_quality">
msmsEval quality: This term reports the quality of the spectrum assigned by msmsEval.
</member>
        <member name="F:MS_spectrum_quality_descriptions">
spectrum quality descriptions: Description of the quality of the input spectrum.
</member>
        <member name="F:MS_spectrum_descriptions">
spectrum descriptions: Descriptions of the input spectra. TODO: really needed?
</member>
        <member name="F:MS_peptide_descriptions">
peptide descriptions: Descriptions of peptides. TODO: What does this mean?
</member>
        <member name="F:MS_mass_table_options">
mass table options: Root node for options for the mass table used.
</member>
        <member name="F:MS_NBRF_PIR">
NBRF PIR: The NBRF PIR was used as format.
</member>
        <member name="F:MS_embl_em">
embl em: EMBL entry format.
</member>
        <member name="F:MS_clustal_aln">
clustal aln: ClustalW ALN (multiple alignment) format.
</member>
        <member name="F:MS_NCBI___p_">
NCBI *.p*: The sequence database was stored in the NCBI formatdb (*.p*) format.
</member>
        <member name="F:MS_ASN_1">
ASN.1: The sequence database was storen in the ASN.1 format.
</member>
        <member name="F:MS_FASTA_format">
FASTA format: The sequence database was stored in the FASTA format.
</member>
        <member name="F:MS_database_file_formats">
database file formats: The children of this term define file formats of the sequence database used.
</member>
        <member name="F:MS_AAIndex_mass_table">
AAIndex mass table: The masses used in the mass table are taken from AAIndex.
</member>
        <member name="F:MS_mass_table_source">
mass table source: Children of this term specify the source of the mass table used.
</member>
        <member name="F:MS_AA_sequence">
AA sequence: The sequence is a amino acid sequence.
</member>
        <member name="F:MS_NA_sequence">
NA sequence: The sequence is a nucleic acid sequence.
</member>
        <member name="F:MS_database_sequence_details">
database sequence details: Details about a single database sequence.
</member>
        <member name="F:MS_xtandem_hyperscore">
xtandem:hyperscore: The X!Tandem hyperscore.
</member>
        <member name="F:MS_xtandem_expect">
xtandem:expect: The X!Tandem expectation value.
</member>
        <member name="F:MS_OMSSA_pvalue">
OMSSA:pvalue: OMSSA p-value.
</member>
        <member name="F:MS_OMSSA_evalue">
OMSSA:evalue: OMSSA E-value.
</member>
        <member name="F:MS_TODO_add_others_OBSOLETE">
TODO_add_others: 
</member>
        <member name="F:MS_mascot_ShowDecoyMatches">
mascot:ShowDecoyMatches: 
</member>
        <member name="F:MS_mascot_IncludeErrorTolerantMatches">
mascot:IncludeErrorTolerantMatches: 
</member>
        <member name="F:MS_mascot_UseUnigeneClustering">
mascot:UseUnigeneClustering: 
</member>
        <member name="F:MS_mascot_RequireBoldRed">
mascot:RequireBoldRed: 
</member>
        <member name="F:MS_mascot_ShowHomologousProteinsWithSubsetOfPeptides">
mascot:ShowHomologousProteinsWithSubsetOfPeptides: 
</member>
        <member name="F:MS_mascot_ShowHomologousProteinsWithSamePeptides">
mascot:ShowHomologousProteinsWithSamePeptides: 
</member>
        <member name="F:MS_mascot_MinMSMSThreshold">
mascot:MinMSMSThreshold: 
</member>
        <member name="F:MS_mascot_ProteinScoringMethod">
mascot:ProteinScoringMethod: 
</member>
        <member name="F:MS_mascot_MaxProteinHits">
mascot:MaxProteinHits: 
</member>
        <member name="F:MS_mascot_SigThreshold">
mascot:SigThreshold: 
</member>
        <member name="F:MS_V8_E">
V8-E: 
</member>
        <member name="F:MS_V8_DE">
V8-DE: 
</member>
        <member name="F:MS_Trypsin_P">
Trypsin/P: 
</member>
        <member name="F:MS_TrypChymo">
TrypChymo: 
</member>
        <member name="F:MS_PepsinA">
PepsinA: 
</member>
        <member name="F:MS_Lys_C_P">
Lys-C/P: 
</member>
        <member name="F:MS_Lys_C">
Lys-C: 
</member>
        <member name="F:MS_Formic_acid">
Formic_acid: 
</member>
        <member name="F:MS_CNBr">
CNBr: 
</member>
        <member name="F:MS_Chymotrypsin">
Chymotrypsin: 
</member>
        <member name="F:MS_Asp_N_ambic">
Asp-N_ambic: 
</member>
        <member name="F:MS_Asp_N">
Asp-N: 
</member>
        <member name="F:MS_Arg_C">
Arg-C: 
</member>
        <member name="F:MS_search_engine_specific_input_parameter">
search engine specific input parameter: This branch contains search engine specific input parameters (e.g. Mascot Sig Threshold).
</member>
        <member name="F:MS_protein_rank">
protein rank: The rank of the protein in a list sorted by the search engine.
</member>
        <member name="F:MS_decoy_DB_from_IPI_human">
decoy DB from IPI_human: 
</member>
        <member name="F:MS_decoy_DB_from_IPI_cow">
decoy DB from IPI_cow: 
</member>
        <member name="F:MS_decoy_DB_from_IPI_chicken">
decoy DB from IPI_chicken: 
</member>
        <member name="F:MS_decoy_DB_from_SwissProt">
decoy DB from SwissProt: 
</member>
        <member name="F:MS_decoy_DB_from_IPI_zebrafish">
decoy DB from IPI_zebrafish: 
</member>
        <member name="F:MS_decoy_DB_from_EST">
decoy DB from EST: 
</member>
        <member name="F:MS_decoy_DB_from_IPI_arabidopsis">
decoy DB from IPI_arabidopsis: 
</member>
        <member name="F:MS_decoy_DB_from_IPI_mouse">
decoy DB from IPI_mouse: 
</member>
        <member name="F:MS_decoy_DB_from_IPI_rat">
decoy DB from IPI_rat: 
</member>
        <member name="F:MS_decoy_DB_from_nr">
decoy DB from nr: 
</member>
        <member name="F:MS_database_IPI_arabidopsis">
database IPI_arabidopsis: 
</member>
        <member name="F:MS_database_IPI_cow">
database IPI_cow: 
</member>
        <member name="F:MS_database_IPI_chicken">
database IPI_chicken: 
</member>
        <member name="F:MS_database_IPI_zebrafish">
database IPI_zebrafish: 
</member>
        <member name="F:MS_database_IPI_rat">
database IPI_rat: 
</member>
        <member name="F:MS_database_IPI_mouse">
database IPI_mouse: 
</member>
        <member name="F:MS_decoy_DB_derived_from">
decoy DB derived from: The name of the database, the search database was derived from.
</member>
        <member name="F:MS_decoy_DB_accession_regexp">
decoy DB accession regexp: Specify the regular expression for decoy accession numbers.
</member>
        <member name="F:MS_ProteinScape_Gel">
ProteinScape Gel: Source data for this mzIdentML was a ProteinScape Gel.
</member>
        <member name="F:MS_ProteinScape_SearchEvent">
ProteinScape SearchEvent: Source data for this mzIdentML was a ProteinScape SearchEvent.
</member>
        <member name="F:MS_____DE__">
(?=[DE]): 
</member>
        <member name="F:MS_____BD__">
(?=[BD]): 
</member>
        <member name="F:MS_researcher">
researcher: 
</member>
        <member name="F:MS_lab_personnel">
lab personnel: 
</member>
        <member name="F:MS_instrument_vendor">
instrument vendor: 
</member>
        <member name="F:MS_programmer">
programmer: 
</member>
        <member name="F:MS_software_vendor">
software vendor: 
</member>
        <member name="F:MS_role_type">
role type: Role of a Person or Organization.
</member>
        <member name="F:MS_param__z_ion">
param: z ion: 
</member>
        <member name="F:MS_param__y_ion">
param: y ion: 
</member>
        <member name="F:MS_param__x_ion">
param: x ion: 
</member>
        <member name="F:MS_param__w_ion">
param: w ion: 
</member>
        <member name="F:MS_param__immonium_ion">
param: immonium ion: 
</member>
        <member name="F:MS_param__d_ion">
param: d ion: 
</member>
        <member name="F:MS_param__v_ion">
param: v ion: 
</member>
        <member name="F:MS_fragment_mass_type_mono">
fragment mass type mono: Mass type setting for fragment mass was monoisotopic.
</member>
        <member name="F:MS_fragment_mass_type_average">
fragment mass type average: Mass type setting for fragment mass was average isotopic.
</member>
        <member name="F:MS_DB_source_UniProt">
DB source UniProt: 
</member>
        <member name="F:MS_DB_source_NCBI">
DB source NCBI: 
</member>
        <member name="F:MS_DB_source_EBI">
DB source EBI: 
</member>
        <member name="F:MS_Trypsin">
Trypsin: 
</member>
        <member name="F:MS_local_FDR">
local FDR: Result of quality estimation: the local FDR at the current position of a sorted list.
</member>
        <member name="F:MS_search_input_details">
search input details: 
</member>
        <member name="F:MS_Bruker_XML_file">
Bruker XML file: Bruker data exchange xml.
</member>
        <member name="F:MS_Sciex_API_III_file">
Sciex API III file: 
</member>
        <member name="F:MS_PerSeptive_PKS_file">
PerSeptive PKS file: 
</member>
        <member name="F:MS_Sequest_summary">
Sequest summary: Source file for this mzIdentML was a Sequest summary page (proteins).
</member>
        <member name="F:MS_Sequest_out_folder">
Sequest out folder: Source file for this mzIdentML was a Sequest folder with its out files.
</member>
        <member name="F:MS_co_eluting_ion">
co-eluting ion: Co-eluting ion.
</member>
        <member name="F:MS_non_identified_ion">
non-identified ion: Non-identified ion.
</member>
        <member name="F:MS_frag__immonium_ion">
frag: immonium ion: Fragmentation information, type of product: immonium ion.
</member>
        <member name="F:MS_frag__w_ion">
frag: w ion: Fragmentation information, type of product: w ion.
</member>
        <member name="F:MS_frag__v_ion">
frag: v ion: Fragmentation information, type of product: v ion.
</member>
        <member name="F:MS_frag__d_ion">
frag: d ion: Fragmentation information, type of product: d ion.
</member>
        <member name="F:MS_frag__a_ion___NH3">
frag: a ion - NH3: Fragmentation information, type of product: a ion without ammonium.
</member>
        <member name="F:MS_frag__a_ion___H2O">
frag: a ion - H2O: Fragmentation information, type of product: a ion without water.
</member>
        <member name="F:MS_frag__y_ion___NH3">
frag: y ion - NH3: Fragmentation information, type of product: y ion without ammonium ion.
</member>
        <member name="F:MS_frag__b_ion___NH3">
frag: b ion - NH3: Fragmentation information, type of product: b ion without ammonium ion.
</member>
        <member name="F:MS_frag__c_ion">
frag: c ion: Fragmentation information, type of product: c ion.
</member>
        <member name="F:MS_frag__z_ion">
frag: z ion: Fragmentation information, type of product: z ion.
</member>
        <member name="F:MS_frag__a_ion">
frag: a ion: Fragmentation information, type of product: a ion.
</member>
        <member name="F:MS_frag__x_ion">
frag: x ion: Fragmentation information, type of product: x ion.
</member>
        <member name="F:MS_product_ion_m_z_error">
product ion m/z error: The product ion m/z error.
</member>
        <member name="F:MS_fragment_ion_intensity">
fragment ion intensity (product ion intensity): The intensity of the product ion.
</member>
        <member name="F:MS_product_ion_intensity">
product ion intensity: The intensity of the product ion.
</member>
        <member name="F:MS_fragment_ion_m_z">
fragment ion m/z (product ion m/z): The m/z of the product ion.
</member>
        <member name="F:MS_product_ion_m_z">
product ion m/z: The m/z of the product ion.
</member>
        <member name="F:MS_frag__b_ion">
frag: b ion: Fragmentation information, type of product: b ion.
</member>
        <member name="F:MS_frag__y_ion___H2O">
frag: y ion - H2O: Fragmentation information, type of product: y ion without water.
</member>
        <member name="F:MS_frag__b_ion___H2O">
frag: b ion - H2O: Fragmentation information, type of product: b ion without water.
</member>
        <member name="F:MS_fragmentation_information">
fragmentation information: Fragmentation information like ion types.
</member>
        <member name="F:MS_frag__y_ion">
frag: y ion: Fragmentation information, type of product: y ion.
</member>
        <member name="F:MS_sequest_PeptideIdnumber">
sequest:PeptideIdnumber: The SEQUEST result 'Id#' in out file (peptide).
</member>
        <member name="F:MS_sequest_PeptideNumber">
sequest:PeptideNumber: The SEQUEST result '#' in out file (peptide).
</member>
        <member name="F:MS_sequest_PeptideRankSp">
sequest:PeptideRankSp: The SEQUEST result 'Sp' of 'Rank/Sp' in out file (peptide). Also called 'rsp'.
</member>
        <member name="F:MS_sequest_PeptideSp">
sequest:PeptideSp: The SEQUEST result 'Sp' in out file (peptide).
</member>
        <member name="F:MS_prot_global_FDR">
prot:global FDR: Estimation of global false discovery rate of the proteins.
</member>
        <member name="F:MS_search_result_details____OBSOLETE">
search result details 	 : OBSOLETE: Scores and global result characteristics.
</member>
        <member name="F:MS_parent_mass_type_average">
parent mass type average: Mass type setting for parent mass was average isotopic.
</member>
        <member name="F:MS_parent_mass_type_mono">
parent mass type mono: Mass type setting for parent mass was monoisotopic.
</member>
        <member name="F:MS_mass_type_settings">
mass type settings: The type of mass difference value to be considered by the search engine (monoisotopic or average).
</member>
        <member name="F:MS_Phenyx">
Phenyx: 
</member>
        <member name="F:MS_Sequest">
Sequest: 
</member>
        <member name="F:MS_Mascot">
Mascot: 
</member>
        <member name="F:MS_DB_PI_filter_minimum">
DB PI filter minimum: 
</member>
        <member name="F:MS_DB_PI_filter_maximum">
DB PI filter maximum: 
</member>
        <member name="F:MS_DB_MW_filter_minimum">
DB MW filter minimum: 
</member>
        <member name="F:MS_DB_MW_filter_maximum">
DB MW filter maximum: 
</member>
        <member name="F:MS_Sequest_out_file">
Sequest out file: Source file for this mzIdentML was ONE Sequest out file.
</member>
        <member name="F:MS_Mascot_DAT_file">
Mascot DAT file: Source file for this mzIdentML was a Mascot DAT file.
</member>
        <member name="F:MS_protein_quality_estimation_measure">
protein quality estimation measure: Quality estimation score for a protein (p-value, Expect value, confidence, local FDR).
</member>
        <member name="F:MS_DB_composition_target_decoy">
DB composition target+decoy: Decoy database composition: database contains original (target) and decoy entries.
</member>
        <member name="F:MS_decoy_DB_type_randomized">
decoy DB type randomized: Decoy type: Amino acids of protein sequences are randomized (keeping the original protein mass).
</member>
        <member name="F:MS_decoy_DB_type_reverse">
decoy DB type reverse: Decoy type: Amino acids of protein sequences are used in reverse order.
</member>
        <member name="F:MS_quality_estimation_with_decoy_database">
quality estimation with decoy database: Quality estimation by decoy database.
</member>
        <member name="F:MS_confidence_score">
confidence score: Result of quality estimation: confidence score.
</member>
        <member name="F:MS_Expect_value">
Expect value: Result of quality estimation: Expect value.
</member>
        <member name="F:MS_p_value">
p-value: Quality estimation by p-value.
</member>
        <member name="F:MS_modification_specificity_C_term">
modification specificity C-term: As parameter for search engine: apply the modification only C-terminal.
</member>
        <member name="F:MS_modification_specificity_N_term">
modification specificity N-term: As parameter for search engine: apply the modification only N-terminal.
</member>
        <member name="F:MS_search_statistics">
search statistics: The details of the actual run of the search.
</member>
        <member name="F:MS_Cleavage_agent_regular_expression">
Cleavage agent regular expression: Branch containing regular expressions for cleavage enzymes.
</member>
        <member name="F:MS_database_EST">
database EST: 
</member>
        <member name="F:MS_number_of_molecular_hypothesis_considered">
number of molecular hypothesis considered: Number of Molecular Hypothesis Considered - This is the number of molecules (e.g. peptides for proteomics) considered for a particular search.
</member>
        <member name="F:MS_peptide_shared_in_multiple_proteins">
peptide shared in multiple proteins: 
</member>
        <member name="F:MS_mascot_total_ions">
mascot:total ions: The Mascot result 'Total ions'.
</member>
        <member name="F:MS_mascot_matched_ions">
mascot:matched ions: The Mascot result 'Matched ions'.
</member>
        <member name="F:MS_mascot_expectation_value">
mascot:expectation value: The Mascot result 'expectation value'.
</member>
        <member name="F:MS_mascot_score">
mascot:score: The Mascot result 'Score'.
</member>
        <member name="F:MS_paragon_contrib">
paragon:contrib: The Paragon result 'Contrib'.
</member>
        <member name="F:MS_paragon_expression_change_p_value">
paragon:expression change p-value: The Paragon result 'Expression change P-value'.
</member>
        <member name="F:MS_paragon_expression_error_factor">
paragon:expression error factor: The Paragon result 'Expression Error Factor'.
</member>
        <member name="F:MS_paragon_confidence">
paragon:confidence: The Paragon result 'Confidence'.
</member>
        <member name="F:MS_paragon_score">
paragon:score: The Paragon result 'Score'.
</member>
        <member name="F:MS_paragon_total_protscore">
paragon:total protscore: The Paragon result 'Total ProtScore'.
</member>
        <member name="F:MS_paragon_unused_protscore">
paragon:unused protscore: The Paragon result 'Unused ProtScore'.
</member>
        <member name="F:MS_sequest_consensus_score">
sequest:consensus score: The SEQUEST result 'Consensus Score'.
</member>
        <member name="F:MS_sequest_total_ions">
sequest:total ions: The SEQUEST result 'Total Ions'.
</member>
        <member name="F:MS_sequest_matched_ions">
sequest:matched ions: The SEQUEST result 'Matched Ions'.
</member>
        <member name="F:MS_sequest_sf">
sequest:sf: The SEQUEST result 'Sf'.
</member>
        <member name="F:MS_sequest_expectation_value">
sequest:expectation value: The SEQUEST result 'Expectation value'.
</member>
        <member name="F:MS_sequest_Uniq">
sequest:Uniq: 
</member>
        <member name="F:MS_sequest_sp">
sequest:sp: The SEQUEST result 'Sp' (protein).
</member>
        <member name="F:MS_sequest_deltacn">
sequest:deltacn: The SEQUEST result 'DeltaCn'.
</member>
        <member name="F:MS_sequest_xcorr">
sequest:xcorr: The SEQUEST result 'Xcorr'.
</member>
        <member name="F:MS_sequest_probability">
sequest:probability: The SEQUEST result 'Probability'.
</member>
        <member name="F:MS_search_engine_specific_score">
search engine specific score: Search engine specific scores.
</member>
        <member name="F:MS_param__y_ion_H2O">
param: y ion-H2O: Ion y - H2O if y significant and fragment includes STED.
</member>
        <member name="F:MS_param__y_ion_NH3">
param: y ion-NH3: 
</member>
        <member name="F:MS_param__b_ion_H2O">
param: b ion-H2O: Ion b - H2O if b significant and fragment includes STED.
</member>
        <member name="F:MS_param__b_ion_NH3">
param: b ion-NH3: 
</member>
        <member name="F:MS_param__a_ion_H2O">
param: a ion-H2O: Ion a - H2O if a significant and fragment includes STED.
</member>
        <member name="F:MS_protein_ambiguity_group_result_details">
protein ambiguity group result details: 
</member>
        <member name="F:MS_param__a_ion_NH3">
param: a ion-NH3: 
</member>
        <member name="F:MS_TODOsequest_SelectAdvancedCV">
TODOsequest:SelectAdvancedCV: Branch containing the CV terms for Sequest Select Advanced Input Parameters.
</member>
        <member name="F:MS_sequest_SelectDefault">
sequest:SelectDefault: 
</member>
        <member name="F:MS_search_engine_specific_score_for_peptides">
search engine specific score for peptides: 
</member>
        <member name="F:MS_database_IPI_human">
database IPI_human: 
</member>
        <member name="F:MS_intensity_of_precursor_ion">
intensity of precursor ion: The intensity of the precursor ion.
</member>
        <member name="F:MS_quantitation_software_version">
quantitation software version: Quantitation software version.
</member>
        <member name="F:MS_quantitation_software_name">
quantitation software name: Quantitation software name.
</member>
        <member name="F:MS_error_on_absolute_quantity">
error on absolute quantity: Error on absolute quantity.
</member>
        <member name="F:MS_absolute_quantities">
absolute quantities: Absolute quantities.
</member>
        <member name="F:MS_p_value__protein_diff_from_1_randomly_">
p-value (protein diff from 1 randomly): P-value (protein diff from 1 randomly).
</member>
        <member name="F:MS_errors_on_protein_ratios">
errors on protein ratios: Errors on protein ratios.
</member>
        <member name="F:MS_protein_ratios">
protein ratios: Protein ratios.
</member>
        <member name="F:MS_errors_on_peptide_ratios">
errors on peptide ratios: Errors on peptide ratios.
</member>
        <member name="F:MS_peptide_ratios">
peptide ratios: Peptide ratios.
</member>
        <member name="F:MS_errors_on_peptide_areas">
errors on peptide areas: Errors on peptide areas.
</member>
        <member name="F:MS_peptide_raw_areas">
peptide raw areas: Peptide raw areas.
</member>
        <member name="F:MS_quantification_information">
quantification information: Quantification information.
</member>
        <member name="F:MS_sequest_selectCV">
sequest:selectCV: Branch containing the CV terms for Sequest Select Input Parameters.
</member>
        <member name="F:MS_peptide_sharing_details">
peptide sharing details: Accessions Containing Sequence - Accessions for each protein containing this peptide.
</member>
        <member name="F:MS_sequest_Fast">
sequest:Fast: 
</member>
        <member name="F:MS_manual_validation">
manual validation: Result of quality estimation: decision of a manual validation.
</member>
        <member name="F:MS_number_of_peaks_submitted">
number of peaks submitted: The number of peaks from the original peaks listed that were submitted to the search engine.
</member>
        <member name="F:MS_number_of_peaks_used">
number of peaks used: The number of peaks from the original peak list that are used to calculate the scores for a particular search engine. All ions that have the opportunity to match or be counted even if they don't.
</member>
        <member name="F:MS_ions_series_considered">
ions series considered: The ion series that were used during the calculation of the count (e.g. b, y, a, b, c, y, z, b, b-NH3, b-H20, b+, z, z-, z+, y-H3PO4, immonium).
</member>
        <member name="F:MS_number_of_matched_peaks">
number of matched peaks: The number of peaks that were matched as qualified by the ion series considered field. If a peak matches multiple ions then only 1 would be added the count.
</member>
        <member name="F:MS_sequest_FormatAndLinks">
sequest:FormatAndLinks: 
</member>
        <member name="F:MS_param__c_ion">
param: c ion: 
</member>
        <member name="F:MS_param__b_ion">
param: b ion: 
</member>
        <member name="F:MS_theoretical_mass">
theoretical mass: The theoretical mass of the molecule (e.g. the peptide sequence and its modifications).
</member>
        <member name="F:MS_single_protein_result_details">
single protein result details: Results specific for one protein as part of a protein ambiguity group (a result not valid for all the other proteins in the protein ambiguity group).
</member>
        <member name="F:MS_scan_number_s__OBSOLETE">
scan number(s): OBSOLETE: use spectrumID attribute of SpectrumIdentificationResult. Take from mzData.
</member>
        <member name="F:MS_retention_time_s_">
retention time(s): Retention time of the spectrum from the source file
</member>
        <member name="F:MS_c_terminal_flanking_residue">
c-terminal flanking residue: The residue following the last amino acid in the peptide sequence as it occurs in the protein. Use 'C-term' to denote if the peptide ends at the C terminus of the protein.
</member>
        <member name="F:MS_n_terminal_flanking_residue">
n-terminal flanking residue: The residue preceeding the first amino acid in the peptide sequence as it occurs in the protein. Use 'N-term' to denote if the peptide starts at the N terminus of the protein.
</member>
        <member name="F:MS_sequest_Full">
sequest:Full: 
</member>
        <member name="F:MS_sequest_modeCV">
sequest:modeCV: Branch containing the CV terms for Sequest Mode Input Parameters.
</member>
        <member name="F:MS_sequest_CullTo">
sequest:CullTo: Specify cull string as value of the CVParam!
</member>
        <member name="F:MS_param__a_ion">
param: a ion: 
</member>
        <member name="F:MS_data_stored_in_database">
data stored in database: Source file for this mzIdentML was a data set in a database.
</member>
        <member name="F:MS_sequest_TopNumber">
sequest:TopNumber: Specify \"number\" as value of the CVParam!
</member>
        <member name="F:MS_peptide_result_details">
peptide result details: Peptide level information.
</member>
        <member name="F:MS_database_SwissProt">
database SwissProt: 
</member>
        <member name="F:MS_sequest_InfoAndLog">
sequest:InfoAndLog: 
</member>
        <member name="F:MS_sequest_Chromatogram">
sequest:Chromatogram: 
</member>
        <member name="F:MS_protein_group_subset_relationship">
protein group/subset relationship: Branch containing protein group/subset relationships. TODO: add child terms.
</member>
        <member name="F:MS_confident_peptide">
confident peptide: This counts the number of peptide sequences without regard to whether they are distinct. Multiple charges states and multiple modification states DO count as multiple peptides. The definition of 'confident' must be qualified elsewhere.
</member>
        <member name="F:MS_confident_peptide_qualification">
confident peptide qualification: The point of this entry is to define what is meant by confident for the term Confident distinct peptide sequence and/or Confident peptides. Example 1 - metric=Paragon:Confidence value=95 sense=greater than Example 2 - metric=Mascot:Eval value=0.05 sense=less than.
</member>
        <member name="F:MS_confident_distinct_peptide_sequences">
confident distinct peptide sequences: This counts the number of distinct peptide sequences. Multiple charge states and multiple modification states do NOT count as multiple sequences. The definition of 'confident' must be qualified elsewhere.
</member>
        <member name="F:MS_distinct_peptide_sequences">
distinct peptide sequences: This counts distinct sequences hitting the protein without regard to a minimal confidence threshold.
</member>
        <member name="F:MS_sequest_TopPercentMostIntense">
sequest:TopPercentMostIntense: Specify \"percentage\" as value of the CVParam!
</member>
        <member name="F:MS_sequest_ProcessAll">
sequest:ProcessAll: 
</member>
        <member name="F:MS_sequest_sort_by_z">
sequest:sort_by_z: 
</member>
        <member name="F:MS_sequence_coverage">
sequence coverage: The percent coverage for the protein based upon the matched peptide sequences (can be calculated).
</member>
        <member name="F:MS_peptide_quality_estimation_measure">
peptide quality estimation measure: 
</member>
        <member name="F:MS_NoEnzyme">
NoEnzyme: 
</member>
        <member name="F:MS_taxonomy_nomenclature_OBSOLETE">
taxonomy nomenclature: OBSOLETE: The system used to indicate taxonomy. There should be an enumerated list of options: latin name, NCBI TaxID, common name, Swiss-Prot species ID (ex. RABIT from the full protein ID ALBU_RABIT).
</member>
        <member name="F:MS_molecule_taxonomy">
molecule taxonomy: The taxonomy of the resultant molecule from the search.
</member>
        <member name="F:MS_protein_description">
protein description: The protein description line from the sequence entry in the source database FASTA file.
</member>
        <member name="F:MS_sequest_ProcessCV">
sequest:ProcessCV: Branch containing the CV terms for Sequest View / Process Input Parameters.
</member>
        <member name="F:MS_sequest_sort_by_XCorr">
sequest:sort_by_XCorr: 
</member>
        <member name="F:MS_protein_result_details">
protein result details: Protein level information.
</member>
        <member name="F:MS_database_nr">
database nr: 
</member>
        <member name="F:MS_ms_ms_search">
ms-ms search: An ms/ms search (with fragment ions).
</member>
        <member name="F:MS_tag_search">
tag search: A sequence tag search.
</member>
        <member name="F:MS_pmf_search">
pmf search: A peptide mass fingerprint search.
</member>
        <member name="F:MS_search_type">
search type: Enumeration of type of search value (i.e. from PMF, sequence tag, MS-MS).
</member>
        <member name="F:MS_database_type_nucleotide">
database type nucleotide: Database contains nucleid acid sequences.
</member>
        <member name="F:MS_database_type_amino_acid">
database type amino acid: Database contains amino acid sequences.
</member>
        <member name="F:MS_sequest_sort_by_Sf">
sequest:sort_by_Sf: 
</member>
        <member name="F:MS_sequest_sort_by_Sequence">
sequest:sort_by_Sequence: 
</member>
        <member name="F:MS_sequest_sort_by_Scan">
sequest:sort_by_Scan: 
</member>
        <member name="F:MS_sequest_sort_by_TIC">
sequest:sort_by_TIC: 
</member>
        <member name="F:MS_sequest_sort_by_Sp">
sequest:sort_by_Sp: 
</member>
        <member name="F:MS_ions_series_considered_in_search">
ions series considered in search: The description of the ion fragment series (including charges and neutral losses) that are considered by the search engine.
</member>
        <member name="F:MS_TODOscoring_model">
TODOscoring model: DELETE. There is Phenyx:ScoringModel for Phenyx! Scoring model (more detailed granularity). TODO: add some child terms!
</member>
        <member name="F:MS_Mascot_MGF_file">
Mascot MGF file: 
</member>
        <member name="F:MS_neutral_loss_OBSOLETE">
neutral loss: OBSOLETE: replaced by MS:1000336 (neutral loss): Leave this to PSI-MOD?
</member>
        <member name="F:MS_quality_estimation_method_details">
quality estimation method details: Method for quality estimation (manually or wih decoy database).
</member>
        <member name="F:MS_sequest_sort_by_RSp">
sequest:sort_by_RSp: 
</member>
        <member name="F:MS_quality_estimation_by_manual_validation">
quality estimation by manual validation: The quality estimation was done manually.
</member>
        <member name="F:MS_tolerance_on_types_OBSOLETE">
tolerance on types: OBSOLETE: Tolerance on types.
</member>
        <member name="F:MS_modification_specificity_rule">
modification specificity rule: The specificity rules for the modifications applied by the search engine.
</member>
        <member name="F:MS_modification_parameters">
modification parameters: Modification parameters for the search engine run.
</member>
        <member name="F:MS_sequest_sort_by_Ref">
sequest:sort_by_Ref: 
</member>
        <member name="F:MS_sequest_sort_by_PreviousAminoAcid">
sequest:sort_by_PreviousAminoAcid: 
</member>
        <member name="F:MS_multiple_enzyme_combination_rules_OBSOLETE">
multiple enzyme combination rules: OBSOLETE: use attribute independent in mzIdentML instead. Description of multiple enzyme digestion protocol, if any.
</member>
        <member name="F:MS_sequest_sort_by_P">
sequest:sort_by_P: 
</member>
        <member name="F:MS_sequest_sort_by_MH_">
sequest:sort_by_MH+: 
</member>
        <member name="F:MS_sequest_sort_by_Ions">
sequest:sort_by_Ions: 
</member>
        <member name="F:MS_sequest_sort_by_dM">
sequest:sort_by_dM: 
</member>
        <member name="F:MS_sequest_sort_by_dCn">
sequest:sort_by_dCn: 
</member>
        <member name="F:MS_cleavage_agent_name">
cleavage agent name: The name of the cleavage agent.
</member>
        <member name="F:MS_cleavage_agent_details">
cleavage agent details: Details of cleavage agent (enzyme).
</member>
        <member name="F:MS_sequest_LimitTo">
sequest:LimitTo: Specify \"number of dtas shown\" as value of the CVParam!
</member>
        <member name="F:MS_sequest_sortCV">
sequest:sortCV: Branch containing the CV terms for Sequest View / Sort Input Parameters.
</member>
        <member name="F:MS_intermediate_analysis_format">
intermediate analysis format: Type of the source file, the  mzIdentML was created from.
</member>
        <member name="F:MS_sequest_Consensus">
sequest:Consensus: Specify depth as value of the CVParam!
</member>
        <member name="F:MS_sequest_ShowFragmentIons">
sequest:ShowFragmentIons: 
</member>
        <member name="F:MS_search_time_taken">
search time taken: The time taken to complete the search in seconds.
</member>
        <member name="F:MS_date___time_search_performed_OBSOLETE">
date / time search performed: OBSOLETE: use attribute in mzIdentML instead. Date and time of the actual search run.
</member>
        <member name="F:MS_sequest_SequencePartialFilter">
sequest:SequencePartialFilter: 
</member>
        <member name="F:MS_spectral_library_search">
spectral library search: A search using a library of spectra.
</member>
        <member name="F:MS_number_of_peptide_seqs_compared_to_each_spectrum">
number of peptide seqs compared to each spectrum: Number of peptide seqs compared to each spectrum.
</member>
        <member name="F:MS_number_of_sequences_searched">
number of sequences searched: The number of sequences (proteins / nucleotides) from the database search after filtering.
</member>
        <member name="F:MS_sequest_SequenceHeaderFilter">
sequest:SequenceHeaderFilter: 
</member>
        <member name="F:MS_DB_filter_on_sequence_pattern">
DB filter on sequence pattern: Filtering applied specifically by amino acid sequence pattern.
</member>
        <member name="F:MS_sequest_NormalizeXCorrValues">
sequest:NormalizeXCorrValues: 
</member>
        <member name="F:MS_translation_table">
translation table: The translation table used to translate the nucleotides to amino acids.
</member>
        <member name="F:MS_translation_frame_OBSOLETE">
translation frame: OSBOLETE: use attribute in mzIdentML instead. The translated open reading frames from a nucleotide database considered in the search (range: 1-6).
</member>
        <member name="F:MS_DB_PI_filter">
DB PI filter: Filtering applied specifically by predicted protein isoelectric focussing point (pI), specified as either a range or above/below a threshold value.
</member>
        <member name="F:MS_DB_MW_filter">
DB MW filter: Filtering applied specifically by protein molecular weight, specified as either a range or above/below a threshold value.
</member>
        <member name="F:MS_DB_filter_on_accession_numbers">
DB filter on accession numbers: Filtering applied specifically by accession number pattern.
</member>
        <member name="F:MS_DB_filter_taxonomy">
DB filter taxonomy: A taxonomy filter was to the database search.
</member>
        <member name="F:MS_database_filtering">
database filtering: Was there filtering used on the database.
</member>
        <member name="F:MS_database_type">
database type: Database containing amino acid or nucleic acid sequences.
</member>
        <member name="F:MS_database_release_date_OBSOLETE">
database release date: OBSOLETE: Use attribute in mzIdentML instead. Release date of the search database.
</member>
        <member name="F:MS_database_version_OBSOLETE">
database version: OBSOLETE: Use attribute in mzIdentML instead. Version of the search database .
</member>
        <member name="F:MS_database_original_uri">
database original uri: URI, from where the search database was originally downloaded.
</member>
        <member name="F:MS_database_local_file_path_OBSOLETE">
database local file path: OBSOLETE: Use attribute in mzIdentML instead. Local file path of the search database from the search engine's point of view.
</member>
        <member name="F:MS_database_name">
database name: The name of the search database (nr, SwissProt or est_human).
</member>
        <member name="F:MS_database_source">
database source: The organisation, project or laboratory from where the database is obtained (uniprot, ncbi, ebi, other).
</member>
        <member name="F:MS_search_database_details">
search database details: Details about the database searched.
</member>
        <member name="F:MS_de_novo_search">
de novo search: A de novo sequencing search (without database).
</member>
        <member name="F:MS_sequest_DescriptionLines">
sequest:DescriptionLines: 
</member>
        <member name="F:MS_sequest_OutputLines">
sequest:OutputLines: 
</member>
        <member name="F:MS_sequest_ViewCV">
sequest:ViewCV: Branch containing the CV terms for Sequest View Input Parameters.
</member>
        <member name="F:MS_sequest_CleavesAt">
sequest:CleavesAt: 
</member>
        <member name="F:MS_spectrum_interpretation">
spectrum interpretation: Collection of terms from the PSI Proteome Informatics standards describing the interpretation of spectra.
</member>
        <member name="F:MS_AB_SCIEX_TripleTOF_5600">
AB SCIEX TripleTOF 5600: Applied Biosystems|MDS SCIEX TripleTOF 5500, a quadrupole - quadrupole - time-of-flight mass spectrometer.
</member>
        <member name="F:MS_AB_SCIEX_QTRAP_5500">
AB SCIEX QTRAP 5500: Applied Biosystems|MDS SCIEX QTRAP 5500.
</member>
        <member name="F:MS_Shimadzu_Biotech_database_entity">
Shimadzu Biotech database entity: Shimadzu Biotech format.
</member>
        <member name="F:MS_Shimadzu_Biotech_nativeID_format">
Shimadzu Biotech nativeID format: source=xsd:string start=xsd:nonNegativeInteger end=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_calibration_spectrum">
calibration spectrum: A spectrum derived from a special calibration source, rather than from the primary injected sample. A calibration spectrum is typically derived from a substance that can be used to correct systematic shift in m/z for spectra of the primary inject sample.
</member>
        <member name="F:MS_ion_injection_time">
ion injection time: The length of time spent filling an ion trapping device.
</member>
        <member name="F:MS_product_interpretation_rank">
product interpretation rank: The integer rank given an interpretation of an observed product ion. For example, if y8 is selected as the most likely interpretation of a peak, then it is assigned a rank of 1.
</member>
        <member name="F:MS_ATAQS">
ATAQS: Software suite used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the Institute for Systems Biology.
</member>
        <member name="F:MS_MaRiMba_OBSOLETE">
MaRiMba: Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology. http://tools.proteomecenter.org/wiki/index.php?title=Software:TPP-MaRiMba.
</member>
        <member name="F:MS_TIQAM">
TIQAM: Software used to predict, select, and optimize transitions for selected reaction monitoring experiments developed and distributed by the Institute for Systems Biology. http://tools.proteomecenter.org/TIQAM/TIQAM.html.
</member>
        <member name="F:MS_Skyline">
Skyline: Software used to predict, select, and optimize transitions as well as analyze the results of selected reaction monitoring runs developed and distributed by the MacCoss lab at the University of Washington. https://brendanx-uw1.gs.washington.edu/labkey/wiki/home/software/Skyline/page.view?name=default.
</member>
        <member name="F:MS_excludes_supersede_includes">
excludes supersede includes: A priority setting specifying that excluded targets have priority over the included targets if there is a conflict.
</member>
        <member name="F:MS_includes_supersede_excludes">
includes supersede excludes: A priority setting specifying that included targets have priority over the excluded targets if there is a conflict.
</member>
        <member name="F:MS_target_inclusion_exclusion_priority">
target inclusion exclusion priority: A priority setting specifying whether included or excluded targets have priority over the other.
</member>
        <member name="F:MS_target_list">
target list: A list of peptides or compounds and their expected m/z coordinates that can be used to cause a mass spectrometry to obtain spectra of those molecules specifically.
</member>
        <member name="F:MS_retention_time_window_upper_offset">
retention time window upper offset: The extent of the retention time window in time units above the target retention time. The lower and upper offsets may be asymetric about the target time.
</member>
        <member name="F:MS_retention_time_window_lower_offset">
retention time window lower offset: The extent of the retention time window in time units below the target retention time. The lower and upper offsets may be asymetric about the target time.
</member>
        <member name="F:MS_retention_time_window_attribute">
retention time window attribute: An attribute of a window in time about which a peptide might elute from the column.
</member>
        <member name="F:MS_tab_delimited_text_file">
tab delimited text file: A file that has two or more columns of tabular data where each column is separated by a TAB character.
</member>
        <member name="F:MS_transition_predicted_by_informatic_analysis">
transition predicted by informatic analysis: The transition has been predicted by informatics software without any direct spectral evidence.
</member>
        <member name="F:MS_transition_purported_from_an_MS_MS_spectrum_on_a_different__specified_instrument">
transition purported from an MS/MS spectrum on a different, specified instrument: The transition has been purported by obtaining an MS/MS spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term. However, the detecting instrument is of a different type (e.g. ion trap) than the instrument that the transition will eventually be used on (e.g. triple quad).
</member>
        <member name="F:MS_transition_validated_with_an_MS_MS_spectrum_on_specified_instrument">
transition validated with an MS/MS spectrum on specified instrument: The transition has been validated by obtaining an MS/MS spectrum and demonstrating that the peak is detectable on the instrument specified with a separate term.
</member>
        <member name="F:MS_transition_optimized_on_specified_instrument">
transition optimized on specified instrument: The transition has been optimized by direct injection of the peptide into an instrument specified in a separate term, and the optimum voltages and fragmentation energies have been determined.
</member>
        <member name="F:MS_transition_validation_method">
transition validation method: The strategy used to validate that a transition is effective.
</member>
        <member name="F:MS_reaction">
reaction (transition): A set of two m/z values corresponding to the precursor m/z and a fragment m/z that in combination can be used to identify or quantify a specific ion, although not necessarily uniquely.
</member>
        <member name="F:MS_transition">
transition: A set of two m/z values corresponding to the precursor m/z and a fragment m/z that in combination can be used to identify or quantify a specific ion, although not necessarily uniquely.
</member>
        <member name="F:MS_peak_targeting_suitability_rank">
peak targeting suitability rank: Ordinal specifying the rank of a peak in a spectrum in terms of suitability for targeting. The most suitable peak is 1. The next most suitability peak is 2, etc. Suitability is algorithm and context dependant.
</member>
        <member name="F:MS_peak_intensity_rank">
peak intensity rank: Ordinal specifying the rank in intensity of a peak in a spectrum. Base peak is 1. The next most intense peak is 2, etc.
</member>
        <member name="F:MS_percent_of_base_peak_times_100">
percent of base peak times 100: The magnitude of a peak expressed in terms of the percentage of the magnitude of the base peak intensity multiplied by 100. The base peak is therefore 10000. This unit is common in normalized spectrum libraries.
</member>
        <member name="F:MS_product_ion_m_z_delta">
product ion m/z delta: The difference in m/z of the predicted m/z based on the assigned product ion minus the actual observed peak m/z.
</member>
        <member name="F:MS_product_ion_series_ordinal">
product ion series ordinal: The ordinal of the fragment within a specified ion series. (e.g. 8 for a y8 ion).
</member>
        <member name="F:MS_H_PINS_retention_time_normalization_standard">
H-PINS retention time normalization standard: The de facto standard providing the retention times at which a set of halogenated reference peptides exit the reference chromatographic column, as published by Mirzaei et al. in Molecular and Cellular Proteomics in early 2009 (Early access: http://www.mcponline.org/cgi/content/abstract/M800569-MCP200v1).
</member>
        <member name="F:MS_retention_time_normalization_standard">
retention time normalization standard: A standard providing the retention times at which a set of reference compounds exit the reference chromatographic column.
</member>
        <member name="F:MS_minimum_information_standard">
minimum information standard: A specification of a minimum amount of information needed to reproduce or fully interpret a scientific result.
</member>
        <member name="F:MS_de_facto_standard">
de facto standard: A practice or product that has become a standard not because it has been approved by a standards organization but because it is widely used and recognized by the industry as being standard.
</member>
        <member name="F:MS_standard">
standard: Something, such as a practice or a product, that is widely recognized or employed, especially because of its excellence.
</member>
        <member name="F:MS_predicted_retention_time">
predicted retention time: A time interval relative to the beginning of a mass spectrometric run when a peptide will exit a chromatographic column as predicted by a referenced software application.
</member>
        <member name="F:MS_normalized_retention_time">
normalized retention time: A measure of the interval relative to the beginning of a mass spectrometric run when a peptide will exit a standardized reference chromatographic column and instrumental setup.
</member>
        <member name="F:MS_local_retention_time">
local retention time: A measure of the interval relative to the beginning of a mass spectrometric run when a peptide will exit an unspecified local chromatographic column and instrumental setup.
</member>
        <member name="F:MS_retention_time">
retention time: A measure of the interval relative to the beginning of a mass spectrometric run when a peptide will exit the chromatographic column.
</member>
        <member name="F:MS_peptide_group_label">
peptide group label: An arbitrary string label used to mark a set of peptides that belong together in a set, whereby the members are differentiated by different isotopic labels. For example, the heavy and light forms of the same peptide will both be assigned the same peptide group label.
</member>
        <member name="F:MS_light_labeled_peptide">
light labeled peptide (unlabeled peptide): A peptide that has not been labeled with heavier-than-usual isotopes. This is often referred to as \"light\" to distinguish from \"heavy\".
</member>
        <member name="F:MS_unlabeled_peptide">
unlabeled peptide: A peptide that has not been labeled with heavier-than-usual isotopes. This is often referred to as \"light\" to distinguish from \"heavy\".
</member>
        <member name="F:MS_heavy_labeled_peptide">
heavy labeled peptide: A peptide that has been created or labeled with some heavier-than-usual isotopes.
</member>
        <member name="F:MS_peptide_labeling_state">
peptide labeling state: A state description of how a peptide might be isotopically or isobarically labelled.
</member>
        <member name="F:MS_modified_peptide_sequence">
modified peptide sequence: A sequence of letter symbols denoting the order of amino acids that compose the peptide plus the encoding any amino acid mass modifications that are present using the notation where the total mass of the modified amino acid is specified in square bracketed numbers following the letter (e.g. R[162.10111] indicates an arginine whose final modified mass is 162.10111 amu).
</member>
        <member name="F:MS_unmodified_peptide_sequence">
unmodified peptide sequence: A sequence of letter symbols denoting the order of amino acids that compose the peptide, without encoding any amino acid mass modifications that might be present.
</member>
        <member name="F:MS_peptide_attribute">
peptide attribute: An nonphysical attribute that can be used to describe a peptide.
</member>
        <member name="F:MS_protein_name">
protein name: A long name describing the function of the protein.
</member>
        <member name="F:MS_protein_accession">
protein accession: Accession number for a specific protein in a database.
</member>
        <member name="F:MS_protein_attribute">
protein attribute: An nonphysical attribute describing a specific protein.
</member>
        <member name="F:MS_protein_short_name">
protein short name: A short name or symbol of a protein (e.g., HSF 1 or HSF1_HUMAN).
</member>
        <member name="F:MS_protein">
protein: A compound composed of one or more chains of amino acids in a specific order determined by the base sequence of nucleotides in the DNA coding for the protein.
</member>
        <member name="F:MS_chemical_compound">
chemical compound: A substance formed by chemical union of two or more elements or ingredients in definite proportion by weight.
</member>
        <member name="F:MS_interchannel_delay">
interchannel delay: The duration of intervals between scanning, during which the instrument configuration is switched.
</member>
        <member name="F:MS_PubMed_identifier">
PubMed identifier: A unique identifier for a publication in the PubMed database (MIR:00000015).
</member>
        <member name="F:MS_external_reference_identifier">
external reference identifier: An identifier/accession number to an external reference database.
</member>
        <member name="F:MS_tube_lens">
tube lens: No ideas.
</member>
        <member name="F:MS_cone_voltage">
cone voltage: Potential difference between the sampling cone/orifice and the what? in volts.
</member>
        <member name="F:MS_declustering_potential">
declustering potential: Potential difference between the orifice and the skimmer in volts.
</member>
        <member name="F:MS_SSRCalc">
SSRCalc: Sequence Specific Retention Calculator esimates the retention time of peptides based on their sequence. It is available at http://hs2.proteome.ca/SSRCalc/SSRCalc.html.
</member>
        <member name="F:MS_peptide_attribute_calculation_software">
peptide attribute calculation software: Software used to predict or calculate numberical attributes of peptides.
</member>
        <member name="F:MS_MaRiMba">
MaRiMba: Software used to predict transitions for selected reaction monitoring experiments based on observed spectrum libraries developed and distributed by the Institute for Systems Biology. http://tools.proteomecenter.org/wiki/index.php?title=Software:TPP-MaRiMba.
</member>
        <member name="F:MS_SRM_software">
SRM software: Software used to predict, select, or optimize transitions or analyze the results of selected reaction monitoring runs.
</member>
        <member name="F:MS_4000_QTRAP">
4000 QTRAP: AB SCIEX or Applied Biosystems|MDS SCIEX QTRAP 4000.
</member>
        <member name="F:MS_collision_gas_pressure">
collision gas pressure: The gas pressure of the collision gas used for collisional excitation.
</member>
        <member name="F:MS_SMILES_string">
SMILES string: The simplified molecular input line entry specification or SMILES is a specification for unambiguously describing the structure of a chemical compound using a short ASCII string.
</member>
        <member name="F:MS_structural_formula">
structural formula: A chemical formula showing the number of atoms of each element in a molecule, their spatial arrangement, and their linkage to each other.
</member>
        <member name="F:MS_molecular_formula">
molecular formula: A chemical compound formula expressing the number of atoms of each element present in a compound, without indicating how they are linked.
</member>
        <member name="F:MS_empirical_formula">
empirical formula: A chemical formula which expresses the proportions of the elements present in a substance.
</member>
        <member name="F:MS_chemical_compound_formula">
chemical compound formula: A combination of symbols used to express the chemical composition of a compound.
</member>
        <member name="F:MS_predicted_pI">
predicted pI (predicted isoelectric point): The pH of a solution at which a charged molecule would not migrate in an electric field, as predicted by a software algorithm.
</member>
        <member name="F:MS_predicted_isoelectric_point">
predicted isoelectric point: The pH of a solution at which a charged molecule would not migrate in an electric field, as predicted by a software algorithm.
</member>
        <member name="F:MS_pI">
pI (isoelectric point): The pH of a solution at which a charged molecule does not migrate in an electric field.
</member>
        <member name="F:MS_isoelectric_point">
isoelectric point: The pH of a solution at which a charged molecule does not migrate in an electric field.
</member>
        <member name="F:MS_chemical_compound_attribute">
chemical compound attribute: A describable property of a chemical compound.
</member>
        <member name="F:MS_peptide">
peptide: A compound of low molecular weight that is composed of two or more amino acids.
</member>
        <member name="F:MS_molecule">
molecule: A molecules is a fundamental component of a chemical compound that is the smallest part of the compound that can participate in a chemical reaction.
</member>
        <member name="F:MS_fraction_identifier">
fraction identifier: Identier string that describes the sample fraction. This identifer should contain the fraction number(s) or similar information.
</member>
        <member name="F:MS_run_attribute">
run attribute: Properties of the described run.
</member>
        <member name="F:MS_LTQ_Velos_ETD">
LTQ Velos ETD: Thermo Scientific LTQ Velos MS with ETD.
</member>
        <member name="F:MS_LTQ_Velos">
LTQ Velos: Thermo Scientific LTQ Velos MS.
</member>
        <member name="F:MS_LTQ_XL">
LTQ XL: Thermo Scientific LTQ XL MS.
</member>
        <member name="F:MS_free_electron_laser">
free electron laser: Free electron laser uses a relativistic electron beam as the lasing medium which move freely through a magnetic structure, hence the term.
</member>
        <member name="F:MS_dye_laser">
dye-laser: Dye lasers use an organic dye as the gain medium.
</member>
        <member name="F:MS_solid_state_laser">
solid-state laser: Solid state laser materials are commonly made by doping a crystalline solid host with ions that provide the required energy states.
</member>
        <member name="F:MS_gas_laser">
gas laser: Laser which is powered by a gaseous medium.
</member>
        <member name="F:MS_impact_angle">
impact angle: Describes the angle between the laser beam and the sample target.
</member>
        <member name="F:MS_attenuation">
attenuation: Describes the reduction of the intensity of the laser beam energy.
</member>
        <member name="F:MS_pulse_duration">
pulse duration: Describes how long the laser beam was emitted from the laser device.
</member>
        <member name="F:MS_pulse_energy">
pulse energy: Describes output energy of the laser system. May be attenuated by filters or other means.
</member>
        <member name="F:MS_focus_diameter_y">
focus diameter y: Describes the diameter of the laser beam in y direction.
</member>
        <member name="F:MS_focus_diameter_x">
focus diameter x: Describes the diameter of the laser beam in x direction.
</member>
        <member name="F:MS_wavelength">
wavelength: The distance between two peaks of the emitted laser beam.
</member>
        <member name="F:MS_laser_type">
laser type: Type of laser used used fpr desorption purpose.
</member>
        <member name="F:MS_laser_attribute">
laser attribute: Laser properties that are associated with a value.
</member>
        <member name="F:MS_laser">
laser: Device that emits light (electromagnetic radiation) through a process called stimulated emission. The term is an acronym for Light Amplification by Stimulated Emission of Radiation.
</member>
        <member name="F:MS_precoated_plate">
precoated plate: Def.
</member>
        <member name="F:MS_sprayed">
sprayed: Def.
</member>
        <member name="F:MS_printed">
printed: Def.
</member>
        <member name="F:MS_dried_dropplet">
dried dropplet: Def.
</member>
        <member name="F:MS_matrix_solution_concentration">
matrix solution concentration: Concentration of the chemical solution used as matrix.
</member>
        <member name="F:MS_matrix_solution">
matrix solution: Describes the chemical solution used as matrix.
</member>
        <member name="F:MS_matrix_application_type">
matrix application type: Describes the technique how the matrix is put on the sample target.
</member>
        <member name="F:MS_MALDI_matrix_application">
MALDI matrix application: Attributes to describe the technique how the sample is prepared with the matrix solution.
</member>
        <member name="F:MS_sample_preparation">
sample preparation: Properties of the preparation steps which took place before the measurement was performed.
</member>
        <member name="F:MS_isolation_window_upper_offset">
isolation window upper offset: The extent of the isolation window in m/z above the isolation window target m/z. The lower and upper offsets may be asymetric about the target m/z.
</member>
        <member name="F:MS_isolation_window_lower_offset">
isolation window lower offset: The extent of the isolation window in m/z below the isolation window target m/z. The lower and upper offsets may be asymetric about the target m/z.
</member>
        <member name="F:MS_isolation_window_target_m_z">
isolation window target m/z: The primary or reference m/z about which the isolation window is defined.
</member>
        <member name="F:MS_elution_time">
elution time: The time of elution from a chromatographic column, relative to the start of the chromatography.
</member>
        <member name="F:MS_Bruker_FID_file">
Bruker FID file: Bruker FID file format.
</member>
        <member name="F:MS_no_nativeID_format">
no nativeID format: No nativeID format indicates that the file tagged with this term does not contain spectra that can have a nativeID format.
</member>
        <member name="F:MS_Bruker_U2_nativeID_format">
Bruker U2 nativeID format: declaration=xsd:nonNegativeInteger collection=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_temperature_array">
temperature array: A data array of temperature measurements.
</member>
        <member name="F:MS_pressure_array">
pressure array: A data array of pressure measurements.
</member>
        <member name="F:MS_flow_rate_array">
flow rate array: A data array of flow rate measurements.
</member>
        <member name="F:MS_Acquity_UPLC_FLR">
Acquity UPLC FLR: Acquity UPLC Fluorescence Detector.
</member>
        <member name="F:MS_Acquity_UPLC_PDA">
Acquity UPLC PDA: Acquity UPLC Photodiode Array Detector.
</member>
        <member name="F:MS_HyStar">
HyStar: Bruker software for hyphenated experiments.
</member>
        <member name="F:MS_Bruker_U2_file">
Bruker U2 file: Bruker HyStar U2 file format.
</member>
        <member name="F:MS_Bruker_BAF_file">
Bruker BAF file: Bruker BAF raw file format.
</member>
        <member name="F:MS_counts_per_second">
counts per second: The number of counted events observed per second in one or a group of elements of a detector.
</member>
        <member name="F:MS_emission_chromatogram">
emission chromatogram: The measurement of light emitted by the sample as a function of the retention time.
</member>
        <member name="F:MS_absorption_chromatogram">
absorption chromatogram: The measurement of light absorbed by the sample as a function of the retention time.
</member>
        <member name="F:MS_EMR_radiation_chromatogram">
EMR radiation chromatogram (electromagnetic radiation chromatogram): The measurement of electromagnetic properties as a function of the retention time.
</member>
        <member name="F:MS_electromagnetic_radiation_chromatogram">
electromagnetic radiation chromatogram: The measurement of electromagnetic properties as a function of the retention time.
</member>
        <member name="F:MS_mass_chromatogram">
mass chromatogram: A plot of the relative abundance of a beam or other collection of ions as a function of the retention time.
</member>
        <member name="F:MS_chromatogram_title">
chromatogram title: A free-form text title describing a chromatogram.
</member>
        <member name="F:MS_chromatogram_attribute">
chromatogram attribute: Chromatogram properties that are associated with a value.
</member>
        <member name="F:MS_Th_s">
Th/s: Unit describing the scan rate of a spectrum in Thomson per second.
</member>
        <member name="F:MS_absorption_spectrum">
absorption spectrum: A plot of the relative intensity of electromagnetic radiation absorbed by atoms or molecules when excited.
</member>
        <member name="F:MS_emission_spectrum">
emission spectrum: A plot of the relative intensity of electromagnetic radiation emitted by atoms or molecules when excited.
</member>
        <member name="F:MS_EMR_spectrum">
EMR spectrum (electromagnetic radiation spectrum): A plot of the relative intensity of electromagnetic radiation as a function of the wavelength.
</member>
        <member name="F:MS_electromagnetic_radiation_spectrum">
electromagnetic radiation spectrum: A plot of the relative intensity of electromagnetic radiation as a function of the wavelength.
</member>
        <member name="F:MS_analyzer_scan_offset">
analyzer scan offset: Offset between two analyzers in a constant neutral loss or neutral gain scan. The value corresponds to the neutral loss or neutral gain value.
</member>
        <member name="F:MS_max_peak_picking">
max peak picking (height peak picking): Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The maximum intensity of all raw data points that belong to the peak is reported.
</member>
        <member name="F:MS_height_peak_picking">
height peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The maximum intensity of all raw data points that belong to the peak is reported.
</member>
        <member name="F:MS_sum_peak_picking">
sum peak picking (area peak picking): Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The area defined by all raw data points that belong to the peak is reported.
</member>
        <member name="F:MS_area_peak_picking">
area peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data. The area defined by all raw data points that belong to the peak is reported.
</member>
        <member name="F:MS_mass_resolving_power">
mass resolving power: The observed mass divided by the difference between two masses that can be separated: m/dm. The procedure by which dm was obtained and the mass at which the measurement was made should be reported.
</member>
        <member name="F:MS_custom_unreleased_software_tool">
custom unreleased software tool: A software tool that has not yet been released. The value should describe the software. Please do not use this term for publicly available software - contact the PSI-MS working group in order to have another CV term added.
</member>
        <member name="F:MS_peak_list_raw_scans">
peak list raw scans: A list of raw scans and or scan ranges used to generate a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term.
</member>
        <member name="F:MS_peak_list_scans">
peak list scans: A list of scan numbers and or scan ranges associated with a peak list. If possible the list of scans should be converted to native spectrum identifiers instead of using this term.
</member>
        <member name="F:MS_spectrum_title">
spectrum title: A free-form text title describing a spectrum.
</member>
        <member name="F:MS_no_combination">
no combination: Use this term if only one scan was recorded or there is no information about scans available.
</member>
        <member name="F:MS_isolation_window_lower_limit_OBSOLETE">
isolation window lower limit: The lowest m/z being isolated in an isolation window.
</member>
        <member name="F:MS_isolation_window_upper_limit_OBSOLETE">
isolation window upper limit: The highest m/z being isolated in an isolation window.
</member>
        <member name="F:MS_isolation_window_attribute">
isolation window attribute: Isolation window parameter.
</member>
        <member name="F:MS_enhanced_resolution_scan_OBSOLETE">
enhanced resolution scan: Scan with enhanced resolution.
</member>
        <member name="F:MS_time_delayed_fragmentation_spectrum">
time-delayed fragmentation spectrum: MSn spectrum in which the product ions are collected after a time delay, which allows the observation of lower energy fragmentation processes after precursor ion activation
</member>
        <member name="F:MS_enhanced_multiply_charged_spectrum">
enhanced multiply charged spectrum: MS1 spectrum that is enriched in multiply-charged ions compared to singly-charged ions
</member>
        <member name="F:MS_inclusive_high_intensity_threshold">
inclusive high intensity threshold: Threshold at or above which some action is taken.
</member>
        <member name="F:MS_inclusive_low_intensity_threshold">
inclusive low intensity threshold: Threshold at or below which some action is taken.
</member>
        <member name="F:MS_non_standard_data_array">
non-standard data array: A data array that contains data not covered by any other term in this group. Please do not use this term, if the binary data array type might be commonly used - contact the PSI-MS working group in order to have another CV term added.
</member>
        <member name="F:MS_sliding_average_smoothing">
sliding average smoothing (moving average smoothing): Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.
</member>
        <member name="F:MS_boxcar_smoothing">
boxcar smoothing (moving average smoothing): Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.
</member>
        <member name="F:MS_box_smoothing">
box smoothing (moving average smoothing): Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.
</member>
        <member name="F:MS_moving_average_smoothing">
moving average smoothing: Reduces intensity spikes by averaging each point with two or more adjacent points. The more adjacent points that used, the stronger the smoothing effect.
</member>
        <member name="F:MS_Weierstrass_transform">
Weierstrass transform (Gaussian smoothing): Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function.
</member>
        <member name="F:MS_binomial_smoothing">
binomial smoothing (Gaussian smoothing): Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function.
</member>
        <member name="F:MS_Gaussian_smoothing">
Gaussian smoothing: Reduces intensity spikes by convolving the data with a one-dimensional Gaussian function.
</member>
        <member name="F:MS_LOWESS_smoothing">
LOWESS smoothing: Reduces intensity spikes by applying a modeling method known as locally weighted polynomial regression. At each point in the data set a low-degree polynomial is fit to a subset of the data, with explanatory variable values near the point whose response is being estimated. The polynomial is fit using weighted least squares, giving more weight to points near the point whose response is being estimated and less weight to points further away. The value of the regression function for the point is then obtained by evaluating the local polynomial using the explanatory variable values for that data point. The LOESS fit is complete after regression function values have been computed for each of the n data points. Many of the details of this method, such as the degree of the polynomial model and the weights, are flexible.
</member>
        <member name="F:MS_Savitzky_Golay_smoothing">
Savitzky-Golay smoothing: Reduces intensity spikes by applying local polynomial regression (of degree k) on a distribution (of at least k+1 equally spaced points) to determine the smoothed value for each point. It tends to preserve features of the distribution such as relative maxima, minima and width, which are usually 'flattened' by other adjacent averaging techniques.
</member>
        <member name="F:MS_msPrefix_precursor_recalculation">
msPrefix precursor recalculation: Recalculates one or more precursor selected ions by peak detection in the isolation windows of high accuracy MS precursor scans.
</member>
        <member name="F:MS_precursor_recalculation">
precursor recalculation: A process that recalculates existing precursor selected ions with one or more algorithmically determined precursor selected ions.
</member>
        <member name="F:MS_below_precursor_intensity_dominance_charge_state_calculation">
below precursor intensity dominance charge state calculation: Infers charge state as single or amibiguously multiple by determining the fraction of intensity below the precursor m/z.
</member>
        <member name="F:MS_charge_state_calculation">
charge state calculation: A process that infers the charge state of an MSn spectrum's precursor(s) by the application of some algorithm.
</member>
        <member name="F:MS_spectrum_identifier_nativeID_format">
spectrum identifier nativeID format: spectrum=xsd:nonNegativeInteger
</member>
        <member name="F:MS_scan_number_only_nativeID_format">
scan number only nativeID format: scan=xsd:nonNegativeInteger
</member>
        <member name="F:MS_single_peak_list_nativeID_format">
single peak list nativeID format: file=xsd:IDREF
</member>
        <member name="F:MS_multiple_peak_list_nativeID_format">
multiple peak list nativeID format: index=xsd:nonNegativeInteger
</member>
        <member name="F:MS_Bruker_FID_nativeID_format">
Bruker FID nativeID format: file=xsd:IDREF
</member>
        <member name="F:MS_Bruker_BAF_nativeID_format">
Bruker BAF nativeID format: scan=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_Bruker_Agilent_YEP_nativeID_format">
Bruker/Agilent YEP nativeID format: scan=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_WIFF_nativeID_format">
WIFF nativeID format: sample=xsd:nonNegativeInteger period=xsd:nonNegativeInteger cycle=xsd:nonNegativeInteger experiment=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_Waters_nativeID_format">
Waters nativeID format: function=xsd:positiveInteger process=xsd:nonNegativeInteger scan=xsd:nonNegativeInteger.
</member>
        <member name="F:MS_Thermo_nativeID_format">
Thermo nativeID format: controllerType=xsd:nonNegativeInteger controllerNumber=xsd:positiveInteger scan=xsd:positiveInteger.
</member>
        <member name="F:MS_nativeID_format">
nativeID format (native spectrum identifier format): Describes how the native spectrum identifiers are formated.
</member>
        <member name="F:MS_native_spectrum_identifier_format">
native spectrum identifier format: Describes how the native spectrum identifiers are formated.
</member>
        <member name="F:MS_TOFCalibration">
TOFCalibration: Applies time of flight calibration.
</member>
        <member name="F:MS_SpectraFilter">
SpectraFilter: Applies a filter to peak spectra.
</member>
        <member name="F:MS_Resampler">
Resampler: Transforms an LC/MS map into a resampled map or a png image.
</member>
        <member name="F:MS_PeakPicker">
PeakPicker: Finds mass spectrometric peaks in profile mass spectra.
</member>
        <member name="F:MS_NoiseFilter">
NoiseFilter: Removes noise from profile spectra by using different smoothing techniques.
</member>
        <member name="F:MS_MapNormalizer">
MapNormalizer: Normalizes peak intensities in an MS run.
</member>
        <member name="F:MS_MapAligner">
MapAligner: Corrects retention time distortions between maps.
</member>
        <member name="F:MS_InternalCalibration">
InternalCalibration: Applies an internal calibration.
</member>
        <member name="F:MS_FileMerger">
FileMerger: Merges several MS files into one file.
</member>
        <member name="F:MS_FileFilter">
FileFilter: Extracts or manipulates portions of data from peak, feature or consensus feature files.
</member>
        <member name="F:MS_FileConverter">
FileConverter: Converts between different MS file formats.
</member>
        <member name="F:MS_DBImporter">
DBImporter: Imports data to an OpenMS database.
</member>
        <member name="F:MS_DBExporter">
DBExporter: Exports data from an OpenMS database to a file.
</member>
        <member name="F:MS_BaselineFilter">
BaselineFilter: Removes the baseline from profile spectra using a top-hat filter.
</member>
        <member name="F:MS_TOPP_software">
TOPP software: TOPP (The OpenMS proteomics pipeline) software.
</member>
        <member name="F:MS_TSQ_Quantum_Ultra">
TSQ Quantum Ultra: Thermo Scientific TSQ Quantum Ultra.
</member>
        <member name="F:MS_TSQ">
TSQ: ThermoFinnigan TSQ MS.
</member>
        <member name="F:MS_TSQ_7000">
TSQ 7000: ThermoFinnigan TSQ 7000 MS.
</member>
        <member name="F:MS_SSQ_7000">
SSQ 7000: ThermoFinnigan SSQ 7000 MS.
</member>
        <member name="F:MS_completion_time">
completion time: The time that a data processing action was finished.
</member>
        <member name="F:MS_high_intensity_data_point_removal">
high intensity data point removal: The removal of very high intensity data points.
</member>
        <member name="F:MS_retention_time_alignment">
retention time alignment: The correction of the spectrum scan times, as used e.g. in label-free proteomics.
</member>
        <member name="F:MS_selected_ion_m_z">
selected ion m/z: Mass-to-charge ratio of the ion selected for fragmentation
</member>
        <member name="F:MS_TSQ_Quantum_Ultra_AM">
TSQ Quantum Ultra AM: Thermo Scientific TSQ Quantum Ultra AM.
</member>
        <member name="F:MS_Bioworks_SRF_file">
Bioworks SRF file: Thermo Finnigan SRF file format.
</member>
        <member name="F:MS_Conversion_to_dta">
Conversion to dta: Conversion to dta format.
</member>
        <member name="F:MS_parameter_file">
parameter file: Parameter file used to configure the acquisition of raw data on the instrument.
</member>
        <member name="F:MS_WARP_LC">
WARP-LC: Bruker WARP-LC software.
</member>
        <member name="F:MS_TargetAnalysis">
TargetAnalysis: Bruker TargetAnalysis software.
</member>
        <member name="F:MS_spControl">
spControl: Bruker software for data acquisition.
</member>
        <member name="F:MS_QuantAnalysis">
QuantAnalysis: Bruker software for data analysis.
</member>
        <member name="F:MS_PureDisk">
PureDisk: BrukerPureDisk software.
</member>
        <member name="F:MS_ProteinScape">
ProteinScape: Bruker ProteinScape software.
</member>
        <member name="F:MS_PROTEINEER_LC">
PROTEINEER-LC: Bruker PROTEINEER-LC software.
</member>
        <member name="F:MS_PROTEINEER_spII">
PROTEINEER spII: Bruker PROTEINEER spII software.
</member>
        <member name="F:MS_PROTEINEER_fc">
PROTEINEER fc: Bruker PROTEINEER fc software.
</member>
        <member name="F:MS_PROTEINEER_dp">
PROTEINEER dp: Bruker PROTEINEER dp software.
</member>
        <member name="F:MS_PROTEINEER">
PROTEINEER: Bruker PROTEINEER software.
</member>
        <member name="F:MS_ProfileAnalysis">
ProfileAnalysis: Bruker software for data analysis.
</member>
        <member name="F:MS_PolyTools">
PolyTools: Bruker PolyTools software.
</member>
        <member name="F:MS_micrOTOFcontrol">
micrOTOFcontrol: Bruker software for data acquisition.
</member>
        <member name="F:MS_HCTcontrol">
HCTcontrol: Bruker software for data acquisition.
</member>
        <member name="F:MS_GenoTools">
GenoTools: Bruker GenoTools software.
</member>
        <member name="F:MS_GENOLINK">
GENOLINK: Bruker GENOLINK software.
</member>
        <member name="F:MS_flexImaging">
flexImaging: Bruker software for data analysis.
</member>
        <member name="F:MS_esquireControl">
esquireControl: Bruker software for data acquisition.
</member>
        <member name="F:MS_dpControl">
dpControl: Bruker software for data acquisition.
</member>
        <member name="F:MS_DataAnalysis">
DataAnalysis: Bruker software for data analysis.
</member>
        <member name="F:MS_CompassXtract">
CompassXtract: Bruker software library for data access.
</member>
        <member name="F:MS_CompassXport">
CompassXport: Bruker stand-alone software for data conversion.
</member>
        <member name="F:MS_Compass_Security_Pack">
Compass Security Pack: Bruker compass Security Pack software.
</member>
        <member name="F:MS_Compass_OpenAccess">
Compass OpenAccess: Bruker compass OpenAccess software.
</member>
        <member name="F:MS_Compass_for_micrOTOF">
Compass for micrOTOF: Bruker Compass for micrOTOF software.
</member>
        <member name="F:MS_Compass_for_HCT_esquire">
Compass for HCT/esquire: Bruker Compass for HCT/esquire software
</member>
        <member name="F:MS_Compass">
Compass: Bruker Compass software.
</member>
        <member name="F:MS_ClinProTools">
ClinProTools: Bruker ClinProTools software.
</member>
        <member name="F:MS_CLINPROT_robot">
CLINPROT robot: Bruker CLINPROT robot software.
</member>
        <member name="F:MS_CLINPROT_micro">
CLINPROT micro: Bruker CLINPROT micro software.
</member>
        <member name="F:MS_CLINPROT">
CLINPROT: Bruker CLINPROT software.
</member>
        <member name="F:MS_BioTools">
BioTools: Bruker software for data analysis.
</member>
        <member name="F:MS_apexControl">
apexControl: Bruker software for data acquisition.
</member>
        <member name="F:MS_ultraflex_III_TOF_TOF">
ultraflex III TOF/TOF: Bruker Daltonics' ultraflex III TOF/TOF: MALDI TOF
</member>
        <member name="F:MS_micrOTOF_Q_II">
micrOTOF-Q II: Bruker Daltonics' micrOTOF-Q II: ESI Q-TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_micrOTOF_Q">
micrOTOF-Q: Bruker Daltonics' micrOTOF-Q: ESI Q-TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_micrOTOF">
micrOTOF: Bruker Daltonics' micrOTOF: ESI TOF, APCI, APPI.
</member>
        <member name="F:MS_microflex_LT">
microflex LT: Bruker Daltonics' microflex LT: MALDI TOF.
</member>
        <member name="F:MS_HCTultra_ETD_II">
HCTultra ETD II: Bruker Daltonics' HCTultra ETD II: ESI Q-TOF, Nanospray, APCI, APPI, ETD
</member>
        <member name="F:MS_HCTultra_PTM">
HCTultra PTM: Bruker Daltonics' HCTultra PTM: ESI TOF, Nanospray, APCI, APPI, PTR
</member>
        <member name="F:MS_HCTultra">
HCTultra: Bruker Daltonics' HCTultra: ESI TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_Bruker_Daltonics_HCT_Series">
Bruker Daltonics HCT Series: Bruker Daltonics HCT Series
</member>
        <member name="F:MS_autoflex_III_smartbeam">
autoflex III smartbeam: Bruker Daltonics' autoflex III smartbeam: MALDI TOF.
</member>
        <member name="F:MS_apex_ultra">
apex ultra: Bruker Daltonics' apex ultra: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.
</member>
        <member name="F:MS_Waters_software">
Waters software: Waters software for data acquisition and analysis.
</member>
        <member name="F:MS_Thermo_Finnigan_software">
Thermo Finnigan software: Thermo Finnigan software for data acquisition and analysis.
</member>
        <member name="F:MS_Bruker_software">
Bruker software: Bruker software for data acquisition and analysis.
</member>
        <member name="F:MS_Applied_Biosystems_software">
Applied Biosystems software: Applied Biosystems|MDS SCIEX software for data acquisition and analysis.
</member>
        <member name="F:MS_AB_SCIEX_software">
AB SCIEX software: AB SCIEX or Applied Biosystems software for data acquisition and analysis.
</member>
        <member name="F:MS_Agilent_software">
Agilent software: Agilent software for data acquisition and analysis.
</member>
        <member name="F:MS_6300_Series_Ion_Trap_Data_Analysis_Software">
6300 Series Ion Trap Data Analysis Software: Software for data analysis of 6300 series ion trap mass spectrometers.
</member>
        <member name="F:MS_Spectrum_Mill_for_MassHunter_Workstation">
Spectrum Mill for MassHunter Workstation: Software for protein identification and characterization of complex protein digest mixtures.
</member>
        <member name="F:MS_METLIN">
METLIN: Personal Metabolite Database for MassHunter Workstation. Software for identification of human metabolites.
</member>
        <member name="F:MS_MassHunter_Mass_Profiler">
MassHunter Mass Profiler: Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data.
</member>
        <member name="F:MS_Genespring_MS">
Genespring MS: Software for quantitation and statistical analysis of TOF and Q-TOF LC/MS data.
</member>
        <member name="F:MS_MassHunter_BioConfirm">
MassHunter BioConfirm: Software for protein characterization.
</member>
        <member name="F:MS_MassHunter_Metabolite_ID">
MassHunter Metabolite ID: Software for identification of metabolites.
</member>
        <member name="F:MS_MassHunter_Quantitative_Analysis">
MassHunter Quantitative Analysis: Software for quantitation of Triple Quadruople and Quadrupole Time-of-Flight data.
</member>
        <member name="F:MS_MassHunter_Qualitative_Analysis">
MassHunter Qualitative Analysis: Software for data analysis of data from 6000 series instruments.
</member>
        <member name="F:MS_MassHunter_Easy_Access">
MassHunter Easy Access: Software for open access data acquisition.
</member>
        <member name="F:MS_MassHunter_Data_Acquisition">
MassHunter Data Acquisition: Software for data acquisition of 6000 series instruments.
</member>
        <member name="F:MS_6520_Quadrupole_Time_of_Flight_LC_MS">
6520 Quadrupole Time-of-Flight LC/MS: The 6520 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 26,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.
</member>
        <member name="F:MS_6510_Quadrupole_Time_of_Flight_LC_MS">
6510 Quadrupole Time-of-Flight LC/MS: The 6510 Quadrupole Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.
</member>
        <member name="F:MS_6220_Time_of_Flight_LC_MS">
6220 Time-of-Flight LC/MS: The 6220 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.
</member>
        <member name="F:MS_MultiQuant">
MultiQuant: Applied Biosystems|MDS SCIEX software for MRM-based quantitation.
</member>
        <member name="F:MS_MIDAS_Workflow_Designer">
MIDAS Workflow Designer: Applied Biosystems|MDS SCIEX software for MRM assay development.
</member>
        <member name="F:MS_Cliquid_">
Cliquid?: AB SCIEX or Applied Biosystems software.
</member>
        <member name="F:MS_Pro_BLAST">
Pro BLAST: Applied Biosystems|MDS SCIEX software for MS-BLAST identification.
</member>
        <member name="F:MS_Pro_Quant">
Pro Quant: Applied Biosystems|MDS SCIEX software for protein ID and quant by iTRAQ.
</member>
        <member name="F:MS_Pro_ICAT">
Pro ICAT: Applied Biosystems|MDS SCIEX software for protein ID and quant by ICAT.
</member>
        <member name="F:MS_Pro_ID">
Pro ID: Applied Biosystems|MDS SCIEX software for protein identification.
</member>
        <member name="F:MS_BioAnalyst">
BioAnalyst: Applied Biosystems|MDS SCIEX software for bio-related data exploration.
</member>
        <member name="F:MS_MRMPilot_Software">
MRMPilot Software: Applied Biosystems|MDS SCIEX software for MRM assay development.
</member>
        <member name="F:MS_MarkerView_Software">
MarkerView Software: Applied Biosystems|MDS SCIEX software for metabolomics and biomarker profiling.
</member>
        <member name="F:MS_TissueView_Software">
TissueView Software: Applied Biosystems|MDS SCIEX software for tissue imaging.
</member>
        <member name="F:MS_ProteinPilot_Software">
ProteinPilot Software: AB SCIEX or Applied Biosystems|MDS SCIEX software for protein ID and quant.
</member>
        <member name="F:MS_LightSight_Software">
LightSight Software: AB SCIEX or Applied Biosystems|MDS SCIEX software metabolite identification.
</member>
        <member name="F:MS_GPS_Explorer">
GPS Explorer: AB SCIEX or Applied Biosystems software for data acquisition and analysis.
</member>
        <member name="F:MS_4000_Series_Explorer_Software">
4000 Series Explorer Software: AB SCIEX or Applied Biosystems software for data acquisition and analysis.
</member>
        <member name="F:MS_4800_Proteomics_Analyzer">
4800 Proteomics Analyzer: Applied Biosystems|MDS SCIEX 4800 Proteomics Analyzer.
</member>
        <member name="F:MS_QSTAR_XL">
QSTAR XL: Applied Biosystems|MDS SCIEX QSTAR XL
</member>
        <member name="F:MS_QSTAR_Pulsar">
QSTAR Pulsar: Applied Biosystems|MDS SCIEX QSTAR Pulsar
</member>
        <member name="F:MS_QSTAR_Elite">
QSTAR Elite: AB SCIEX or Applied Biosystems|MDS SCIEX QSTAR Elite
</member>
        <member name="F:MS_API_5000">
API 5000: AB SCIEX or Applied Biosystems|MDS SCIEX API 5000 MS.
</member>
        <member name="F:MS_API_3200">
API 3200: AB SCIEX or Applied Biosystems|MDS SCIEX API 3200 MS.
</member>
        <member name="F:MS_4800_Plus_MALDI_TOF_TOF_Analyzer">
4800 Plus MALDI TOF-TOF Analyzer: AB SCIEX or Applied Biosystems|MDS SCIEX 4800 Plus MALDI TOF-TOF Analyzer.
</member>
        <member name="F:MS_3200_QTRAP">
3200 QTRAP: AB SCIEX or Applied Biosystems|MDS SCIEX QTRAP 3200.
</member>
        <member name="F:MS_Proteome_Discoverer">
Proteome Discoverer: Thermo Scientific software for data analysis of peptides and proteins.
</member>
        <member name="F:MS_Exactive">
Exactive: Thermo Scientific Exactive MS
</member>
        <member name="F:MS_GC_IsoLink">
GC IsoLink: Thermo Scientific GC IsoLink Isotope Ratio MS
</member>
        <member name="F:MS_Element_GD">
Element GD: Thermo Scientific Element GD Glow Discharge MS
</member>
        <member name="F:MS_Element_2">
Element 2: Thermo Scientific Element 2 HR-ICP-MS
</member>
        <member name="F:MS_Element_XR">
Element XR: Thermo Scientific Element XR HR-ICP-MS
</member>
        <member name="F:MS_TSQ_Quantum_Access">
TSQ Quantum Access: Thermo Scientific TSQ Quantum Access MS.
</member>
        <member name="F:MS_MALDI_LTQ_Orbitrap">
MALDI LTQ Orbitrap: Thermo Scientific MALDI LTQ Orbitrap MS
</member>
        <member name="F:MS_MALDI_LTQ_XL">
MALDI LTQ XL: Thermo Scientific MALDI LTQ XL MS
</member>
        <member name="F:MS_DSQ_II">
DSQ II: Thermo Scientific DSQ II GC-MS
</member>
        <member name="F:MS_DFS">
DFS: Thermo Scientific DFS HR GC-MS
</member>
        <member name="F:MS_LTQ_Orbitrap_XL_ETD">
LTQ Orbitrap XL ETD: Thermo Scientific LTQ Orbitrap XL MS with ETD
</member>
        <member name="F:MS_LTQ_XL_ETD">
LTQ XL ETD: Thermo Scientific LTQ XL MS with ETD
</member>
        <member name="F:MS_ITQ_1100">
ITQ 1100: Thermo Scientific ITQ 1100 GC-MS
</member>
        <member name="F:MS_ITQ_900">
ITQ 900: Thermo Scientific ITQ 900 GC-MS
</member>
        <member name="F:MS_ITQ_700">
ITQ 700: Thermo Scientific ITQ 700 GC-MS
</member>
        <member name="F:MS_DSQ">
DSQ: ThermoFinnigan DSQ GC-MS
</member>
        <member name="F:MS_possible_charge_state">
possible charge state: A possible charge state of the ion in a situation where the charge of an ion is known to be one of several possible values rather than a completely unknown value or determined to be a specific charge with reasonable certainty.
</member>
        <member name="F:MS_Q_Tof_Premier">
Q-Tof Premier: Waters Q-Tof Premier MS.
</member>
        <member name="F:MS_high_intensity_threshold">
high intensity threshold: Threshold above which some action is taken.
</member>
        <member name="F:MS_data_processing_parameter">
data processing parameter: Data processing parameter used in the data processing performed on the data file.
</member>
        <member name="F:MS_low_intensity_threshold">
low intensity threshold: Threshold below which some action is taken.
</member>
        <member name="F:MS_basepeak_chromatogram">
basepeak chromatogram: Chromatogram created by creating an array of the most intense peaks at each time point.
</member>
        <member name="F:MS_SIC_chromatogram">
SIC chromatogram (selected ion current chromatogram): Chromatogram created by creating an array of the measurements of a specific single ion current at each time point.
</member>
        <member name="F:MS_selected_ion_current_chromatogram">
selected ion current chromatogram: Chromatogram created by creating an array of the measurements of a specific single ion current at each time point.
</member>
        <member name="F:MS_chromatogram_type">
chromatogram type: Broad category or type of a chromatogram.
</member>
        <member name="F:MS_chromatogram">
chromatogram: The representation of detector response versus time.
</member>
        <member name="F:MS_image_current_detector">
image current detector (inductive detector): Inductive detector.
</member>
        <member name="F:MS_inductive_detector">
inductive detector: Inductive detector.
</member>
        <member name="F:MS_Accela_PDA">
Accela PDA: Accela PDA.
</member>
        <member name="F:MS_Surveyor_PDA">
Surveyor PDA: Surveyor PDA.
</member>
        <member name="F:MS_PDA">
PDA (photodiode array detector): An array detector used to record spectra in the ultraviolet and visable region of light.
</member>
        <member name="F:MS_photodiode_array_detector">
photodiode array detector: An array detector used to record spectra in the ultraviolet and visable region of light.
</member>
        <member name="F:MS_PDA_spectrum_OBSOLETE">
PDA spectrum: Spectrum generated from a photodiode array detector (ultraviolet/visible spectrum).
</member>
        <member name="F:MS_lowest_observed_wavelength">
lowest observed wavelength: Lowest wavelength observed in an EMR spectrum.
</member>
        <member name="F:MS_highest_observed_wavelength">
highest observed wavelength: Highest wavelength observed in an EMR spectrum.
</member>
        <member name="F:MS_wavelength_array">
wavelength array: A data array of electromagnetic radiation wavelength values.
</member>
        <member name="F:MS_preset_scan_configuration">
preset scan configuration: A user-defined scan configuration that specifies the instrumental settings in which a spectrum is acquired. An instrument may cycle through a list of preset scan configurations to acquire data. This is a more generic term for the Thermo \"scan event\", which is defined in the Thermo Xcalibur glossary as: a mass spectrometer scan that is defined by choosing the necessary scan parameter settings. Multiple scan events can be defined for each segment of time.
</member>
        <member name="F:MS_pwiz">
pwiz (ProteoWizard): ProteoWizard software for data analysis. Currently developed and maintained by Darren Kessner at Parag Mallick's lab (Center for Applied Molecular Medicine at the University of Southern California).
</member>
        <member name="F:MS_ProteoWizard">
ProteoWizard: ProteoWizard software for data analysis. Currently developed and maintained by Darren Kessner at Parag Mallick's lab (Center for Applied Molecular Medicine at the University of Southern California).
</member>
        <member name="F:MS_ProteinLynx_Global_Server_mass_spectrum_XML_file">
ProteinLynx Global Server mass spectrum XML file: Peak list file format used by ProteinLynx Global Server.
</member>
        <member name="F:MS_DTA_file">
DTA file: Sequest DTA file format.
</member>
        <member name="F:MS_AXIMA_Assurance_Linear_MALDI_TOF">
AXIMA Assurance Linear MALDI-TOF: Shimadzu Biotech AXIMA Assurance Linear MALDI-TOF MS.
</member>
        <member name="F:MS_AXIMA_Confidence_MALDI_TOF">
AXIMA Confidence MALDI-TOF: Shimadzu Biotech AXIMA Confidence MALDI-TOF (curved field reflectron) MS.
</member>
        <member name="F:MS_AXIMA_Performance_MALDI_TOF_TOF">
AXIMA Performance MALDI-TOF/TOF: Shimadzu Biotech AXIMA Performance MALDI-TOF/TOF MS.
</member>
        <member name="F:MS_AXIMA_CFR_plus">
AXIMA-CFR plus: Shimadzu Biotech AXIMA-CFR plus MS.
</member>
        <member name="F:MS_AXIMA_QIT">
AXIMA-QIT: Shimadzu Biotech AXIMA-QIT MS.
</member>
        <member name="F:MS_AXIMA_CFR_MALDI_TOF">
AXIMA CFR MALDI-TOF: Shimadzu Biotech AXIMA CFR MALDI-TOF MS.
</member>
        <member name="F:MS_LCMS_2010A">
LCMS-2010A: Shimadzu Scientific Instruments LCMS-2010A MS.
</member>
        <member name="F:MS_LCMS_2010EV">
LCMS-2010EV: Shimadzu Scientific Instruments LCMS-2010EV MS.
</member>
        <member name="F:MS_LCMS_IT_TOF">
LCMS-IT-TOF: Shimadzu Scientific Instruments LCMS-IT-TOF MS.
</member>
        <member name="F:MS_Shimadzu_Scientific_Instruments_instrument_model">
Shimadzu Scientific Instruments instrument model: Shimadzu Scientific Instruments instrument model.
</member>
        <member name="F:MS_Shimadzu_Biotech_instrument_model">
Shimadzu Biotech instrument model: Shimadzu Biotech instrument model.
</member>
        <member name="F:MS_ProteinLynx_Global_Server">
ProteinLynx Global Server: Waters software for data analysis.
</member>
        <member name="F:MS_Proteios">
Proteios: Database application and analysis platform for proteomics.
</member>
        <member name="F:MS_PQD">
PQD (pulsed q dissociation): A process that involves precursor ion activation at high Q, a time delay to allow the precursor to fragment, then a rapid pulse to low Q where all fragment ions are trapped. The product ions can then be scanned out of the ion trap and detected.
</member>
        <member name="F:MS_pulsed_q_dissociation">
pulsed q dissociation: A process that involves precursor ion activation at high Q, a time delay to allow the precursor to fragment, then a rapid pulse to low Q where all fragment ions are trapped. The product ions can then be scanned out of the ion trap and detected.
</member>
        <member name="F:MS_ETD">
ETD (electron transfer dissociation): A process to fragment ions in a mass spectrometer by inducing fragmentation of cations (e.g. peptides or proteins) by transferring electrons to them.
</member>
        <member name="F:MS_electron_transfer_dissociation">
electron transfer dissociation: A process to fragment ions in a mass spectrometer by inducing fragmentation of cations (e.g. peptides or proteins) by transferring electrons to them.
</member>
        <member name="F:MS_ion_optics_type">
ion optics type: The electrical potential used to impart kinetic energy to ions in a mass spectrometer.
</member>
        <member name="F:MS_measurement_method">
measurement method: An attribute of resolution when recording the detector response in absence of the analyte.
</member>
        <member name="F:MS_time_array">
time array: A data array of relative time offset values from a reference time.
</member>
        <member name="F:MS_thresholding">
thresholding (low intensity data point removal): The removal of very low intensity data points that are likely to be spurious noise rather than real signal.
</member>
        <member name="F:MS_low_intensity_data_point_removal">
low intensity data point removal: The removal of very low intensity data points that are likely to be spurious noise rather than real signal.
</member>
        <member name="F:MS_baseline_reduction">
baseline reduction: A process of removal of varying intensities generated due to variable energy absorption before further processing can take place. Baseline reduction facilitates meaningful comparision between intensities of m/z values.
</member>
        <member name="F:MS_smoothing">
smoothing: A process of reducing spikes of intensity in order to reduce noise while preserving real peak signal. Many algorithms can be applied for this process.
</member>
        <member name="F:MS_MzWiff">
MzWiff: A software program for converting Applied Biosystems wiff file format to the mzXML or mzML format. MzWiff is currently maintained at the Institute for Systems Biology. It replaces the slower mzStar program.
</member>
        <member name="F:MS_contact_organization">
contact organization: Home institution of the contact person.
</member>
        <member name="F:MS_contact_email">
contact email: Email adress of the contact person.
</member>
        <member name="F:MS_contact_URL">
contact URL: Uniform Resource Locator related to the contact person.
</member>
        <member name="F:MS_contact_address">
contact address: Postal address of a contact person.
</member>
        <member name="F:MS_contact_name">
contact name: Name of a contact person.
</member>
        <member name="F:MS_contact_person_attribute">
contact person attribute: Details about a person to contact in case of concern or dicussion about the file.
</member>
        <member name="F:MS_mzML_file">
mzML file: Proteomics Standards Inititative mzML file format.
</member>
        <member name="F:MS_selected_reaction_monitoring_spectrum">
selected reaction monitoring spectrum (SRM spectrum): Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.
</member>
        <member name="F:MS_multiple_reaction_monitoring_spectrum">
multiple reaction monitoring spectrum (SRM spectrum): Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.
</member>
        <member name="F:MS_MRM_spectrum">
MRM spectrum (SRM spectrum): Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.
</member>
        <member name="F:MS_SRM_spectrum">
SRM spectrum: Spectrum obtained when data are acquired from specific product ions corresponding to m/z values of selected precursor ions a recorded via two or more stages of mass spectrometry. The precursor/product ion pair is called a transition pair.  Data can be obtained for a single transition pair or multiple transition pairs.  Multiple time segments of different transition pairs can exist in a single file. Single precursor ions can have multiple product ions consitituting multiple transition pairs.  Selected reaction monitoring can be performed as tandem mass spectrometry in time or tandem mass spectrometry in space.
</member>
        <member name="F:MS_selected_ion_monitoring_spectrum">
selected ion monitoring spectrum (SIM spectrum): Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).
</member>
        <member name="F:MS_multiple_ion_monitoring_spectrum">
multiple ion monitoring spectrum (SIM spectrum): Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).
</member>
        <member name="F:MS_MIM_spectrum">
MIM spectrum (SIM spectrum): Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).
</member>
        <member name="F:MS_SIM_spectrum">
SIM spectrum: Spectrum obtained with the operation of a mass spectrometer in which the abundances of one ion or several ions of specific m/z values are recorded rather than the entire mass spectrum (Selected Ion Monitoring).
</member>
        <member name="F:MS_CRM_spectrum">
CRM spectrum: Spectrum generated from MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.
</member>
        <member name="F:MS_product_ion_spectrum">
product ion spectrum (MSn spectrum): MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.
</member>
        <member name="F:MS_nth_generation_product_ion_spectrum">
nth generation product ion spectrum (MSn spectrum): MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.
</member>
        <member name="F:MS_multiple_stage_mass_spectrometry_spectrum">
multiple-stage mass spectrometry spectrum (MSn spectrum): MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.
</member>
        <member name="F:MS_MSn_spectrum">
MSn spectrum: MSn refers to multi-stage MS/MS experiments designed to record product ion spectra where n is the number of product ion stages (progeny ions). For ion traps, sequential MS/MS experiments can be undertaken where n &gt; 2 whereas for a simple triple quadrupole system n= 2.
</member>
        <member name="F:MS_Single_Stage_Mass_Spectrometry">
Single-Stage Mass Spectrometry (MS1 spectrum): Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.
</member>
        <member name="F:MS_Q3_spectrum">
Q3 spectrum (MS1 spectrum): Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.
</member>
        <member name="F:MS_Q1_spectrum">
Q1 spectrum (MS1 spectrum): Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.
</member>
        <member name="F:MS_full_spectrum">
full spectrum (MS1 spectrum): Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.
</member>
        <member name="F:MS_MS1_spectrum">
MS1 spectrum: Mass spectrum created by a single-stage MS experiment or the first stage of a multi-stage experiment.
</member>
        <member name="F:MS_LCQ_Fleet">
LCQ Fleet: LCQ Fleet.
</member>
        <member name="F:MS_source_file">
source file (raw data file): Describes the type of file and its content.
</member>
        <member name="F:MS_raw_data_file">
raw data file: Describes the type of file and its content.
</member>
        <member name="F:MS_no_compression">
no compression: No Compression.
</member>
        <member name="F:MS_mean_of_spectra">
mean of spectra: Spectra is combined by calculating the mean of the spectra.
</member>
        <member name="F:MS_zlib_compression">
zlib compression: Zlib.
</member>
        <member name="F:MS_median_of_spectra">
median of spectra: Spectra is combined by calculating the median of the spectra.
</member>
        <member name="F:MS_binary_data_compression_type">
binary data compression type: Compression Type.
</member>
        <member name="F:MS_sum_of_spectra">
sum of spectra: Spectra Sum.
</member>
        <member name="F:MS_spectra_combination">
spectra combination: Method used to combine the mass spectra.
</member>
        <member name="F:MS_SHA_1">
SHA-1: SHA-1 (Secure Hash Algorithm-1) is a cryptographic hash function designed by the National Security Agency (NSA) and published by the NIST as a U. S. government standard. It is also used to verify file integrity.
</member>
        <member name="F:MS_MD5">
MD5: MD5 (Message-Digest algorithm 5) is a cryptographic hash function with a 128-bit hash value used to check the integrity of files.
</member>
        <member name="F:MS_Bruker_Agilent_YEP_file">
Bruker/Agilent YEP file: Bruker/Agilent YEP file format.
</member>
        <member name="F:MS_ISB_mzXML_file">
ISB mzXML file: Institute of Systems Biology mzXML file format.
</member>
        <member name="F:MS_Micromass_PKL_file">
Micromass PKL file: Micromass PKL file format.
</member>
        <member name="F:MS_PSI_mzData_file">
PSI mzData file: Proteomics Standards Inititative mzData file format.
</member>
        <member name="F:MS_Thermo_RAW_file">
Thermo RAW file: Thermo Scientific RAW file format.
</member>
        <member name="F:MS_ABI_WIFF_file">
ABI WIFF file: Applied Biosystems WIFF file format.
</member>
        <member name="F:MS_data_file_checksum_type">
data file checksum type: Checksum is a form of redundancy check, a simple way to protect the integrity of data by detecting errors in data.
</member>
        <member name="F:MS_mass_spectrometer_file_format">
mass spectrometer file format: The format of the file being used. This could be a instrument or vendor specific proprietary file format or a converted open file format.
</member>
        <member name="F:MS_spectrum_type">
spectrum type: Spectrum type.
</member>
        <member name="F:MS_GC_Quantum">
GC Quantum: GC Quantum.
</member>
        <member name="F:MS_LTQ_FT_Ultra">
LTQ FT Ultra: LTQ FT Ultra.
</member>
        <member name="F:MS_LTQ_Orbitrap_XL">
LTQ Orbitrap XL: LTQ Orbitrap XL.
</member>
        <member name="F:MS_LTQ_Orbitrap_Discovery">
LTQ Orbitrap Discovery: LTQ Orbitrap Discovery.
</member>
        <member name="F:MS_LCQ_Deca">
LCQ Deca: ThermoFinnigan LCQ Deca.
</member>
        <member name="F:MS_Trapper">
Trapper: A software program for converting Agilent MassHunter format to mzXML or mzML. Trapper was originally developed at the Institute for Systems Biology.
</member>
        <member name="F:MS_maldi_spot_identifier">
maldi spot identifier: Maldi Spot Identifier.
</member>
        <member name="F:MS_Analyst">
Analyst: AB SCIEX or Applied Biosystems|MDS SCIEX software for data acquisition.
</member>
        <member name="F:MS_time_unit_OBSOLETE">
time unit: Time Unit.
</member>
        <member name="F:MS_selection_window_attribute">
selection window attribute: Selection window properties that are associated with a value.
</member>
        <member name="F:MS_sample_attribute">
sample attribute: Sample properties that are associated with a value.
</member>
        <member name="F:MS_object_attribute">
object attribute: Object Attribute.
</member>
        <member name="F:MS_Conversion_to_mzData">
Conversion to mzData: Conversion of a file format to Proteomics Standards Initiative mzData file format.
</member>
        <member name="F:MS_Conversion_to_mzXML">
Conversion to mzXML: Conversion of a file format to Institute of Systems Biology mzXML file format.
</member>
        <member name="F:MS_Conversion_to_mzML">
Conversion to mzML: Conversion of a file format to Proteomics Standards Initiative mzData file format.
</member>
        <member name="F:MS_data_processing_action">
data processing action: Data processing attribute used to describe the type of data processing performed on the data file.
</member>
        <member name="F:MS_MzStar">
MzStar: A software program for converting Applied Biosystems wiff file format to mzXML format. MzStar was originally developed at the Institute for Systems Biology. It is now obsoleted by the MzWiff program.
</member>
        <member name="F:MS_ReAdW">
ReAdW: A software program for converting Thermo Finnigan RAW file format to mzXML or mzML. ReAdW was originally developed at the Institute for Systems Biology. Its whimsical interleaved spelling and capitalization is pronounced \"readraw\".
</member>
        <member name="F:MS_FlexControl">
FlexControl: Bruker software for data acquisition.
</member>
        <member name="F:MS_Voyager_Biospectrometry_Workstation_System">
Voyager Biospectrometry Workstation System: Applied Biosystems MALDI-TOF data acquisition and analysis system.
</member>
        <member name="F:MS_wolf">
wolf (massWolf): A software for converting Waters raw directory format to mzXML or mzML. massWolf was originally developed at the Institute for Systems Biology.
</member>
        <member name="F:MS_massWolf">
massWolf: A software for converting Waters raw directory format to mzXML or mzML. massWolf was originally developed at the Institute for Systems Biology.
</member>
        <member name="F:MS_4700_Explorer">
4700 Explorer: Applied Biosystems software for data acquisition and analysis.
</member>
        <member name="F:MS_Data_Explorer">
Data Explorer: Applied Biosystems software for data acquisition and analysis.
</member>
        <member name="F:MS_FlexAnalysis">
FlexAnalysis: Bruker software for data analysis.
</member>
        <member name="F:MS_MassLynx">
MassLynx: Micromass software for data acquisition and analysis.
</member>
        <member name="F:MS_Bioworks">
Bioworks: Thermo Finnigan software for data analysis of peptides and proteins.
</member>
        <member name="F:MS_Xcalibur">
Xcalibur: Thermo Finnigan software for data acquisition and analysis.
</member>
        <member name="F:MS_software">
software: Software related to the recording or transformation of spectra.
</member>
        <member name="F:MS_file_format_conversion">
file format conversion: Conversion of one file format to another.
</member>
        <member name="F:MS_instrument_serial_number">
instrument serial number: Serial Number of the instrument.
</member>
        <member name="F:MS_lowest_observed_m_z">
lowest observed m/z: Lowest m/z value observed in the m/z array.
</member>
        <member name="F:MS_highest_observed_m_z">
highest observed m/z: Highest m/z value observed in the m/z array.
</member>
        <member name="F:MS_Waters_raw_file">
Waters raw file: Waters data file found in a Waters RAW directory, generated from an MS acquisition.
</member>
        <member name="F:MS_spectrum_representation">
spectrum representation: Way in which the spectrum is represented, either with regularly spaced data points or with a list of centroided peaks.
</member>
        <member name="F:MS_data_file_content">
data file content: Describes the data content on the file.
</member>
        <member name="F:MS_64_bit_float">
64-bit float: 64-bit precision little-endian floating point conforming to IEEE-754.
</member>
        <member name="F:MS_64_bit_integer">
64-bit integer: Signed 64-bit little-endian integer.
</member>
        <member name="F:MS_32_bit_float">
32-bit float: 32-bit precision little-endian floating point conforming to IEEE-754.
</member>
        <member name="F:MS_16_bit_float_OBSOLETE">
16-bit float: Signed 16-bit float.
</member>
        <member name="F:MS_32_bit_integer">
32-bit integer: Signed 32-bit little-endian integer.
</member>
        <member name="F:MS_binary_data_type">
binary data type: Encoding type of binary data specifying the binary representation and precision, e.g. 64-bit float.
</member>
        <member name="F:MS_signal_to_noise_array">
signal to noise array: A data array of signal-to-noise values.
</member>
        <member name="F:MS_charge_array">
charge array: A data array of charge values.
</member>
        <member name="F:MS_intensity_array">
intensity array: A data array of intensity values.
</member>
        <member name="F:MS_m_z_array">
m/z array: A data array of m/z values.
</member>
        <member name="F:MS_binary_data_array">
binary data array: A data array of values.
</member>
        <member name="F:MS_filter_string">
filter string: A string unique to Thermo instrument describing instrument settings for the scan.
</member>
        <member name="F:MS_ms_level">
ms level: Stages of ms achieved in a multi stage mass spectrometry experiment.
</member>
        <member name="F:MS_precursor_activation_attribute">
precursor activation attribute: Precursor Activation Attribute.
</member>
        <member name="F:MS_activation_energy">
activation energy: Activation Energy.
</member>
        <member name="F:MS_ion_chemical_type">
ion chemical type: Ion Type.
</member>
        <member name="F:MS_ion_attribute">
ion attribute: Ion properties that are associated with a value.
</member>
        <member name="F:MS_ion_role">
ion role: Ion Role.
</member>
        <member name="F:MS_base_peak_intensity">
base peak intensity: The intensity of the greatest peak in the mass spectrum.
</member>
        <member name="F:MS_base_peak_m_z">
base peak m/z: M/z value of the signal of highest intensity in the mass spectrum.
</member>
        <member name="F:MS_scan_attribute">
scan attribute: Scan properties that are associated with a value.
</member>
        <member name="F:MS_dwell_time">
dwell time: The time spent gathering data across a peak.
</member>
        <member name="F:MS_scan_window_lower_limit">
scan window lower limit: The upper m/z bound of a mass spectrometer scan window.
</member>
        <member name="F:MS_scan_window_upper_limit">
scan window upper limit: The lower m/z bound of a mass spectrometer scan window.
</member>
        <member name="F:MS_spectrum_attribute">
spectrum attribute: Spectrum properties that are associated with a value.
</member>
        <member name="F:MS_full_scan">
full scan: Feature of the ion trap mass spectrometer where MS data is acquired over a mass range.
</member>
        <member name="F:MS_enhanced_resolution_scan">
enhanced resolution scan (zoom scan): Special scan mode, where data with improved resoltuion is acquired. This is typically achieved by scanning a more narrow m/z window or scanning with a lower scan rate.
</member>
        <member name="F:MS_zoom_scan">
zoom scan: Special scan mode, where data with improved resoltuion is acquired. This is typically achieved by scanning a more narrow m/z window or scanning with a lower scan rate.
</member>
        <member name="F:MS_instrument_attribute">
instrument attribute: Instrument properties that are associated with a value.
</member>
        <member name="F:MS_ABI">
ABI (Applied Biosystems instrument model): Applied Biosystems instrument model.
</member>
        <member name="F:MS_Applied_Biosystems_instrument_model">
Applied Biosystems instrument model: Applied Biosystems instrument model.
</member>
        <member name="F:MS_Thermo_Scientific_instrument_model">
Thermo Scientific instrument model: Thermo Scientific instrument model.
</member>
        <member name="F:MS_Finnigan_MAT_instrument_model">
Finnigan MAT instrument model: Finnigan MAT instrument model.
</member>
        <member name="F:MS_Thermo_Electron_instrument_model">
Thermo Electron instrument model: Thermo Electron Corporation instrument model.
</member>
        <member name="F:MS_Dionex_instrument_model">
Dionex instrument model: Dionex instrument model.
</member>
        <member name="F:MS_Agilent_instrument_model">
Agilent instrument model: Agilent instrument model.
</member>
        <member name="F:MS_Varian_instrument_model">
Varian instrument model: Varian instrument model.
</member>
        <member name="F:MS_Hitachi_instrument_model">
Hitachi instrument model: Hitachi instrument model.
</member>
        <member name="F:MS_ion_optics_attribute">
ion optics attribute: Ion optics involves components that help focus ion streams in mass spectrometry.
</member>
        <member name="F:MS_source_potential">
source potential: Potential difference at the MS source in volts.
</member>
        <member name="F:MS_nanospray_inlet">
nanospray inlet: Nanospray Inlet.
</member>
        <member name="F:MS_orbitrap">
orbitrap: An ion trapping device that consists of an outer barrel-like electrode and a coaxial inner spindle-like electrode that form an electrostatic field with quadro-logarithmic potential distribution. The frequency of harmonic oscillations of the orbitally trapped ions along the axis of the electrostatic field is independent of the ion velocity and is inversely proportional to the square root of m/z so that the trap can be used as a mass analyzer.
</member>
        <member name="F:MS_Thermo_Fisher_Scientific_instrument_model">
Thermo Fisher Scientific instrument model: Thermo Fisher Scientific instrument model. The company has gone through several names including Thermo Finnigan, Thermo Scientific.
</member>
        <member name="F:MS_source_attribute">
source attribute: Property of a source device that need a value.
</member>
        <member name="F:MS_detector_attribute">
detector attribute: Detector attribute recognized as a value.
</member>
        <member name="F:MS_mass_analyzer_attribute">
mass analyzer attribute: Analyzer properties that are associated with a value.
</member>
        <member name="F:MS_purgatory">
purgatory: Terms that will likely become obsolete unless there are wails of dissent.
</member>
        <member name="F:MS_1200_series_LC_MSD_VL">
1200 series LC/MSD VL: The LC/MSD VL ion trap is part of the family of Agilent ion trap mass spectrometers. It has ESI, APCI and APPI ion sources and is a useful ion trap when the amount of sample is not the limiting factor.
</member>
        <member name="F:MS_6410_Triple_Quad_LC_MS">
6410 Triple Quad LC/MS (6410 Triple Quadrupole LC/MS): The 6410 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. Mass range of the mass spectrometer is 15-1650 m/z, resolution is at three settings of 0.7 u (unit), 1.2 u (wide) and 2.5 u (widest). The mass accuracy for 6410 mass spectrometer is 0.1 across the mass range. The collision cell is a hexapole with linear acceleration.
</member>
        <member name="F:MS_6410_Triple_Quadrupole_LC_MS">
6410 Triple Quadrupole LC/MS: The 6410 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a Agilent triple quadrupole mass spectrometer. Mass range of the mass spectrometer is 15-1650 m/z, resolution is at three settings of 0.7 u (unit), 1.2 u (wide) and 2.5 u (widest). The mass accuracy for 6410 mass spectrometer is 0.1 across the mass range. The collision cell is a hexapole with linear acceleration.
</member>
        <member name="F:MS_6340_Ion_Trap_LC_MS">
6340 Ion Trap LC/MS: The 6340 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.
</member>
        <member name="F:MS_6330_Ion_Trap_LC_MS">
6330 Ion Trap LC/MS: The 6330 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.
</member>
        <member name="F:MS_6320_Ion_Trap_LC_MS">
6320 Ion Trap LC/MS: The 6320 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.25 resolution and mass range of 200-4000 with resolution of less than 3. The scan speed varies from 1650-27000 for the respective mass ranges.
</member>
        <member name="F:MS_6310_Ion_Trap_LC_MS">
6310 Ion Trap LC/MS: The 6310 Ion Trap LC/MS is a Agilent liquid chromatography instrument combined with a 6300 series Agilent ion trap. It has a mass range of 50-2200 between 0.6 to 0.35 resolution and mass range of 200-4000 with resolution of 3-4. The scan speed varies from 1650-27000 for the respective mass ranges.
</member>
        <member name="F:MS_6210_Time_of_Flight_LC_MS">
6210 Time-of-Flight LC/MS: The 6210 Time-of-Flight LC/MS is a Agilent liquid chromatography instrument combined with a Agilent time of flight mass spectrometer. This time of flight mass spectrometer has a m/z range of 50-12000, mass accuracy of less than 2 ppm and resolution greater than 13,000 at m/z 2722. It has multiple ion sources and can be used with multimode ion sources.
</member>
        <member name="F:MS_6140_Quadrupole_LC_MS">
6140 Quadrupole LC/MS: The 6140 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6140 Quadrupole mass spectrometer has m/z range of 10-1350, 2500 u/s scan speed in standard mode and 10000 u/s speed in fast-scan mode. It also uses multiple signal acquisition.
</member>
        <member name="F:MS_6130_Quadrupole_LC_MS">
6130 Quadrupole LC/MS: The 6130 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 series of Agilent mass spectrometers. The 6130 quadrupole mass spectrometer has m/z range of 2-3000, 2500 u/s scan speed in standard mode and 5250 u/s speed in fast-scan mode. It also uses multiple signal acquisition.
</member>
        <member name="F:MS_6120_Quadrupole_LC_MS">
6120 Quadrupole LC/MS: The 6120 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with a single quadrupole mass spectrometer from the 6100 Series of Agilent mass spectrometers. 6120 quadrupole mass spectrometer has m/z range of 10-1500, 2500 u/s scan speed and utilizes multiple signal acquisition.
</member>
        <member name="F:MS_6110_Quadrupole_LC_MS">
6110 Quadrupole LC/MS: The 6110 Quadrupole LC/MS system is a Agilent liquid chromatography instrument combined with an entry level single quadrupole mass spectrometer from the 6100 Series of Agilent quadrupole mass spectrometers. 6110 Quadrupole mass spectrometer has m/z range of 10-1500 and 2500 u/s scan speed. It proves useful for wide range of SIM quantitative applications.
</member>
        <member name="F:MS_1200_series_LC_MSD_SL">
1200 series LC/MSD SL: The 1200 Series LC/MSD SL ion trap belongs to the Agilent LC/MSD ion trap family. It provides fast polarity switching and multisignal data acquisition capabilities in a single run while also providing 5 stages of automated data dependent MS/MS and 11 stages of manual MS/MS.
</member>
        <member name="F:MS_alternating_OBSOLETE">
alternating: Alternating.
</member>
        <member name="F:MS_scan_polarity">
scan polarity: An acquisition mode to which specifies weather polarity is negative, positive or alternating.
</member>
        <member name="F:MS_mass_unit_OBSOLETE">
mass unit: A unit of measurement for mass.
</member>
        <member name="F:MS_instrument_configuration">
instrument configuration (instrument): Description of the instrument or the mass spectrometer.
</member>
        <member name="F:MS_instrument">
instrument: Description of the instrument or the mass spectrometer.
</member>
        <member name="F:MS_ion_optics">
ion optics: Device used in the construction of a mass spectrometer to focus, contain or otherwise manipulate ions.
</member>
        <member name="F:MS_additional_description">
additional description: Terms to describe Additional.
</member>
        <member name="F:MS_unit">
unit: Terms to describe units.
</member>
        <member name="F:MS_spectrum_instrument_description">
spectrum instrument description: Terms used to describe the spectrum.
</member>
        <member name="F:MS_source">
source: Terms to describe the source.
</member>
        <member name="F:MS_sample">
sample: Terms to describe the sample.
</member>
        <member name="F:MS_activation">
activation (precursor activation): Terms to describe the precursor activation.
</member>
        <member name="F:MS_precursor_activation">
precursor activation: Terms to describe the precursor activation.
</member>
        <member name="F:MS_ion_selection_attribute">
ion selection attribute: Ion selection properties that are associated with a value.
</member>
        <member name="F:MS_instrument_additional_description">
instrument additional description: Additional terms to describe the instrument as outlined in the mass spec doc, Appendix 1, section 1.5.
</member>
        <member name="F:MS_detector">
detector: The device that detects ions.
</member>
        <member name="F:MS_data_processing">
data processing (data transformation): Terms used to describe types of data processing.
</member>
        <member name="F:MS_data_transformation">
data transformation: Terms used to describe types of data processing.
</member>
        <member name="F:MS_analyzer">
analyzer (mass analyzer): Terms used to describe the Analyzer.
</member>
        <member name="F:MS_mass_analyzer">
mass analyzer: Terms used to describe the Analyzer.
</member>
        <member name="F:MS_LXQ">
LXQ: Finnigan LXQ MS.
</member>
        <member name="F:MS_LTQ_Orbitrap">
LTQ Orbitrap: Finnigan LTQ Orbitrap MS.
</member>
        <member name="F:MS_LTQ_FT">
LTQ FT: Finnigan LTQ FT MS.
</member>
        <member name="F:MS_LTQ">
LTQ: Finnigan LTQ MS.
</member>
        <member name="F:MS_FIB">
FIB (fast ion bombardment): The ionization of any species by the interaction of a focused beam of ions having a translational energy of several thousand eV with a solid sample.
</member>
        <member name="F:MS_fast_ion_bombardment">
fast ion bombardment: The ionization of any species by the interaction of a focused beam of ions having a translational energy of several thousand eV with a solid sample.
</member>
        <member name="F:MS_sequential_m_z_separation_method__">
sequential m/z separation method ?: TODO: Add definition.
</member>
        <member name="F:MS_m_z_Separation_Method">
m/z Separation Method: TODO: Add definition.
</member>
        <member name="F:MS_mass_analyzer_type">
mass analyzer type: Mass analyzer separates the ions according to their mass-to-charge ratio.
</member>
        <member name="F:MS_spectrum">
spectrum: A mass spectrum is an intensity vs m/z (mass-to-charge ratio) plot representing a chemical analysis.
</member>
        <member name="F:MS_scan">
scan: Function or process of the mass spectrometer where it records a spectrum.
</member>
        <member name="F:MS_unimolecular_dissociation">
unimolecular dissociation: Fragmentation reaction in which the molecularity is treated as one, irrespective of whether the dissociative state is that of a metastable ion produced in the ion source or results from collisional excitation of a stable ion.
</member>
        <member name="F:MS_surface_induced_reaction">
surface-induced reaction: A process wherein a reactant ion interacts with a surface to produce either chemically different species or a change in the internal energy of the reactant ion.
</member>
        <member name="F:MS_superelastic_collision">
superelastic collision: Collision in which the translational energy of the fast-moving collision partner is increased at the expense of internal energy of one or both collision partners.
</member>
        <member name="F:MS_ion_reaction">
ion reaction: Chemical transformation involving an ion.
</member>
        <member name="F:MS_partial_charge_transfer_reaction">
partial charge transfer reaction: Reaction of an ion with a neutral species in which some but not all of the ion charge is transferred to the neutral.
</member>
        <member name="F:MS_Multiphoton_Dissociation">
Multiphoton Dissociation (photodissociation): A process wherein the reactant ion is dissociated as a result of absorption of one or more photons.
</member>
        <member name="F:MS_photodissociation">
photodissociation: A process wherein the reactant ion is dissociated as a result of absorption of one or more photons.
</member>
        <member name="F:MS_McLafferty_Rearrangement">
McLafferty Rearrangement: A dissociation reaction triggered by transfer of a hydrogen atom via a 6-member transition state to the formal radical/charge site from a carbon atom four atoms removed from the charge/radical site (the gamma-carbon); subsequent rearrangement of electron density leads to expulsion of an olefin molecule. This term was originally applied to ketone ions where the charge/radical site is the carbonyl oxygen, but it is now more widely applied.
</member>
        <member name="F:MS_low_energy_collision_induced_dissociation">
low-energy collision-induced dissociation: A collision-induced dissociation process wherein the precursor ion has the translational energy lower than approximately 1000 eV. This process typically requires multiple collisions and the collisional excitation is cumulative.
</member>
        <member name="F:MS_low_energy_collisions">
low energy collisions: A collision between an ion and neutral species with translational energy approximately 1000 eV or lower.
</member>
        <member name="F:MS_kinetic_method">
kinetic method: An approach to determination of ion thermodynamic quantities by a bracketing procedure in which the relative probabilities of competing ion fragmentations are measured via the relative abundances of the reaction products. The extended kinetic method takes the associated entropy changes into account.
</member>
        <member name="F:MS_ion_neutral_species_exchange_reaction">
ion/neutral species exchange reaction: In this reaction an association reaction is accompanied by the subsequent or simultaneous liberation of a different neutral species as a product.
</member>
        <member name="F:MS_ion_neutral_species_reaction">
ion/neutral species reaction: A process wherein a charged species interacts with a neutral reactant to produce either chemically different species or changes in the internal energy of one or both of the reactants.
</member>
        <member name="F:MS_ion_neutral_complex">
ion/neutral complex: A particular type of transition state that lies between precursor and product ions on the reaction coordinate of some ion reactions.
</member>
        <member name="F:MS_ion_molecule_reaction">
ion/molecule reaction: The reaction of an ion with a neutral molecule. The term ion-molecule reaction is not recommended because the hyphen suggests a single species that is that is both an ion and a molecule.
</member>
        <member name="F:MS_ionizing_collision">
ionizing collision: The reaction of an ion with a neutral species in which one or more electrons are removed from either the ion or neutral.
</member>
        <member name="F:MS_ion_energy_loss_spectrum">
ion energy loss spectrum: A plot of the relative abundance of a beam or other collection of ions as a function their loss of translational energy in reactions with neutral species.
</member>
        <member name="F:MS_hydrogen_deuterium_exchange">
hydrogen/deuterium exchange: Exchange of hydrogen atoms with deuterium atoms in a molecule or pre-formed ion in solution prior to introduction into a mass spectrometer, or by reaction of an ion with a deuterated collision gas inside a mass spectrometer.
</member>
        <member name="F:MS_homolytic_cleavage">
homolytic cleavage: Fragmentation of an odd electron ion that results from one of a pair of electrons that form a bond between two atoms moving to form a pair with the odd electron on the atom at the apparent charge site. Fragmentation results in the formation of an even electron ion and a radical. This reaction involves the movement of a single electron and is symbolized by a single-barbed arrow. Synonymous with Homolysis.
</member>
        <member name="F:MS_high_energy_collision_induced_dissociation">
high-energy collision-induced dissociation: A collision-induced dissociation process wherein the projectile ion has the translational energy higher than approximately 1000 eV.
</member>
        <member name="F:MS_high_energy_collision">
high energy collision: Collision-induced dissociation process wherein the projectile ion has laboratory-frame translational energy higher than 1 keV.
</member>
        <member name="F:MS_heterolytic_cleavage">
heterolytic cleavage: Fragmentation of a molecule or ion in which both electrons forming the single bond that is broken remain on one of the atoms that were originally bonded. This term is synonymous with heterolysis.
</member>
        <member name="F:MS_collision_gas">
collision gas: An inert gas used for collisional excitation. The term target gas is not recommended.
</member>
        <member name="F:MS_collisional_excitation">
collisional excitation: The reaction of an ion with a neutral species in which the translational energy of the collision is converted into internal energy of the ion.
</member>
        <member name="F:MS_charge_transfer_reaction">
charge transfer reaction: The reaction of an ion with a neutral species in which some or all of the charge of the reactant ion is transferred to the neutral species.
</member>
        <member name="F:MS_charge_stripping_reaction">
charge stripping reaction: Reaction of a positive ion with a neutral species in which the positive charge on the product ion is greater than that on the reactant ion.
</member>
        <member name="F:MS_charge_permutation_reaction">
charge permutation reaction: The reaction of an ion with a neutral species with a resulting change in the magnitude or sign of the charge on the reactant ion.
</member>
        <member name="F:MS_charge_inversion_reaction">
charge inversion reaction: Reaction of an ion with a neutral species in which the charge on the product ion is reversed in sign with respect to the reactant ion.
</member>
        <member name="F:MS_charge_induced_fragmentation">
charge-induced fragmentation: Fragmentation of an odd electron ion in which the cleaved bond is adjacent to the apparent charge site. Synonymous with charge mediated fragmentation.
</member>
        <member name="F:MS_buffer_gas">
buffer gas: An inert gas used for collisional deactivation of internally excited ions.
</member>
        <member name="F:MS_beta_cleavage">
beta-cleavage: A homolytic cleavage where the bond fission occurs between at an atom removed from the apparent charge site atom by two bonds and an atom adjacent to that atom and removed from the aparent charge site by three bonds.
</member>
        <member name="F:MS_alpha_cleavage">
alpha-cleavage: A homolytic cleavage where the bond fission occurs between at the atom adjacent to the atom at the apparent charge site and an atom removed from the aparent charge site by two bonds.
</member>
        <member name="F:MS_association_reaction">
association reaction: The reaction of an ion with a neutral species in which the reactants combine to form a single ion.
</member>
        <member name="F:MS_vertical_ionization">
vertical ionization: A process in which an electron is removed from or added to a molecule without a change in the positions of the atoms. The resulting ion is typically in an excited vibrational state.
</member>
        <member name="F:MS_thermal_ionization">
thermal ionization: The ionization of a neutral species through contact with a high temperature surface.
</member>
        <member name="F:MS_surface_ionization">
surface ionization: The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.
</member>
        <member name="F:MS_surface_assisted_laser_desorption_ionization">
surface-assisted laser desorption ionization: The formation of gas-phase ions from molecules that are deposited on a particular surface substrate that is irradiated with a pulsed laser. See also matrix-assisted laser desorption ionization.
</member>
        <member name="F:MS_spark_ionization">
spark ionization: The formation of ions from a solid material by an intermittent electrical discharge.
</member>
        <member name="F:MS_soft_ionization">
soft ionization: The formation of gas-phase ions without extensive fragmentation.
</member>
        <member name="F:MS_secondary_ionization">
secondary ionization: The process in which ions are ejected from a sample surface as a result of bombardment by a primary beam of atoms or ions.
</member>
        <member name="F:MS_pre_ionization_state">
pre-ionization state: An electronic state capable of undergoing auto-Ionization.
</member>
        <member name="F:MS_plasma_desorption_ionization">
plasma desorption ionization: The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.
</member>
        <member name="F:MS_penning_ionization">
penning ionization: Ionization that occurs through the interaction of two or more neutral gaseous species, at least one of which is internally excited.
</member>
        <member name="F:MS_nanospray">
nanospray (nanoelectrospray): Electrospray ionization at a flow rate less than ~25 nL/min. Nanoelectrospray is synonymous with nanospray. The flow is dependent on the potenial on the tip of the electrospray needle and/or a gas presure to push the sample through the needle. See also electrospray ionization and microelectrospray.
</member>
        <member name="F:MS_nanoelectrospray">
nanoelectrospray: Electrospray ionization at a flow rate less than ~25 nL/min. Nanoelectrospray is synonymous with nanospray. The flow is dependent on the potenial on the tip of the electrospray needle and/or a gas presure to push the sample through the needle. See also electrospray ionization and microelectrospray.
</member>
        <member name="F:MS_microelectrospray">
microelectrospray: Electrospray ionization at a solvent flow rate of 300-800 nL/min where the flow is a result of a mechanical pump. See nanaoelectrospray.
</member>
        <member name="F:MS_membrane_inlet">
membrane inlet: A semi-permeable membrane separator that permits the passage of gas sample directly to the mass spectrometer ion source.
</member>
        <member name="F:MS_liquid_secondary_ionization">
liquid secondary ionization: The ionization of any species by the interaction of a focused beam of ions with a sample that is dissolved in a solvent matrix. See also fast atom bombardment and secondary ionization.
</member>
        <member name="F:MS_laser_desorption_ionization">
laser desorption ionization: The formation of gas-phase ions by the interaction of a pulsed laser with a solid or liquid material.
</member>
        <member name="F:MS_ionization_efficiency">
ionization efficiency: The ratio of the number of ions formed to the number of electrons, molecules or photons used.
</member>
        <member name="F:MS_ion_pair_formation">
ion-pair formation: The reaction of a molecule to form both a positive ion and negative ion fragment among the products.
</member>
        <member name="F:MS_ion_desolvation">
ion desolvation: The removal of solvent molecules clustered around a gas-phase ion by means of heating and/or collisions with gas molecules.
</member>
        <member name="F:MS_electron_ionization">
electron ionization: The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended.
</member>
        <member name="F:MS_dissociative_ionization">
dissociative ionization: The reaction of a gas-phase molecule that results in its decomposition to form products, one of which is an ion.
</member>
        <member name="F:MS_desorption_ionization_on_silicon">
desorption/ionization on silicon: The formation of ions by laser desorption ionization of a sample deposited on a porous silicon surface.
</member>
        <member name="F:MS_chemi_ionization">
chemi-ionization: The reaction of a neutral molecule with an internally excited molecule to form an ion. Note that this term is not synonymous with chemical ionization.
</member>
        <member name="F:MS_charge_exchange_ionization">
charge exchange ionization: The interaction of an ion with an atom or molecule in which the charge on the ion is transferred to the neutral without the dissociation of either. Synonymous with charge transfer ionization.
</member>
        <member name="F:MS_autoionization">
autoionization: The formation of an ion when an atom or molecule in a discrete state with an energy greater than the ionization threshold loses an electron spontaneously without further interaction with an energy source.
</member>
        <member name="F:MS_autodetachment">
autodetachment: The formation of a neutral when a negative ion in a disrtete state with an energy greater than the detachment threshold loses an electron spontaneously without further interaction with an energy source.
</member>
        <member name="F:MS_atmospheric_pressure_photoionization">
atmospheric pressure photoionization: Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.
</member>
        <member name="F:MS_associative_ionization">
associative ionization: An ionization process in which two excited atoms or molecules react to form a single positive ion and an electron.
</member>
        <member name="F:MS_adiabatic_ionization">
adiabatic ionization: A process whereby an electron is removed from an atom, ion, or molecule to produce an ion in its lowest energy state.
</member>
        <member name="F:MS_unstable_ion">
unstable ion: An ion with sufficient enerrgy to dissociate within the ion source.
</member>
        <member name="F:MS_stable_ion">
stable ion: An ion with internal energy sufficiently low that it does not rearrange or dissociate prior to detection in a mass spectrometer.
</member>
        <member name="F:MS_reference_ion">
reference ion: A stable ion whose structure is known with certainty. These ions are usually formed by direct ionization of a neutral molecule of known structure and are used to verify by comparison the structure of an unknown ion.
</member>
        <member name="F:MS_radical_ion">
radical ion: An ion, either a cation or anion, containing unpaired electrons in its ground state. The unpaired electron is denoted by a superscript dot alongside the superscript symbol for charge, such as for the molecular ion of a molecule M, that is, M+. Radical ions with more than one charge and/or more than one unpaired electron are denoted such as M(2+)(2). Unless the positions of the unpaired electron and charge can be associated with specific atoms, superscript charge designation should be placed before the superscript dot designation.
</member>
        <member name="F:MS_protonated_molecule">
protonated molecule: An ion formed by interaction of a neutral molecule with a proton and represented by the symbol [M + H]+, where M is the neutral molecule. The term 'protonated molecular ion,' 'quasi-molecular ion' and 'pseudo-molecular ion' are not recommended.
</member>
        <member name="F:MS_positive_ion">
positive ion: An atomic or molecular species having a net positive electric charge.
</member>
        <member name="F:MS_principal_ion">
principal ion: Most abundant ion of an isotope cluster, such as the 11B79Br2 81Br+ ion of m/z 250 of the cluster of isotopologue molecular ions of BBr3. The term principal ion has also been used to describe ions that have been artificially isotopically enriched in one or more positions such as CH3 13CH3+ or CH2D2 +, but those are best defined as isotopologue ions.
</member>
        <member name="F:MS_onium_ion">
onium ion: A positively charged hypervalent ion of the nonmetallic elements. Examples are the methonium ion CH5+, the hydrogenonium ion H3+ and the hydronium ion H3O+. Other examples are the carbonium, oxonium, sulfonium, nitronium, diazonium, phosphonium, and halonium ions. Onium ions are not limited to monopositive ions; multiply-charged onium ions exist such as the gitonic (proximal) oxonium dication H4O2+ and the distonic oxonium dication H2O+-CH2-CH2-OH2+.
</member>
        <member name="F:MS_non_classical_ion">
non-classical ion: Hyper-coordinated carbonium ion such as the penta-coordinated norbornyl cation. Note: Tri-coordinated carbenium ions are termed classical ions.
</member>
        <member name="F:MS_negative_ion">
negative ion: An atomic or molecular species having a net negative electric charge.
</member>
        <member name="F:MS_molecular_ion">
molecular ion: An ion formed by the removal of one or more electrons to form a positive ion or the addition off one or more electrons to form a negative ion.
</member>
        <member name="F:MS_metastable_ion">
metastable ion: An ion that is formed with internal energy higher than the threshold for dissociation but with a lifetime great enough to allow it to exit the ion source and enter the mass spectrometer where it dissociates before detection.
</member>
        <member name="F:MS_Isotopomeric_ion">
Isotopomeric ion: Isomeric ion having the same numbers of each isotopic atom but differing in their positions. Isotopomeric ions can be either configurational isomers in which two atomic isotopes exchange positions or isotopic stereoisomers. The term isotopomer is a shortening of isotopic isomer.
</member>
        <member name="F:MS_Isotopologue_ion">
Isotopologue ion: An ion that differs only in the isotopic composition of one or more of its constituent atoms. For example CH4+ and CH3D+ or 10BF3 and 11BF3. The term isotopologue is a contraction of isotopic homologue.
</member>
        <member name="F:MS_ion_">
ion?: An atomic or molecular species having a net positive or negative electric charge.
</member>
        <member name="F:MS_fragment_ion_OBSOLETE">
fragment ion: A product ion that results from the dissociation of a precursor ion.
</member>
        <member name="F:MS_enium_ion">
enium ion: A positively charged lower-valency ion of the nonmetallic elements. The methenium ion is CH3+. Other examples are the oxenium, sulfenium, nitrenium, phosphenium, and halenium ions.
</member>
        <member name="F:MS_distonic_ion">
distonic ion: A radical cation or anion in which the charge site and the unpaired electron spin cannot be both formally located in the same atom or group of atoms as it can be with a conventional ion. For example, CH2-OH2+ is a distonic ion whereas the radical cation of methanol, CH3OH+ is a conventional ion.
</member>
        <member name="F:MS_dimeric_ion">
dimeric ion: An ion formed by ionization of a dimer or by the association of an ion with its neutral counterpart such as [M2]+ or [M-H-M]+.
</member>
        <member name="F:MS_diagnostic_ion">
diagnostic ion: A product ion whose formation reveals structural or compositional information of its precursor. For instance, the phenyl cation in an electron ionization mass spectrum is a diagnostic ion for benzene and derivatives.
</member>
        <member name="F:MS_Conventional_ion">
Conventional ion: A radical cation or anion in which the charge site and the unpaired electron spin are both formally located in the same atom or group of atoms, as opposed to the spatially separate electronic configuration of distonic ions. The radical cation of methanol, CH3OH+, in which the charge and spin sites are formally located at the O atom is an example of a conventional ion, whereas .CH2-OH2+ is a distonic ion.
</member>
        <member name="F:MS_cluster_ion">
cluster ion: An ion formed by a multi-component atomic or molecular assembly of one or more ions with atoms or molecules, such as [(H20)nH]+, [(NaCl)nNa]+ and [(H3PO3)nHPO3]-.
</member>
        <member name="F:MS_cationized_molecule">
cationized molecule: An ion formed by the association of a cation with a neutral molecule, M, for example [M+ Na]+ and [M + K]+. The terms quasi-molecular ion and pseudo-molecular ion should not be used.
</member>
        <member name="F:MS_anti_aromatic_ion">
anti-aromatic ion: A planar cyclic ion with 4n ? electrons and is therefore not aromatic.
</member>
        <member name="F:MS_analog_ion">
analog ion: Ions that have similar chemical valence, for example the acetyl cation CH3-CO+ and the thioacetyl cation CH3-CS+.
</member>
        <member name="F:MS_aromatic_ion">
aromatic ion: A planar cyclic ion that obeys the Hckel (4n + 2) rule where n is a positive integer representing the number of conjugated Pi electrons. Charge delocalization leads to greater stability compared to a hypothetical localized structure.
</member>
        <member name="F:MS_adduct_ion">
adduct ion: Ion formed by the interaction of an ion with one or more atoms or molecules to form an ion containing all the constituent atoms of the precursor ion as well as the additional atoms from the associated atoms or molecules.
</member>
        <member name="F:MS_secondary_electron">
secondary electron: Electrons that are ejected from a sample surface as a result of bombardment by a primary beam of atoms, ions or photons. WAS IN DETECTOR TYPE. Where should it go?
</member>
        <member name="F:MS_postacceleration_detector">
postacceleration detector: A detector in which the charged particles are accelerated to a high velocity and impinge on a conversion dynode, emitting secondary electrons. The electrons are accelerated onto a phosphor screen, which emits photons that are in turn detected using a photomultiplier or other photon detector.
</member>
        <member name="F:MS_point_collector">
point collector: A detector in which the ion beam is focused onto a point and the individual ions arrive sequentially.
</member>
        <member name="F:MS_ion_to_photon_detector">
ion-to-photon detector: A detector in which ions strike a conversion dynode to produce electrons that in turn strike a phosphor and the resulting photons are detected by a photomultiplier.
</member>
        <member name="F:MS_focal_plane_collector">
focal plane collector: A detector for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane.
</member>
        <member name="F:MS_dynode">
dynode: One of a series of electrodes in a photomultiplier tube. Such an arrangement is able to amplify the current emitted by the photocathode.
</member>
        <member name="F:MS_conversion_dynode">
conversion dynode: A surface that is held at high potential such that ions striking the surface produce electrons that are subsequently detected.
</member>
        <member name="F:MS_array_detector">
array detector: Detector comprising several ion collection elements, arranged in a line or grid where each element is an individual detector.
</member>
        <member name="F:MS_Progeny_Fragment_Ion">
Progeny Fragment Ion (progeny ion): A charged product of a series of consecutive reactions that includes product ions, 1st generation product ions, 2nd generation product ions, etc. Given the sequential fragmentation scheme: M1+ -&gt; M2+ -&gt; M3+ -&gt; M4+ -&gt; M5+. M4+ is the precursor ion of M5+, a 1st generation product ion of M3+, a 2nd generation product ion of M2+ and a 3rd generation product ion of M1+.
</member>
        <member name="F:MS_progeny_ion">
progeny ion: A charged product of a series of consecutive reactions that includes product ions, 1st generation product ions, 2nd generation product ions, etc. Given the sequential fragmentation scheme: M1+ -&gt; M2+ -&gt; M3+ -&gt; M4+ -&gt; M5+. M4+ is the precursor ion of M5+, a 1st generation product ion of M3+, a 2nd generation product ion of M2+ and a 3rd generation product ion of M1+.
</member>
        <member name="F:MS_product_ion_spectrum_OBSOLETE">
product ion spectrum: A mass spectrum recorded from any spectrometer in which the appropriate m/z separation scan function is set to record the product ion or ions of selected precursor ions.
</member>
        <member name="F:MS_product_ion">
product ion: An ion formed as the product of a reaction involving a particular precursor ion. The reaction can be unimolecular dissociation to form fragment ions, an ion/molecule reaction, or simply involve a change in the number of charges. The term fragment ion is deprecated. The term daughter ion is deprecated.
</member>
        <member name="F:MS_precursor_ion_spectrum">
precursor ion spectrum: Spectrum generated by scanning precursor m/z while monitoring a fixed product m/z
</member>
        <member name="F:MS_precursor_ion">
precursor ion: An ion that reacts to form particular product ions. The reaction can be unimolecular dissociation, ion/molecule reaction, isomerization, or change in charge state. The term parent ion is not recommended.
</member>
        <member name="F:MS_nth_generation_product_ion_spectrum_OBSOLETE">
nth generation product ion spectrum: The mass spectrum recorded from any mass spectrometer in which the appropriate scan function can be set to record the appropriate generation product ion or ions of m/z selected precursor ions.
</member>
        <member name="F:MS_nth_generation_product_ion_scan">
nth generation product ion scan: The specific scan functions or processes that record the appropriate generation of product ion or ions of any m/z selected precursor ions.
</member>
        <member name="F:MS_nth_generation_product_ion">
nth generation product ion: Serial product ions from dissociation of selected precursor ions where n refers to the number of stages of dissociation. The term granddaughter ion is deprecated.
</member>
        <member name="F:MS_neutral_loss">
neutral loss: The loss of an uncharged species during a rearrangement process.
</member>
        <member name="F:MS_MS_MS_in_Space">
MS/MS in Space: A tandem mass spectrometry method in which product ion spectra are recorded in m/z analyzers separated in space. Specific m/z separation functions are designed such that in one section of the instrument ions are selected, dissociated in an intermediate region, and the product ions are then transmitted to another analyser for m/z separation and data acquisition.
</member>
        <member name="F:MS_MS_MS_in_Time">
MS/MS in Time: A tandem mass spectrometry method in which product ion spectra are recorded in a single m/z analyzer (such as a Paul Ion Trap or FTMS) in discreet steps over time. Ions in a specific m/z range are selected, dissociated, and the product ions analyzed sequentially in time.
</member>
        <member name="F:MS_Linked_Scan_at_Constant_B_1__E_E0___1_2___E">
Linked Scan at Constant B[1-(E/E0)]^1/2 / E: A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector placed in either order. The accelerating voltage is fixed while scanning the magnetic field, B, and electric field, E, simultaneously, so as to maintain the quantity B[1-(E/E0)]1/2/E at a constant value. This linked scan records a constant neutral mass loss (or gain) spectrum of dissociation or other reactions occurring in a field free region preceding the two sectors. E0 is the electric field required to transmit the singly charged analog of the desired neutral fragment. The term B[1-(E/E0)]1/2/E linked scan.
</member>
        <member name="F:MS_Linked_Scan_at_Constant_B2_E">
Linked Scan at Constant B2/E: A linked scan performed on a sector mass spectrometer that incorporates at least one electric sector plus one magnetic sector in either order. The accelerating voltage is fixed and the magnetic field, B, and the electric field, E, are scanned simultaneously so as to maintain the ratio B2/E at a constant value. This linked scan records a precursor ion spectrum of dissociation or other reactions occurring in the field free region preceding the two sectors. The term B2/E linked scan is not recommended.
</member>
        <member name="F:MS_Linked_Scan_at_Constant_E2_V">
Linked Scan at Constant E2/V: A linked scan performed on a sector instrument that incorporates at least one electric sector plus one magnetic sector. The electric sector field, E, and the accelerating voltage, V, are scanned simultaneously, so as to maintain the ratio E2/V at a constant value. This linked scan recordss a product ion spectrum of dissociation or other reactions occurring in a field free region (FFR) preceding the two sectors.
</member>
        <member name="F:MS_linked_scan_at_constant_b_e">
linked scan at constant b/e: A linked scan at constant B/E may be performed on a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector. The magnetic field B and the electric field E are scanned simultaneously while the accelerating voltage V is held constant, so as to maintain the ratio of the two fields constant. This linked scan may record a product ion spectrum of dissociation or other reactions occurring in a field free region preceding the two sectors.
</member>
        <member name="F:MS_linked_scan">
linked scan: A scan in an instrument with two or more m/z analysers or in a sector mass spectrometer that incorporates at least one magnetic sector and one electric sector. Two or more of the analyzers are scanned simultaneously so as to preserve a predetermined relationship between scan parameters to produce a product ion, precursor ion or constant neutral loss spectrum.
</member>
        <member name="F:MS_e_2_mass_spectrum">
e/2 mass spectrum: A mass spectrum obtained using a sector mass spectrometer in which the electric sector field E is set to half the value required to transmit the main ion-beam. This spectrum records the signal from doubly charged product ions of charge-stripping reactions.
</member>
        <member name="F:MS_consecutive_reaction_monitoring_OBSOLETE">
consecutive reaction monitoring: A type of MS/MS experiments with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.
</member>
        <member name="F:MS_constant_neutral_mass_loss_spectrum">
constant neutral mass loss spectrum (constant neutral loss spectrum): A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.
</member>
        <member name="F:MS_constant_neutral_loss_spectrum">
constant neutral loss spectrum: A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.
</member>
        <member name="F:MS_constant_neutral_mass_gain_spectrum">
constant neutral mass gain spectrum (constant neutral gain spectrum): A spectrum formed of all product ions that have been produced by gain of a pre-selected neutral mass following the reaction with and addition of the gas in a collision cell.
</member>
        <member name="F:MS_constant_neutral_gain_spectrum">
constant neutral gain spectrum: A spectrum formed of all product ions that have been produced by gain of a pre-selected neutral mass following the reaction with and addition of the gas in a collision cell.
</member>
        <member name="F:MS_Constant_Neutral_Mass_Gain_Scan">
Constant Neutral Mass Gain Scan (constant neutral gain scan): Spectrum of all precursor ions that undergo a selected m/z increment.
</member>
        <member name="F:MS_constant_neutral_gain_scan">
constant neutral gain scan: Spectrum of all precursor ions that undergo a selected m/z increment.
</member>
        <member name="F:MS_constant_neutral_loss_scan">
constant neutral loss scan: Spectrum of all precursor ions that undergo a selected m/z decrement.
</member>
        <member name="F:MS_charge_inversion_mass_spectrum">
charge inversion mass spectrum: The measurement of the relative abundance of ions that result from a charge inversion reaction as a function of m/z.
</member>
        <member name="F:MS_2E_Mass_Spectrum">
2E Mass Spectrum: A mass spectrum obtained by setting the electric sector field E to twice the value required to transmit the main ion-beam thereby allowing ions with a kinetic energy-to-charge ratio twice that of the main ion-beam to be transmitted. Product ions resulting from partial charge transfer reactions such as m^2+ + N ? m^+ + N^+ that occur in a collision cell (containing a gas, N) located in a field-free region preceding a magnetic and electric sector combination are detected. When the magnetic sector field B is scanned, a mass spectrum of singly charged product ions of doubly charged precursor ions is obtained.
</member>
        <member name="F:MS_static_field">
static field: An electric or magnetic field that does not change in time.
</member>
        <member name="F:MS_space_charge_effect">
space charge effect: The mutual repulsion of particles of like charge that limits the current in a charged-particle beam and causes beams or packets of charged particles to expand radially over time.
</member>
        <member name="F:MS_resonance_ion_ejection">
resonance ion ejection: A mode of ion ejection in a quadrupole ion trap that relies on a auxiliary radio frequency voltage that is applied to the end-cap electrodes. The voltage is tuned to the secular frequency of a particular ion to eject it.
</member>
        <member name="F:MS_orthogonal_extraction">
orthogonal extraction: The pulsed acceleration of ions perpendicular to their direction of travel into a time-of-flight mass spectrometer. Ions may be extracted from a directional ion source, drift tube or m/z separation stage.
</member>
        <member name="F:MS_mathieu_stability_diagram">
mathieu stability diagram: A graphical representation expressed in terms of reduced coordinates that describes charged particle motion in a quadrupole mass filter or quadrupole ion trap mass spectrometer.
</member>
        <member name="F:MS_mass_selective_instability">
mass selective instability: A method for selective ejection of ions according to their m/z value in an ion trap.
</member>
        <member name="F:MS_mass_selective_axial_ejection">
mass selective axial ejection: The use of mass selective instability to eject ions of selected m/z values from an ion trap.
</member>
        <member name="F:MS_scan_m_z_range_">
scan m/z range?: The limit of m/z over which a mass spectrometer can detect ions.
</member>
        <member name="F:MS_mass_limit">
mass limit: The m/z value above which ions cannot be detected in a mass spectrometer.
</member>
        <member name="F:MS_kinetic_energy_analyzer">
kinetic energy analyzer: A device for measuring the kinetic energy of charged particles using a retarding field, time-of-flight, or the extent of deflection in an electric or magnetic field.
</member>
        <member name="F:MS_fringing_field">
fringing field: The electric or magnetic field that extends from the edge of a sector, lens or other ion optics element.
</member>
        <member name="F:MS_first_stability_region">
first stability region: The region of a Mathieu stability diagram closest to the origin. Ions within this region can traverse the full length of a transmission quadrupole.
</member>
        <member name="F:MS_electric_field_strength">
electric field strength: The magnitude of the force per unit charge at a given point in space.
</member>
        <member name="F:MS_einzel_lens">
einzel lens: Three element charged particle lens in which the first and third elements are held at the same voltage. Such a lens produces focusing without changing the translational energy of the particle.
</member>
        <member name="F:MS_dynamic_mass_spectrometry">
dynamic mass spectrometry: A mass spectrometer in which m/z separation using one or more electric fields that vary with time.
</member>
        <member name="F:MS_cyclotron_motion">
cyclotron motion: The circular motion of a charged particle moving at velocity v in a magnetic field B that results from the force qvB.
</member>
        <member name="F:MS_accelerating_voltage">
accelerating voltage: The electrical potential used to impart kinetic energy to ions in a mass spectrometer.
</member>
        <member name="F:MS_transmission_quadrupole_mass_spectrometer">
transmission quadrupole mass spectrometer: A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis.
</member>
        <member name="F:MS_tandem_mass_spectrometer">
tandem mass spectrometer: A mass spectrometer designed for mass spectrometry/mass spectrometry.
</member>
        <member name="F:MS_sector_mass_spectrometer">
sector mass spectrometer: A mass spectrometer consisting of one or more magnetic sectors for m/z selection in a beam of ions. Such instruments may also have one or more electric sectors for energy selection.
</member>
        <member name="F:MS_reflectron">
reflectron: A time-of-flight mass spectrometer that uses a static electric field to reverse the direction of travel of the ions entering it. A reflectron improves mass resolution by assuring that ions of the same m/z but different kinetic energy arrive at the detector at the same time.
</member>
        <member name="F:MS_quistor">
quistor: An abbreviation of quadrupole ion storage trap. This term is synonymous with Paul Ion Trap. If so then add a synonym to paul and obsolete this term.
</member>
        <member name="F:MS_prolate_traochoidal_mass_spectrometer">
prolate traochoidal mass spectrometer: A mass spectrometer in which the ions of different m/z are separated by means of crossed electric and magnetic fields in such a way that the selected ions follow a prolate trochoidal path.
</member>
        <member name="F:MS_paul_ion_trap">
paul ion trap: A device that permits the trapping of ions by means of an alternating current voltage. The ejection of ions with a m/z less than a prescribed value and retention of those with higher mass depends on the application of radio frequency voltages between a ring electrode and two end-cap electrodes to confine the ions in a circular path. The choice of these voltages determines the m/z below which ions are ejected.
</member>
        <member name="F:MS_nier_johnson_geometry">
nier-johnson geometry: An arrangement for a double-focusing mass spectrometer in which a deflection of ?/2 radians in a radial electric field analyzer is followed by a magnetic deflection of ?/3 radians.
</member>
        <member name="F:MS_mattauch_herzog_geometry">
mattauch-herzog geometry: An arrangement for a double-focusing mass spectrometer in which a deflection of ?/(4 ?(2)) radians in a radial electric field is followed by a magnetic deflection of ?/2 radians.
</member>
        <member name="F:MS_mass_spectrum">
mass spectrum: A plot of the relative abundance of a beam or other collection of ions as a function of the mass-to-charge ratio (m/z).
</member>
        <member name="F:MS_mass_spectrometer">
mass spectrometer: An instrument that measures the mass-to-charge ratio and relative abundances of ions.
</member>
        <member name="F:MS_mass_spectrograph_obsolete">
mass spectrograph obsolete: An instrument that separates a beam of ions according to their mass-to-charge ratio in which the ions are directed onto a focal plane detector such as a photographic plate.
</member>
        <member name="F:MS_linear_ion_trap">
linear ion trap: A two dimensional Paul ion trap in which ions are confined in the axial dimension by means of an electric field at the ends of the trap.
</member>
        <member name="F:MS_hybrid_mass_spectrometer">
hybrid mass spectrometer: A mass spectrometer that combines m/z analyzers of different types to perform tandem mass spectrometry.
</member>
        <member name="F:MS_double_focusing_mass_spectrometer">
double-focusing mass spectrometer: A mass spectrometer that uses a magnetic sector for m/z focusing and an electric sector for energy focusing of an ion beam.
</member>
        <member name="F:MS_cyclotron">
cyclotron: A device that uses an oscillating electric field and magnetic field to accelerate charged particles.
</member>
        <member name="F:MS_TOF_MS">
TOF-MS (time-of-flight mass spectrometer): An instrument that separates ions by m/z in a field-free region after acceleration to a fixed kinetic energy.
</member>
        <member name="F:MS_time_of_flight_mass_spectrometer">
time-of-flight mass spectrometer: An instrument that separates ions by m/z in a field-free region after acceleration to a fixed kinetic energy.
</member>
        <member name="F:MS_TLF">
TLF (time lag focusing): Energy focusing in a time-of-flight mass spectrometer that is accomplished by introducing a time delay between the formation of the ions and the application of the accelerating voltage pulse.
</member>
        <member name="F:MS_time_lag_focusing">
time lag focusing: Energy focusing in a time-of-flight mass spectrometer that is accomplished by introducing a time delay between the formation of the ions and the application of the accelerating voltage pulse.
</member>
        <member name="F:MS_TIC">
TIC (total ion current): The sum of all the separate ion currents carried by the ions of different m/z contributing to a complete mass spectrum or in a specified m/z range of a mass spectrum.
</member>
        <member name="F:MS_total_ion_current">
total ion current: The sum of all the separate ion currents carried by the ions of different m/z contributing to a complete mass spectrum or in a specified m/z range of a mass spectrum.
</member>
        <member name="F:MS_SWIFT">
SWIFT (stored waveform inverse fourier transform): A technique to create excitation waveforms for ions in FT-ICR mass spectrometer or Paul ion trap. An excitation waveform in the time-domain is generated by taking the inverse Fourier transform of an appropriate frequency-domain programmed excitation spectrum, in which the resonance frequencies of ions to be excited are included. This technique may be used for selection of precursor ions in MS/MS experiments.
</member>
        <member name="F:MS_stored_waveform_inverse_fourier_transform">
stored waveform inverse fourier transform: A technique to create excitation waveforms for ions in FT-ICR mass spectrometer or Paul ion trap. An excitation waveform in the time-domain is generated by taking the inverse Fourier transform of an appropriate frequency-domain programmed excitation spectrum, in which the resonance frequencies of ions to be excited are included. This technique may be used for selection of precursor ions in MS/MS experiments.
</member>
        <member name="F:MS_SSMS_OBSOLETE">
SSMS (Spark Source Mass Spectrometry): Mass spectrometry using spark ionization.
</member>
        <member name="F:MS_Spark_Source_Mass_Spectrometry_OBSOLETE">
Spark Source Mass Spectrometry: Mass spectrometry using spark ionization.
</member>
        <member name="F:MS_SORI">
SORI (sustained off-resonance irradiation): A technique associated with Fourier transform ion cyclotron resonance (FT-ICR) mass spectrometry to carry out ion/neutral reactions such as low-energy collision-induced dissociation. A radio-frequency electric field of slightly off-resonance to the cyclotron frequency of the reactant ion cyclically accelerates and decelerates the reactant ion that is confined in the Penning ion trap. The ion's orbit does not exceed the dimensions of ion trap while the ion undergoes an ion/neutral species process that produces a high average translational energy for an extended time.
</member>
        <member name="F:MS_sustained_off_resonance_irradiation">
sustained off-resonance irradiation: A technique associated with Fourier transform ion cyclotron resonance (FT-ICR) mass spectrometry to carry out ion/neutral reactions such as low-energy collision-induced dissociation. A radio-frequency electric field of slightly off-resonance to the cyclotron frequency of the reactant ion cyclically accelerates and decelerates the reactant ion that is confined in the Penning ion trap. The ion's orbit does not exceed the dimensions of ion trap while the ion undergoes an ion/neutral species process that produces a high average translational energy for an extended time.
</member>
        <member name="F:MS_SIFT">
SIFT (selected ion flow tube): A device in which m/z selected ions are entrained in an inert carrier gas and undergo ion-molecule reactions.
</member>
        <member name="F:MS_selected_ion_flow_tube">
selected ion flow tube: A device in which m/z selected ions are entrained in an inert carrier gas and undergo ion-molecule reactions.
</member>
        <member name="F:MS_SI_OBSOLETE">
SI (suface ionization): The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.
</member>
        <member name="F:MS_suface_ionization_OBSOLETE">
suface ionization: The ionization of a neutral species when it interacts with a solid surface with an appropriate work function and temperature.
</member>
        <member name="F:MS_SEND">
SEND (surface enhanced neat desorption): Matrix-assisted laser desorption ionization in which the matrix is covalently linked to the target surface.
</member>
        <member name="F:MS_surface_enhanced_neat_desorption">
surface enhanced neat desorption: Matrix-assisted laser desorption ionization in which the matrix is covalently linked to the target surface.
</member>
        <member name="F:MS_SELDI">
SELDI (surface enhanced laser desorption ionization): The formation of ionized species in the gas phase from analytes deposited on a particular surface substrate which is irradiated with a laser beam of which wavelength is absorbed by the surface. See also desorption/ionization on silicon and laser desorption/ionization.
</member>
        <member name="F:MS_surface_enhanced_laser_desorption_ionization">
surface enhanced laser desorption ionization: The formation of ionized species in the gas phase from analytes deposited on a particular surface substrate which is irradiated with a laser beam of which wavelength is absorbed by the surface. See also desorption/ionization on silicon and laser desorption/ionization.
</member>
        <member name="F:MS_RGA">
RGA (residual gas analyzer): A mass spectrometer used to measure the composition and pressure of gasses in an evacuated chamber.
</member>
        <member name="F:MS_residual_gas_analyzer">
residual gas analyzer: A mass spectrometer used to measure the composition and pressure of gasses in an evacuated chamber.
</member>
        <member name="F:MS_REMPI">
REMPI (resonance enhanced multiphoton ionization): Multiphoton ionization in which the ionization cross section is significantly enhanced because the energy of the incident photons is resonant with an intermediate excited state of the neutral species.
</member>
        <member name="F:MS_resonance_enhanced_multiphoton_ionization">
resonance enhanced multiphoton ionization: Multiphoton ionization in which the ionization cross section is significantly enhanced because the energy of the incident photons is resonant with an intermediate excited state of the neutral species.
</member>
        <member name="F:MS_q">
q (collision quadrupole): A transmission quadrupole to which an oscillating potential is applied so as to focus a beam of ions through a collision gas with no m/z separation.
</member>
        <member name="F:MS_collision_quadrupole">
collision quadrupole: A transmission quadrupole to which an oscillating potential is applied so as to focus a beam of ions through a collision gas with no m/z separation.
</member>
        <member name="F:MS_PyMS">
PyMS (pyrolysis mass spectrometry): A mass spectrometry technique in which the sample is heated to the point of decomposition and the gaseous decomposition products are introduced into the ion source.
</member>
        <member name="F:MS_pyrolysis_mass_spectrometry">
pyrolysis mass spectrometry: A mass spectrometry technique in which the sample is heated to the point of decomposition and the gaseous decomposition products are introduced into the ion source.
</member>
        <member name="F:MS_PI">
PI (photoionization): The ionization of an atom or molecule by a photon, written M + h? ? M^+ + e. The term photon impact is not recommended.
</member>
        <member name="F:MS_photoionization">
photoionization: The ionization of an atom or molecule by a photon, written M + h? ? M^+ + e. The term photon impact is not recommended.
</member>
        <member name="F:MS_NRMS">
NRMS (neutralization reionization mass spectrometry): With this technique, m/z selected ions form neutrals by charge transfer to a collision gas or by dissociation. The neutrals are separated from the remaining ions and ionized in collisions with a second gas. This method is used to investigate reaction intermediates and other unstable species.
</member>
        <member name="F:MS_neutralization_reionization_mass_spectrometry">
neutralization reionization mass spectrometry: With this technique, m/z selected ions form neutrals by charge transfer to a collision gas or by dissociation. The neutrals are separated from the remaining ions and ionized in collisions with a second gas. This method is used to investigate reaction intermediates and other unstable species.
</member>
        <member name="F:MS_NICI">
NICI (Negative Ion chemical ionization): Chemical ionization that results in the formation of negative ions.
</member>
        <member name="F:MS_Negative_Ion_chemical_ionization">
Negative Ion chemical ionization: Chemical ionization that results in the formation of negative ions.
</member>
        <member name="F:MS_MSn">
MSn (multiple stage mass spectrometry): Multiple stages of precursor ion m/z selection followed by product ion detection for successive progeny ions.
</member>
        <member name="F:MS_multiple_stage_mass_spectrometry">
multiple stage mass spectrometry: Multiple stages of precursor ion m/z selection followed by product ion detection for successive progeny ions.
</member>
        <member name="F:MS_MS_MS">
MS/MS (mass spectrometry/mass spectrometry): The acquisition, study and spectra of the electrically charged products or precursors of a m/z selected ion or ions.
</member>
        <member name="F:MS_mass_spectrometry_mass_spectrometry">
mass spectrometry/mass spectrometry: The acquisition, study and spectra of the electrically charged products or precursors of a m/z selected ion or ions.
</member>
        <member name="F:MS_MS">
MS (mass spectrometry): The branch of science that deals with all aspects of mass spectrometers and the results obtained with these instruments.
</member>
        <member name="F:MS_mass_spectrometry">
mass spectrometry: The branch of science that deals with all aspects of mass spectrometers and the results obtained with these instruments.
</member>
        <member name="F:MS_MIKES">
MIKES (mass analyzed ion kinetic energy spectrometry): Spectra that are obtained from a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector in reverse geometry. The accelerating voltage, V, and the magnetic sector field, B, are set at fixed values to select the precursor ions, which are then allowed to dissociate or to react in a field free region between the two sectors. The kinetic energy product ions of m/z selected precursor ions is analyzed by scanning the electric sector field, E. The width of the product ion spectrum peaks is related to the kinetic energy release distribution (KERD) for the dissociation process.
</member>
        <member name="F:MS_mass_analyzed_ion_kinetic_energy_spectrometry">
mass analyzed ion kinetic energy spectrometry: Spectra that are obtained from a sector mass spectrometer that incorporates at least one magnetic sector plus one electric sector in reverse geometry. The accelerating voltage, V, and the magnetic sector field, B, are set at fixed values to select the precursor ions, which are then allowed to dissociate or to react in a field free region between the two sectors. The kinetic energy product ions of m/z selected precursor ions is analyzed by scanning the electric sector field, E. The width of the product ion spectrum peaks is related to the kinetic energy release distribution (KERD) for the dissociation process.
</member>
        <member name="F:MS_LD_OBSOLETE">
LD (Laser Desorption): The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules.
</member>
        <member name="F:MS_Laser_Ionization_MERGE_OBSOLETE">
Laser Ionization MERGE (Laser Desorption): The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules.
</member>
        <member name="F:MS_Laser_Desorption_OBSOLETE">
Laser Desorption: The formation of ions through the interaction of a laser with a material or with gas-phase ions or molecules.
</member>
        <member name="F:MS_KERD">
KERD (kinetic energy release distribution): Distribution of values of translational kinetic energy release for an ensemble of metastable ions undergoing a specific dissociation reaction.
</member>
        <member name="F:MS_kinetic_energy_release_distribution">
kinetic energy release distribution: Distribution of values of translational kinetic energy release for an ensemble of metastable ions undergoing a specific dissociation reaction.
</member>
        <member name="F:MS_IT">
IT (ion trap): A device for spatially confining ions using electric and magnetic fields alone or in combination.
</member>
        <member name="F:MS_ion_trap">
ion trap: A device for spatially confining ions using electric and magnetic fields alone or in combination.
</member>
        <member name="F:MS_IRMS">
IRMS (isotope ratio mass spectrometry): The measurement of the relative quantity of the different isotopes of an element in a material with a mass spectrometer.
</member>
        <member name="F:MS_isotope_ratio_mass_spectrometry">
isotope ratio mass spectrometry: The measurement of the relative quantity of the different isotopes of an element in a material with a mass spectrometer.
</member>
        <member name="F:MS_IRMPD">
IRMPD (infrared multiphoton dissociation): Multiphoton ionization where the reactant ion dissociates as a result of the absorption of multiple infrared photons.
</member>
        <member name="F:MS_infrared_multiphoton_dissociation">
infrared multiphoton dissociation: Multiphoton ionization where the reactant ion dissociates as a result of the absorption of multiple infrared photons.
</member>
        <member name="F:MS_IMS">
IMS (ion mobility spectrometry): The separation of ions according to their velocity through a buffer gas under the influence of an electric field.
</member>
        <member name="F:MS_ion_mobility_spectrometry">
ion mobility spectrometry: The separation of ions according to their velocity through a buffer gas under the influence of an electric field.
</member>
        <member name="F:MS_IKES">
IKES (ion kinetic energy spectrometry): A method of analysis in which a beam of ions is separated according to the ratio of its translational energy to charge.
</member>
        <member name="F:MS_ion_kinetic_energy_spectrometry">
ion kinetic energy spectrometry: A method of analysis in which a beam of ions is separated according to the ratio of its translational energy to charge.
</member>
        <member name="F:MS_GD_MS">
GD-MS (glow discharge ionization): The formation of ions in the gas phase and from solid samples at the cathode by application of a voltage to a low pressure gas.
</member>
        <member name="F:MS_glow_discharge_ionization">
glow discharge ionization: The formation of ions in the gas phase and from solid samples at the cathode by application of a voltage to a low pressure gas.
</member>
        <member name="F:MS_FI">
FI (field ionization): The removal of electrons from any species by interaction with a high electric field.
</member>
        <member name="F:MS_field_ionization">
field ionization: The removal of electrons from any species by interaction with a high electric field.
</member>
        <member name="F:MS_FD">
FD (field desorption): The formation of gas-phase ions from a material deposited on a solid surface in the presence of a high electric field. Because this process may encompass ionization by field ionization or other mechanisms, it is not recommended as a synonym for field desorption ionization.
</member>
        <member name="F:MS_field_desorption">
field desorption: The formation of gas-phase ions from a material deposited on a solid surface in the presence of a high electric field. Because this process may encompass ionization by field ionization or other mechanisms, it is not recommended as a synonym for field desorption ionization.
</member>
        <member name="F:MS_FAIMS">
FAIMS (high-field asymmetric waveform ion mobility spectrometry): The separation of ions between two concentric cylindrical electrodes due to application of a high voltage asymmetric waveform whereby ions migrate towards one of the two electrodes depending on the ratio of the high- to low-field mobility of the ion.
</member>
        <member name="F:MS_high_field_asymmetric_waveform_ion_mobility_spectrometry">
high-field asymmetric waveform ion mobility spectrometry: The separation of ions between two concentric cylindrical electrodes due to application of a high voltage asymmetric waveform whereby ions migrate towards one of the two electrodes depending on the ratio of the high- to low-field mobility of the ion.
</member>
        <member name="F:MS_FA">
FA (flowing afterglow): An ion source immersed in a flow of helium or other inert buffer gas that carries the ions through a meter-long reactor at pressures around 100 Pa.
</member>
        <member name="F:MS_flowing_afterglow">
flowing afterglow: An ion source immersed in a flow of helium or other inert buffer gas that carries the ions through a meter-long reactor at pressures around 100 Pa.
</member>
        <member name="F:MS_ESA">
ESA (electrostatic energy analyzer): A device consisting of conducting parallel plates, concentric cylinders or concentric spheres that separates charged particles according to their kinetic energy by means of an electric field that is constant in time.
</member>
        <member name="F:MS_electrostatic_energy_analyzer">
electrostatic energy analyzer: A device consisting of conducting parallel plates, concentric cylinders or concentric spheres that separates charged particles according to their kinetic energy by means of an electric field that is constant in time.
</member>
        <member name="F:MS_EM">
EM (electron multiplier): A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons. The secondary electrons are then accelerated to other electrodes or parts of a continuous electrode to produce further secondary electrons.
</member>
        <member name="F:MS_electron_multiplier">
electron multiplier: A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons. The secondary electrons are then accelerated to other electrodes or parts of a continuous electrode to produce further secondary electrons.
</member>
        <member name="F:MS_EIEIO">
EIEIO (electron-induced excitation in organics): The reaction of an ion with an electron in which the translational energy of the collision is converted into internal energy of the ion.
</member>
        <member name="F:MS_electron_induced_excitation_in_organics">
electron-induced excitation in organics: The reaction of an ion with an electron in which the translational energy of the collision is converted into internal energy of the ion.
</member>
        <member name="F:MS_EE">
EE (even-electron ion): An ion containing no unpaired electrons in its ground electronic state, e.g. CH3+ in its ground state.
</member>
        <member name="F:MS_even_electron_ion">
even-electron ion: An ion containing no unpaired electrons in its ground electronic state, e.g. CH3+ in its ground state.
</member>
        <member name="F:MS_ECD">
ECD (electron capture dissociation): A process in which a multiply protonated molecules interacts with a low energy electrons. Capture of the electron leads the liberation of energy and a reduction in charge state of the ion with the production of the (M + nH) (n-1)+ odd electron ion, which readily fragments.
</member>
        <member name="F:MS_electron_capture_dissociation">
electron capture dissociation: A process in which a multiply protonated molecules interacts with a low energy electrons. Capture of the electron leads the liberation of energy and a reduction in charge state of the ion with the production of the (M + nH) (n-1)+ odd electron ion, which readily fragments.
</member>
        <member name="F:MS_DLI">
DLI (direct liquid introduction): The delivery of a liquid sample into a mass spectrometer for spray or desorption ionization.
</member>
        <member name="F:MS_direct_liquid_introduction">
direct liquid introduction: The delivery of a liquid sample into a mass spectrometer for spray or desorption ionization.
</member>
        <member name="F:MS_DIP">
DIP (direct insertion probe): A device for introducing a solid or liquid sample into a mass spectrometer ion source for desorption ionization.
</member>
        <member name="F:MS_direct_insertion_probe">
direct insertion probe: A device for introducing a solid or liquid sample into a mass spectrometer ion source for desorption ionization.
</member>
        <member name="F:MS_DI">
DI (desorption ionization): The formation of ions from a solid or liquid material after the rapid vaporization of that sample.
</member>
        <member name="F:MS_desorption_ionization">
desorption ionization: The formation of ions from a solid or liquid material after the rapid vaporization of that sample.
</member>
        <member name="F:MS_DE">
DE (delayed extraction): The application of the accelerating voltage pulse after a time delay in desorption ionization from a surface. The extraction delay can produce energy focusing in a time-of-flight mass spectrometer.
</member>
        <member name="F:MS_delayed_extraction">
delayed extraction: The application of the accelerating voltage pulse after a time delay in desorption ionization from a surface. The extraction delay can produce energy focusing in a time-of-flight mass spectrometer.
</member>
        <member name="F:MS_CS">
CS (charge stripping): The reaction of a positive ion with an atom or molecule that results in the removal of one or more electrons from the ion.
</member>
        <member name="F:MS_charge_stripping">
charge stripping: The reaction of a positive ion with an atom or molecule that results in the removal of one or more electrons from the ion.
</member>
        <member name="F:MS_CRM">
CRM (consecutive reaction monitoring): MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.
</member>
        <member name="F:MS_consecutive_reaction_monitoring">
consecutive reaction monitoring: MSn experiment with three or more stages of m/z separation and in which a particular multi-step reaction path is monitored.
</member>
        <member name="F:MS_CRF">
CRF (charge-remote fragmentation): A fragmentation of an even-electron ion in which the cleaved bond is not adjacent to the apparent charge site.
</member>
        <member name="F:MS_charge_remote_fragmentation">
charge-remote fragmentation: A fragmentation of an even-electron ion in which the cleaved bond is not adjacent to the apparent charge site.
</member>
        <member name="F:MS_BIRD">
BIRD (blackbody infrared radiative dissociation): A special case of infrared multiphoton dissociation wherein excitation of the reactant ion is caused by absorption of infrared photons radiating from heated blackbody surroundings, which are usually the walls of a vacuum chamber. See also infrared multiphoton dissociation.
</member>
        <member name="F:MS_blackbody_infrared_radiative_dissociation">
blackbody infrared radiative dissociation: A special case of infrared multiphoton dissociation wherein excitation of the reactant ion is caused by absorption of infrared photons radiating from heated blackbody surroundings, which are usually the walls of a vacuum chamber. See also infrared multiphoton dissociation.
</member>
        <member name="F:MS_APPI_OBSOLETE">
APPI (Atmostpheric Pressure Photoionization): Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.
</member>
        <member name="F:MS_Atmostpheric_Pressure_Photoionization_OBSOLETE">
Atmostpheric Pressure Photoionization: Atmospheric pressure chemical ionization in which the reactant ions are generated by photo-ionization.
</member>
        <member name="F:MS_API">
API (atmospheric pressure ionization): Any ionization process in which ions are formed in the gas phase at atmospheric pressure.
</member>
        <member name="F:MS_atmospheric_pressure_ionization">
atmospheric pressure ionization: Any ionization process in which ions are formed in the gas phase at atmospheric pressure.
</member>
        <member name="F:MS_AP_MALDI">
AP MALDI (atmospheric pressure matrix-assisted laser desorption ionization): Matrix-assisted laser desorption ionization in which the sample target is at atmospheric pressure and the ions formed by the pulsed laser are sampled through a small aperture into the mass spectrometer.
</member>
        <member name="F:MS_atmospheric_pressure_matrix_assisted_laser_desorption_ionization">
atmospheric pressure matrix-assisted laser desorption ionization: Matrix-assisted laser desorption ionization in which the sample target is at atmospheric pressure and the ions formed by the pulsed laser are sampled through a small aperture into the mass spectrometer.
</member>
        <member name="F:MS_AMS">
AMS (accelerator mass spectrometry): A mass spectrometry technique in which atoms extracted from a sample are ionized, accelerated to MeV energies and separated according to their momentum, charge and energy.
</member>
        <member name="F:MS_accelerator_mass_spectrometry">
accelerator mass spectrometry: A mass spectrometry technique in which atoms extracted from a sample are ionized, accelerated to MeV energies and separated according to their momentum, charge and energy.
</member>
        <member name="F:MS_u_OBSOLETE">
u (unified atomic mass unit): A non-SI unit of mass (u) defined as one twelfth of ^12 C in its ground state and equal to 1.660 538 86(28) x 10^-27 kg.
</member>
        <member name="F:MS_unified_atomic_mass_unit_OBSOLETE">
unified atomic mass unit: A non-SI unit of mass (u) defined as one twelfth of ^12 C in its ground state and equal to 1.660 538 86(28) x 10^-27 kg.
</member>
        <member name="F:MS_transmission">
transmission: The ratio of the number of ions leaving a region of a mass spectrometer to the number entering that region.
</member>
        <member name="F:MS_TIC_chromatogram">
TIC chromatogram (total ion current chromatogram): Chromatogram obtained by plotting the total ion current detected in each of a series of mass spectra recorded as a function of retention time.
</member>
        <member name="F:MS_total_ion_current_chromatogram">
total ion current chromatogram: Chromatogram obtained by plotting the total ion current detected in each of a series of mass spectra recorded as a function of retention time.
</member>
        <member name="F:MS_mass_resolving_power_OBSOLETE">
mass resolving power: In a mass spectrum, the observed mass divided by the difference between two masses that can be separated. The method by which delta m was obtained and the mass at which the measurement was made should be reported.
</member>
        <member name="F:MS_PA">
PA (proton affinity): The proton affinity of a species M is defined as the negative of the enthalpy change for the reaction M + H+ -&gt;[M+H]+, where all species are in their ground rotational, vibrational and electronic states.
</member>
        <member name="F:MS_proton_affinity">
proton affinity: The proton affinity of a species M is defined as the negative of the enthalpy change for the reaction M + H+ -&gt;[M+H]+, where all species are in their ground rotational, vibrational and electronic states.
</member>
        <member name="F:MS_peak_intensity_OBSOLETE">
peak intensity: The height or area of a peak in a mass spectrum.
</member>
        <member name="F:MS_peak">
peak: A localized region of relatively large ion signal in a mass spectrum. Although peaks are often associated with particular ions, the terms peak and ion should not be used interchangeably.
</member>
        <member name="F:MS_odd_electron_rule">
odd-electron rule: Odd-electron ions may dissociate to form either odd or even-electron ions, whereas even-electron ions generally form even-electron fragment ions.
</member>
        <member name="F:MS_nominal_mass">
nominal mass: The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element rounded to the nearest integer value.
</member>
        <member name="F:MS_nitrogen_rule">
nitrogen rule: An organic molecule containing the elements C, H, O, S, P, or halogen has an odd nominal mass if it contains an odd number of nitrogen atoms.
</member>
        <member name="F:MS_MPI">
MPI (multiphoton ionization): Photoionization of an atom or molecule in which in two or more photons are absorbed.
</member>
        <member name="F:MS_multiphoton_ionization">
multiphoton ionization: Photoionization of an atom or molecule in which in two or more photons are absorbed.
</member>
        <member name="F:MS_MBMS">
MBMS (molecular beam mass spectrometry): A mass spectrometry technique in which the sample is introduced into the mass spectrometer as a molecular beam.
</member>
        <member name="F:MS_molecular_beam_mass_spectrometry">
molecular beam mass spectrometry: A mass spectrometry technique in which the sample is introduced into the mass spectrometer as a molecular beam.
</member>
        <member name="F:MS_monoisotopic_mass">
monoisotopic mass: The mass of an ion or molecule calculated using the mass of the most abundant isotope of each element.
</member>
        <member name="F:MS_molecular_mass">
molecular mass: The mass of one mole of a molecular substance (6.022 1415(10) x 10^23 molecules).
</member>
        <member name="F:MS_mass_number">
mass number: The sum of the protons and neutrons in an atom, molecule or ion.
</member>
        <member name="F:MS_mass_defect">
mass defect: The difference between the monoisotipic and nominal mass of a molecule or atom.
</member>
        <member name="F:MS_magnetic_deflection">
magnetic deflection: The deflection of charged particles in a magnetic field due to a force equal to qv B where q is the particle charge, v its velocity and B the magnetic field. Magnetic deflection of an ion beam is used for m/z separation in a magnetic sector mass spectrometer.
</member>
        <member name="F:MS_IDMS">
IDMS (isotope dilution mass spectrometry): A quantitative mass spectrometry technique in which an isotopically enriched compound is used as an internal standard.
</member>
        <member name="F:MS_isotope_dilution_mass_spectrometry">
isotope dilution mass spectrometry: A quantitative mass spectrometry technique in which an isotopically enriched compound is used as an internal standard.
</member>
        <member name="F:MS_IE">
IE (ionization energy): The minimum energy required to remove an electron from an atom or molecule to produce a positive ion.
</member>
        <member name="F:MS_ionization_energy">
ionization energy: The minimum energy required to remove an electron from an atom or molecule to produce a positive ion.
</member>
        <member name="F:MS_ioniazation_efficiency_OBSOLETE">
ioniazation efficiency: The ratio of the number of ions formed to the number of electrons, molecules or photons used.
</member>
        <member name="F:MS_ionization_cross_section">
ionization cross section: A measure of the probability that a given ionization process will occur when an atom or molecule interacts with a photon, electron, atom or molecule.
</member>
        <member name="F:MS_FFR">
FFR (field-free region): A section of a mass spectrometer in which there are no electric or magnetic fields.
</member>
        <member name="F:MS_field_free_region">
field-free region: A section of a mass spectrometer in which there are no electric or magnetic fields.
</member>
        <member name="F:MS_exact_mass">
exact mass: The calculated mass of an ion or molecule containing a single isotope of each atom.
</member>
        <member name="F:MS_electron_energy_obsolete">
electron energy obsolete: The potential difference through which electrons are accelerated before they are used to bring about electron ionization.
</member>
        <member name="F:MS_EA">
EA (electron affinity): The electron affinity of M is the minimum energy required for the process M- ? M + e where M- and M are in their ground rotational, vibrational and electronic states and the electron has zero kinetic energy.
</member>
        <member name="F:MS_electron_affinity">
electron affinity: The electron affinity of M is the minimum energy required for the process M- ? M + e where M- and M are in their ground rotational, vibrational and electronic states and the electron has zero kinetic energy.
</member>
        <member name="F:MS_Da_OBSOLETE">
Da (dalton): A non-SI unit of mass (symbol Da) that is equal to the unified atomic mass unit: 1.660 538 86(28) x 10^-27 kg.
</member>
        <member name="F:MS_dalton_OBSOLETE">
dalton: A non-SI unit of mass (symbol Da) that is equal to the unified atomic mass unit: 1.660 538 86(28) x 10^-27 kg.
</member>
        <member name="F:MS_z_OBSOLETE">
z (OBSOLETE charge number): OBSOLETE. The total charge on an ion divided by the electron charge e. OBSOLETED 2009-10-27 since this was viewed as a duplication of 00041 charge state.
</member>
        <member name="F:MS_OBSOLETE_charge_number_OBSOLETE">
OBSOLETE charge number: OBSOLETE. The total charge on an ion divided by the electron charge e. OBSOLETED 2009-10-27 since this was viewed as a duplication of 00041 charge state.
</member>
        <member name="F:MS_BP">
BP (base peak): The peak in a mass spectrum that has the greatest intensity. This term may be applied to the spectra of pure substances or mixtures.
</member>
        <member name="F:MS_base_peak">
base peak: The peak in a mass spectrum that has the greatest intensity. This term may be applied to the spectra of pure substances or mixtures.
</member>
        <member name="F:MS_AE">
AE (appearance energy): The minimum energy that must be imparted to an atom or molecule to produce a specified ion. The term appearance potential is not recommended.
</member>
        <member name="F:MS_appearance_energy">
appearance energy: The minimum energy that must be imparted to an atom or molecule to produce a specified ion. The term appearance potential is not recommended.
</member>
        <member name="F:MS_average_mass">
average mass: The mass of an ion or molecule calculated using the average mass of each element weighted for its natural isotopic abundance.
</member>
        <member name="F:MS_accurate_mass">
accurate mass: An experimentally determined mass that is can be to determine a unique elemental formula. For ions less than 200 u, a measurement with 5 ppm accuracy is sufficient to determine the elemental composition.
</member>
        <member name="F:MS_SRM">
SRM (selected reaction monitoring): Data acquired from specific product ions corresponding to m/z selected precursor ions recorded via multiple stages of mass spectrometry. Selected reaction monitoring can be performed in time or in space.
</member>
        <member name="F:MS_selected_reaction_monitoring">
selected reaction monitoring: Data acquired from specific product ions corresponding to m/z selected precursor ions recorded via multiple stages of mass spectrometry. Selected reaction monitoring can be performed in time or in space.
</member>
        <member name="F:MS_SIM">
SIM (selected ion monitoring): The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum.
</member>
        <member name="F:MS_Multiple_Ion_Monitoring">
Multiple Ion Monitoring (selected ion monitoring): The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum.
</member>
        <member name="F:MS_selected_ion_monitoring">
selected ion monitoring: The operation of a mass spectrometer in which the intensities of several specific m/z values are recorded rather than the entire mass spectrum.
</member>
        <member name="F:MS_Voyager_DE_STR">
Voyager-DE STR: Applied Biosystems/MDS SCIEX Voyager-DE STR MS.
</member>
        <member name="F:MS_Voyager_DE_PRO">
Voyager-DE PRO: Applied Biosystems/MDS SCIEX Voyager-DE PRO MS.
</member>
        <member name="F:MS_ultraflex_TOF_TOF">
ultraflex TOF/TOF: Bruker Daltonics' ultraflex TOF/TOF: MALDI TOF.
</member>
        <member name="F:MS_ultraflex">
ultraflex: Bruker Daltonics' ultraflex: MALDI TOF.
</member>
        <member name="F:MS_ultima">
ultima: IonSpec Ultima MS.
</member>
        <member name="F:MS_TSQ_Quantum">
TSQ Quantum: ThermoFinnigan TSQ Quantum MS.
</member>
        <member name="F:MS_TRITON">
TRITON: ThermoFinnigan TRITON MS.
</member>
        <member name="F:MS_TRACE_DSQ">
TRACE DSQ: ThermoFinnigan TRACE DSQ MS.
</member>
        <member name="F:MS_TEMPUS_TOF">
TEMPUS TOF: ThermoFinnigan TEMPUS TOF MS.
</member>
        <member name="F:MS_SymBiot_XVI">
SymBiot XVI: Applied Biosystems/MDS SCIEX SymBiot XVI MS.
</member>
        <member name="F:MS_SymBiot_I">
SymBiot I: Applied Biosystems/MDS SCIEX SymBiot I MS.
</member>
        <member name="F:MS_Surveyor_MSQ">
Surveyor MSQ: ThermoFinnigan Surveyor MSQ MS.
</member>
        <member name="F:MS_Quattro_UItima">
Quattro UItima: Waters Quattro Uitima MS.
</member>
        <member name="F:MS_quattro_micro">
quattro micro: Waters Quattro micro MS.
</member>
        <member name="F:MS_QSTAR">
QSTAR: Applied Biosystems/MDS SCIEX QSTAR MS.
</member>
        <member name="F:MS_Q_Tof_ultima">
Q-Tof ultima: Waters Q-Tof Ultima MS.
</member>
        <member name="F:MS_Q_Tof_micro">
Q-Tof micro: Waters Q-Tof micro MS.
</member>
        <member name="F:MS_Q_TRAP">
Q TRAP: Applied Biosystems/MDS SCIEX Q TRAP MS.
</member>
        <member name="F:MS_proteomics_solution_1">
proteomics solution 1: Applied Biosystems/MDS SCIEX Proteomics Solution 1 MS.
</member>
        <member name="F:MS_PolarisQ">
PolarisQ: ThermoFinnigan PolarisQ MS.
</member>
        <member name="F:MS_Platform_ICP">
Platform ICP: Waters Platform ICP MS.
</member>
        <member name="F:MS_OmniFlex">
OmniFlex: Bruker Daltonics' OmniFlex: MALDI TOF.
</member>
        <member name="F:MS_OMEGA_2001">
OMEGA-2001: IonSpec OMEGA-2001 MS.
</member>
        <member name="F:MS_OMEGA">
OMEGA: IonSpec OMEGA MS.
</member>
        <member name="F:MS_NG_5400">
NG-5400: Waters NG-5400 MS.
</member>
        <member name="F:MS_neptune">
neptune: ThermoFinnigan NEPTUNE MS.
</member>
        <member name="F:MS_microTOF_LC">
microTOF LC: Bruker Daltonics' microTOF LC: ESI TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_microflex">
microflex: Bruker Daltonics' microflex: MALDI TOF.
</member>
        <member name="F:MS_MAT95XP_Trap">
MAT95XP Trap: ThermoFinnigan MAT95XP Trap MS.
</member>
        <member name="F:MS_MAT95XP">
MAT95XP: ThermoFinnigan MAT95XP MS.
</member>
        <member name="F:MS_MAT900XP_Trap">
MAT900XP Trap: ThermoFinnigan MAT900XP Trap MS.
</member>
        <member name="F:MS_MAT900XP">
MAT900XP: ThermoFinnigan MAT900XP MS.
</member>
        <member name="F:MS_MAT253">
MAT253: ThermoFinnigan MAT253 MS.
</member>
        <member name="F:MS_M_LDI_LR">
M@LDI LR: Waters MALDI LR MS.
</member>
        <member name="F:MS_M_LDI_L">
M@LDI L: Waters MALDI L MS.
</member>
        <member name="F:MS_LCQ_Deca_XP_Plus">
LCQ Deca XP Plus: ThermoFinnigan LCQ Deca XP Plus MS.
</member>
        <member name="F:MS_LCQ_Classic">
LCQ Classic: ThermoFinnigan LCQ Classic MS.
</member>
        <member name="F:MS_LCQ_Advantage">
LCQ Advantage: ThermoFinnigan LCQ Advantage MS.
</member>
        <member name="F:MS_IsoProbe_T">
IsoProbe T: Waters IsoProbe T MS.
</member>
        <member name="F:MS_IsoProbe">
IsoProbe: Waters IsoProbe MS.
</member>
        <member name="F:MS_IsoPrime">
IsoPrime: Waters IsoPrime MS.
</member>
        <member name="F:MS_HiRes_MALDI">
HiRes MALDI: IonSpec HiResMALDI MS.
</member>
        <member name="F:MS_HiRes_ESI">
HiRes ESI: IonSpec HiResESI MS.
</member>
        <member name="F:MS_HCTplus">
HCTplus: Bruker Daltonics' HCTplus: ESI Q-TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_HCT">
HCT: Bruker Daltonics' HCT: ESI Q-TOF, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_GCT">
GCT: Waters GCT MS.
</member>
        <member name="F:MS_explorer">
explorer: IonSpec Explorer MS.
</member>
        <member name="F:MS_esquire_6000">
esquire 6000: Bruker Daltonics' esquire 6000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_esquire_4000">
esquire 4000: Bruker Daltonics' esquire 4000: linear ion trap, ESI, MALDI, Nanospray, APCI, APPI.
</member>
        <member name="F:MS_ELEMENT2">
ELEMENT2: ThermoFinnigan ELEMENT2 MS.
</member>
        <member name="F:MS_DELTAplusXP">
DELTAplusXP: ThermoFinnigan DELTAplusXP MS.
</member>
        <member name="F:MS_DELTA_plusAdvantage">
DELTA plusAdvantage: ThermoFinnigan DELTA plusAdvantage MS.
</member>
        <member name="F:MS_BioTOF_Q">
BioTOF-Q: Bruker Daltonics' BioTOF-Q: ESI Q-TOF.
</member>
        <member name="F:MS_BioTOF_II">
BioTOF II: Bruker Daltonics' BioTOF II: ESI TOF.
</member>
        <member name="F:MS_Auto_Spec_Ultima_NT">
Auto Spec Ultima NT: Waters AutoSpec Ultima NT MS.
</member>
        <member name="F:MS_autoflex_TOF_TOF">
autoflex TOF/TOF: Bruker Daltonics' autoflex TOF/TOF MS: MALDI TOF.
</member>
        <member name="F:MS_autoflex_II">
autoflex II: Bruker Daltonics' autoflex II: MALDI TOF.
</member>
        <member name="F:MS_API_4000">
API 4000: Applied Biosystems/MDS SCIEX API 4000 MS.
</member>
        <member name="F:MS_API_3000">
API 3000: Applied Biosystems/MDS SCIEX API 3000 MS.
</member>
        <member name="F:MS_API_2000">
API 2000: Applied Biosystems/MDS SCIEX API 2000 MS.
</member>
        <member name="F:MS_API_150EX_Prep">
API 150EX Prep: Applied Biosystems/MDS SCIEX API 150EX Prep MS.
</member>
        <member name="F:MS_API_150EX">
API 150EX: Applied Biosystems/MDS SCIEX API 150EX MS.
</member>
        <member name="F:MS_apex_Q">
apex Q: Bruker Daltonics' apex Q: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.
</member>
        <member name="F:MS_apex_IV">
apex IV: Bruker Daltonics' apex IV: ESI, MALDI, Nanospray, APCI, APPI, Qh-FT_ICR.
</member>
        <member name="F:MS_4700_Proteomics_Analyzer">
4700 Proteomics Analyzer: Applied Biosystems/MDS SCIEX 4700 Proteomics Analyzer MS.
</member>
        <member name="F:MS_4000_Q_TRAP">
4000 Q TRAP: Applied Biosystems/MDS SCIEX Q 4000 TRAP MS.
</member>
        <member name="F:MS_percent_collision_energy">
percent collision energy: Collision energy required to fragment an ion represented as a percent value.
</member>
        <member name="F:MS_eV_OBSOLETE">
eV (electron volt): A non-SI unit of energy (eV) defined as the energy acquired by a particle containing one unit of charge through a potential difference of one volt. An electron-volt is equal to 1.602 176 53(14) x 10^-19 J.
</member>
        <member name="F:MS_electron_volt_OBSOLETE">
electron volt: A non-SI unit of energy (eV) defined as the energy acquired by a particle containing one unit of charge through a potential difference of one volt. An electron-volt is equal to 1.602 176 53(14) x 10^-19 J.
</member>
        <member name="F:MS_SID">
SID (surface-induced dissociation): Fragmentation that results from the collision of an ion with a surface.
</member>
        <member name="F:MS_surface_induced_dissociation">
surface-induced dissociation: Fragmentation that results from the collision of an ion with a surface.
</member>
        <member name="F:MS_PSD">
PSD (post-source decay): A technique specific to reflectron time-of-flight mass spectrometers where product ions of metastable transitions or collision-induced dissociations generated in the drift tube prior to entering the reflectron are m/z separated to yield product ion spectra.
</member>
        <member name="F:MS_post_source_decay">
post-source decay: A technique specific to reflectron time-of-flight mass spectrometers where product ions of metastable transitions or collision-induced dissociations generated in the drift tube prior to entering the reflectron are m/z separated to yield product ion spectra.
</member>
        <member name="F:MS_PD">
PD (plasma desorption): The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.
</member>
        <member name="F:MS_plasma_desorption">
plasma desorption: The ionization of material in a solid sample by bombarding it with ionic or neutral atoms formed as a result of the fission of a suitable nuclide, typically 252Cf. Synonymous with fission fragment ionization.
</member>
        <member name="F:MS_CID">
CID (collision-induced dissociation): The dissociation of an ion after collisional excitation. The term collisional-activated dissociation is not recommended.
</member>
        <member name="F:MS_collision_induced_dissociation">
collision-induced dissociation: The dissociation of an ion after collisional excitation. The term collisional-activated dissociation is not recommended.
</member>
        <member name="F:MS_percent_of_base_peak">
percent of base peak: The magnitude of a peak or measurement element expressed in terms of the percentage of the magnitude of the base peak intensity.
</member>
        <member name="F:MS_number_of_counts">
number of counts: The number of counted events observed in one or a group of elements of a detector.
</member>
        <member name="F:MS_positive_scan">
positive scan: Polarity of the scan is positive.
</member>
        <member name="F:MS_negative_scan">
negative scan: Polarity of the scan is negative.
</member>
        <member name="F:MS_Continuum_Mass_Spectrum">
Continuum Mass Spectrum (profile spectrum): A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis.
</member>
        <member name="F:MS_continuous_mass_spectrum">
continuous mass spectrum (profile spectrum): A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis.
</member>
        <member name="F:MS_profile_spectrum">
profile spectrum: A profile mass spectrum is created when data is recorded with ion current (counts per second) on one axis and mass/charge ratio on another axis.
</member>
        <member name="F:MS_Discrete_Mass_Spectrum">
Discrete Mass Spectrum (centroid spectrum): Processing of profile data to produce spectra that contains discrete peaks of zero width. Often used to reduce the size of dataset.
</member>
        <member name="F:MS_centroid_spectrum">
centroid spectrum: Processing of profile data to produce spectra that contains discrete peaks of zero width. Often used to reduce the size of dataset.
</member>
        <member name="F:MS_Waters_instrument_model">
Waters instrument model: Waters Corporation instrument model.
</member>
        <member name="F:MS_Thermo_Finnigan_instrument_model">
Thermo Finnigan instrument model: ThermoFinnigan from Thermo Electron Corporation instrument model.
</member>
        <member name="F:MS_Shimadzu_instrument_model">
Shimadzu instrument model: Shimadzu corporation instrument model.
</member>
        <member name="F:MS_IonSpec_instrument_model">
IonSpec instrument model: IonSpec corporation instrument model.
</member>
        <member name="F:MS_Bruker_Daltonics_instrument_model">
Bruker Daltonics instrument model: Bruker Daltonics instrument model.
</member>
        <member name="F:MS_AB_SCIEX_instrument_model">
AB SCIEX instrument model: The brand of instruments from the joint venture between Applied Biosystems and MDS Analytical Technologies (formerly MDS SCIEX). Previously branded as \"Applied Biosystems|MDS SCIEX\".
</member>
        <member name="F:MS_transient_recorder">
transient recorder: A detector acquisition mode used for detecting transient signals.
</member>
        <member name="F:MS_TDC">
TDC (time-digital converter): A device for converting a signal of sporadic pluses into a digital representation of their time indices.
</member>
        <member name="F:MS_time_digital_converter">
time-digital converter: A device for converting a signal of sporadic pluses into a digital representation of their time indices.
</member>
        <member name="F:MS_pulse_counting">
pulse counting: Definition to do.
</member>
        <member name="F:MS_ADC">
ADC (analog-digital converter): Analog-to-digital converter (abbreviated ADC, A/D or A to D) is an electronic integrated circuit (i/c) that converts continuous signals to discrete digital numbers.
</member>
        <member name="F:MS_analog_digital_converter">
analog-digital converter: Analog-to-digital converter (abbreviated ADC, A/D or A to D) is an electronic integrated circuit (i/c) that converts continuous signals to discrete digital numbers.
</member>
        <member name="F:MS_PMT">
PMT (photomultiplier): A detector for conversion of the ion/electron signal into photon(s) which are then amplified and detected.
</member>
        <member name="F:MS_photomultiplier">
photomultiplier: A detector for conversion of the ion/electron signal into photon(s) which are then amplified and detected.
</member>
        <member name="F:MS_multi_collector">
multi-collector: A detector system commonly used in inductively coupled plasma mass spectrometers.
</member>
        <member name="F:MS_multichannel_plate">
multichannel plate (microchannel plate detector): A thin plate that contains a closely spaced array of channels that each act as a continuous dynode particle multiplier. A charged particle, fast neutral particle, or photon striking the plate causes a cascade of secondary electrons that ultimately exits the opposite side of the plate.
</member>
        <member name="F:MS_microchannel_plate_detector">
microchannel plate detector: A thin plate that contains a closely spaced array of channels that each act as a continuous dynode particle multiplier. A charged particle, fast neutral particle, or photon striking the plate causes a cascade of secondary electrons that ultimately exits the opposite side of the plate.
</member>
        <member name="F:MS_focal_plane_array">
focal plane array: An array of detectors for spatially disperse ion beams in which all ions simultaneously impinge on the detector plane.
</member>
        <member name="F:MS_faraday_cup">
faraday cup: A conducting cup or chamber that intercepts a charged particle beam and is electrically connected to a current measuring device.
</member>
        <member name="F:MS_EMT">
EMT (electron multiplier tube): A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons.
</member>
        <member name="F:MS_electron_multiplier_tube">
electron multiplier tube: A device to amplify the current of a beam or packet of charged particles or photons by incidence upon the surface of an electrode to produce secondary electrons.
</member>
        <member name="F:MS_Daly">
Daly (daly detector): Detector consisting of a conversion dynode, scintillator and photomultiplier. The metal knob at high potential emits secondary electrons when ions impinge on the surface. The secondary electrons are accelerated onto the scintillator that produces light that is then detected by the photomultiplier detector.
</member>
        <member name="F:MS_daly_detector">
daly detector: Detector consisting of a conversion dynode, scintillator and photomultiplier. The metal knob at high potential emits secondary electrons when ions impinge on the surface. The secondary electrons are accelerated onto the scintillator that produces light that is then detected by the photomultiplier detector.
</member>
        <member name="F:MS_conversion_dynode_photomultiplier">
conversion dynode photomultiplier: A detector in which ions strike a conversion dynode to produce electrons that in turn generate photons through a phosphorescent screen that are detected by a photomultiplier.
</member>
        <member name="F:MS_conversion_dynode_electron_multiplier">
conversion dynode electron multiplier: A surface that is held at high potential so that ions striking the surface produce electrons that are subsequently detected.
</member>
        <member name="F:MS_Channeltron_Detector">
Channeltron Detector (channeltron): A horn-shaped (or cone-shaped) continuous dynode particle multiplier. The ion strikes the inner surface of the device and induces the production of secondary electrons that in turn impinge on the inner surfaces to produce more secondary electrons. This avalanche effect produces an increase in signal in the final measured current pulse.
</member>
        <member name="F:MS_channeltron">
channeltron: A horn-shaped (or cone-shaped) continuous dynode particle multiplier. The ion strikes the inner surface of the device and induces the production of secondary electrons that in turn impinge on the inner surfaces to produce more secondary electrons. This avalanche effect produces an increase in signal in the final measured current pulse.
</member>
        <member name="F:MS_reflectron_on">
reflectron on: Reflectron is on.
</member>
        <member name="F:MS_reflectron_off">
reflectron off: Reflectron is off.
</member>
        <member name="F:MS_None_____OBSOLETE">
None  ??: None.
</member>
        <member name="F:MS_single_reaction_monitoring_OBSOLETE">
single reaction monitoring: This term is not recommended. See Selected Reaction Monitoring.
</member>
        <member name="F:MS_single_ion_monitoring_OBSOLETE">
single ion monitoring: The operation of a mass spectrometer to monitor a single ion rather than scanning entire mass spectrum.
</member>
        <member name="F:MS_product_ion_scan">
product ion scan: The specific scan function or process that records product ion spectrum.
</member>
        <member name="F:MS_precursor_ion_scan">
precursor ion scan: The specific scan function or process that will record a precursor ion spectrum.
</member>
        <member name="F:MS_MRM_OBSOLETE">
MRM (multiple reaction monitoring): This term is not recommended. See Selected Reaction Monitoring.
</member>
        <member name="F:MS_multiple_reaction_monitoring_OBSOLETE">
multiple reaction monitoring: This term is not recommended. See Selected Reaction Monitoring.
</member>
        <member name="F:MS_multiple_ion_monitoring">
multiple ion monitoring: Data acquired when monitoring the ion current of a few specific m/z values. Remap to MS:1000205 -Selected Ion Monitoring.
</member>
        <member name="F:MS_constant_neutral_mass_loss">
constant neutral mass loss: A spectrum formed of all product ions that have been produced with a selected m/z decrement from any precursor ions. The spectrum shown correlates to the precursor ion spectrum. See also neutral loss spectrum.
</member>
        <member name="F:MS_quadratic">
quadratic: The mass scan is done in quadratic mode.
</member>
        <member name="F:MS_linear">
linear: The mass scan is done in linear mode.
</member>
        <member name="F:MS_exponential">
exponential: The mass scan is done in exponential mode.
</member>
        <member name="F:MS_increasing_m_z_scan">
increasing m/z scan: Low to high direction in terms of m/z of the scan for scanning analyzers.
</member>
        <member name="F:MS_decreasing_m_z_scan">
decreasing m/z scan: High to low direction in terms of m/z of the scan for scanning analyzers.
</member>
        <member name="F:MS_selected_ion_detection">
selected ion detection: Please see Single Ion Monitoring.
</member>
        <member name="F:MS_mass_scan">
mass scan: A variation of instrument where a selected mass is scanned.
</member>
        <member name="F:MS_proportional">
proportional: When resolution is proportional with respect to m/z.
</member>
        <member name="F:MS_constant">
constant: When resolution is constant with respect to m/z.
</member>
        <member name="F:MS_ten_percent_valley">
ten percent valley: An attribute of resolution when the ratio between adjacent signals is 10% of the signal height.
</member>
        <member name="F:MS_FWHM">
FWHM (full width at half-maximum): A measure of resolution represented as width of the peak at half peak height.
</member>
        <member name="F:MS_full_width_at_half_maximum">
full width at half-maximum: A measure of resolution represented as width of the peak at half peak height.
</member>
        <member name="F:MS_baseline">
baseline: An attribute of resolution when recording the detector response in absence of the analyte.
</member>
        <member name="F:MS_TOF">
TOF (time-of-flight): Instrument that separates ions by m/z in a field-free region after acceleration to a fixed acceleration energy.
</member>
        <member name="F:MS_time_of_flight">
time-of-flight: Instrument that separates ions by m/z in a field-free region after acceleration to a fixed acceleration energy.
</member>
        <member name="F:MS_radial_ejection_linear_ion_trap">
radial ejection linear ion trap: A linear ion trap mass spectrometer where ions are ejected along the radius of the analyzer.
</member>
        <member name="F:MS_Quistor">
Quistor (quadrupole ion trap): Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.
</member>
        <member name="F:MS_QIT">
QIT (quadrupole ion trap): Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.
</member>
        <member name="F:MS_Paul_Ion_trap">
Paul Ion trap (quadrupole ion trap): Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.
</member>
        <member name="F:MS_quadrupole_ion_trap">
quadrupole ion trap: Quadrupole Ion Trap mass analyzer captures the ions in a three dimensional ion trap and then selectively ejects them by varying the RF and DC potentials.
</member>
        <member name="F:MS_quadrupole">
quadrupole: A mass spectrometer that consists of four parallel rods whose centers form the corners of a square and whose opposing poles are connected. The voltage applied to the rods is a superposition of a static potential and a sinusoidal radio frequency potential. The motion of an ion in the x and y dimensions is described by the Matthieu equation whose solutions show that ions in a particular m/z range can be transmitted along the z axis.
</member>
        <member name="F:MS_magnetic_sector">
magnetic sector: A device that produces a magnetic field perpendicular to a charged particle beam that deflects the beam to an extent that is proportional to the particle momentum per unit charge. For a monoenergetic beam, the deflection is proportional to m/z.
</member>
        <member name="F:MS_FT_ICR">
FT_ICR (fourier transform ion cyclotron resonance mass spectrometer): A mass spectrometer based on the principle of ion cyclotron resonance in which an ion in a magnetic field moves in a circular orbit at a frequency characteristic of its m/z value. Ions are coherently excited to a larger radius orbit using a pulse of radio frequency energy and their image charge is detected on receiver plates as a time domain signal. Fourier transformation of the time domain signal results in a frequency domain signal which is converted to a mass spectrum based in the inverse relationship between frequency and m/z.
</member>
        <member name="F:MS_fourier_transform_ion_cyclotron_resonance_mass_spectrometer">
fourier transform ion cyclotron resonance mass spectrometer: A mass spectrometer based on the principle of ion cyclotron resonance in which an ion in a magnetic field moves in a circular orbit at a frequency characteristic of its m/z value. Ions are coherently excited to a larger radius orbit using a pulse of radio frequency energy and their image charge is detected on receiver plates as a time domain signal. Fourier transformation of the time domain signal results in a frequency domain signal which is converted to a mass spectrum based in the inverse relationship between frequency and m/z.
</member>
        <member name="F:MS_axial_ejection_linear_ion_trap">
axial ejection linear ion trap: A linear ion trap mass spectrometer where ions are ejected along the axis of the analyzer.
</member>
        <member name="F:MS_positive_ion_mode_OBSOLETE">
positive ion mode: OBSOLETE
</member>
        <member name="F:MS_negative_ion_mode_OBSOLETE">
negative ion mode: OBSOLETE
</member>
        <member name="F:MS_MALDI">
MALDI (matrix-assisted laser desorption ionization): The formation of gas-phase ions from molecules that are present in a solid or solvent matrix that is irradiated with a pulsed laser. See also laser desorption/ionization.
</member>
        <member name="F:MS_matrix_assisted_laser_desorption_ionization">
matrix-assisted laser desorption ionization: The formation of gas-phase ions from molecules that are present in a solid or solvent matrix that is irradiated with a pulsed laser. See also laser desorption/ionization.
</member>
        <member name="F:MS_FAB">
FAB (fast atom bombardment ionization): The ionization of any species by the interaction of a focused beam of neutral atoms having a translational energy of several thousand eV with a sample that is typically dissolved in a solvent matrix. See also secondary ionization.
</member>
        <member name="F:MS_fast_atom_bombardment_ionization">
fast atom bombardment ionization: The ionization of any species by the interaction of a focused beam of neutral atoms having a translational energy of several thousand eV with a sample that is typically dissolved in a solvent matrix. See also secondary ionization.
</member>
        <member name="F:MS_ESI">
ESI (electrospray ionization): A process in which ionized species in the gas phase are produced from an analyte-containing solution via highly charged fine droplets, by means of spraying the solution from a narrow-bore needle tip at atmospheric pressure in the presence of a high electric field. When a pressurized gas is used to aid in the formation of a stable spray, the term pneumatically assisted electrospray ionization is used. The term ion spray is not recommended.
</member>
        <member name="F:MS_electrospray_ionization">
electrospray ionization: A process in which ionized species in the gas phase are produced from an analyte-containing solution via highly charged fine droplets, by means of spraying the solution from a narrow-bore needle tip at atmospheric pressure in the presence of a high electric field. When a pressurized gas is used to aid in the formation of a stable spray, the term pneumatically assisted electrospray ionization is used. The term ion spray is not recommended.
</member>
        <member name="F:MS_EI_OBSOLETE">
EI (Electronic Ionization): The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended. 
</member>
        <member name="F:MS_Electronic_Ionization_OBSOLETE">
Electronic Ionization: The ionization of an atom or molecule by electrons that are typically accelerated to energies between 50 and 150 eV. Usually 70 eV electrons are used to produce positive ions. The term 'electron impact' is not recommended. 
</member>
        <member name="F:MS_CI">
CI (chemical ionization): The formation of a new ion by the reaction of a neutral species with an ion. The process may involve transfer of an electron, a proton or other charged species between the reactants. When a positive ion results from chemical ionization the term may be used without qualification. When a negative ion results the term negative ion chemical ionization should be used. Note that this term is not synonymous with chemi-ionization.
</member>
        <member name="F:MS_chemical_ionization">
chemical ionization: The formation of a new ion by the reaction of a neutral species with an ion. The process may involve transfer of an electron, a proton or other charged species between the reactants. When a positive ion results from chemical ionization the term may be used without qualification. When a negative ion results the term negative ion chemical ionization should be used. Note that this term is not synonymous with chemi-ionization.
</member>
        <member name="F:MS_APCI">
APCI (atmospheric pressure chemical ionization): Chemical ionization that takes place at atmospheric pressure as opposed to the reduced pressure is normally used for chemical ionization.
</member>
        <member name="F:MS_atmospheric_pressure_chemical_ionization">
atmospheric pressure chemical ionization: Chemical ionization that takes place at atmospheric pressure as opposed to the reduced pressure is normally used for chemical ionization.
</member>
        <member name="F:MS_thermospray_inlet">
thermospray inlet: A method for generating gas phase ions from a solution of an analyte by rapid heating of the sample.
</member>
        <member name="F:MS_septum">
septum: A disc composed of a flexible material that seals the entrance to the reservoir. Can also be enterance to the vaccum chamber.
</member>
        <member name="F:MS_reservoir">
reservoir: A sample inlet method involving a reservoir.
</member>
        <member name="F:MS_particle_beam">
particle beam: Method for generating ions from a solution of an analyte.
</member>
        <member name="F:MS_open_split">
open split: A division of flowing stream of liquid into two streams.
</member>
        <member name="F:MS_moving_wire">
moving wire: Continuous moving surface in the form of a wire which passes through an ionsource carrying analyte molecules.
</member>
        <member name="F:MS_moving_belt">
moving belt: Continuous moving surface in the form of a belt which passes through an ionsource carrying analyte molecules.
</member>
        <member name="F:MS_membrane_separator">
membrane separator: A device to separate carrier molecules from analyte molecules on the basis of ease of diffusion across a semipermeable membrane.
</member>
        <member name="F:MS_jet_separator">
jet separator: A device that separates carrier gas from gaseous analyte molecules on the basis of diffusivity.
</member>
        <member name="F:MS_infusion">
infusion: The continuous flow of solution of a sample into the ionization source.
</member>
        <member name="F:MS_inductively_coupled_plasma">
inductively coupled plasma: A gas discharge ion source in which the energy to the plasma is supplied by electromagnetic induction.
</member>
        <member name="F:MS_flow_injection_analysis">
flow injection analysis: Sample is directly injected or infused into the ionization source.
</member>
        <member name="F:MS_electrospray_inlet">
electrospray inlet: Inlet used for introducing the liquid sample into an electrospray ionization source.
</member>
        <member name="F:MS_direct_inlet">
direct inlet: The sample is directly inserted into the ion source, usually on the end of a heatable probe.
</member>
        <member name="F:MS_CF_FAB">
CF-FAB (continuous flow fast atom bombardment): Fast atom bombardment ionization in which the analyte in solution is entrained in a flowing liquid matrix.
</member>
        <member name="F:MS_continuous_flow_fast_atom_bombardment">
continuous flow fast atom bombardment: Fast atom bombardment ionization in which the analyte in solution is entrained in a flowing liquid matrix.
</member>
        <member name="F:MS_chromatography">
chromatography: Chromatographic conditions used to obtain the sample.
</member>
        <member name="F:MS_sample_batch">
sample batch: Sample batch lot identifier.
</member>
        <member name="F:MS_suspension">
suspension: State if the sample is in suspension form.
</member>
        <member name="F:MS_solution">
solution: State if the sample is in solution form.
</member>
        <member name="F:MS_solid">
solid: State if the sample is in solid form.
</member>
        <member name="F:MS_liquid">
liquid: State if the sample is in liquid form.
</member>
        <member name="F:MS_gas">
gas: State if the sample is in gaseous form.
</member>
        <member name="F:MS_emulsion">
emulsion: State if the sample is in emulsion form.
</member>
        <member name="F:MS_energy_unit_OBSOLETE">
energy unit: Energy units are represented in either eV or Joules.
</member>
        <member name="F:MS_collision_energy">
collision energy: Energy for an ion experiencing collision with a stationary gas particle resulting in dissociation of the ion.
</member>
        <member name="F:MS_dissociation_method">
dissociation method: Fragmentation method used for dissociation or fragmentation.
</member>
        <member name="F:MS_intensity_unit">
intensity unit: Intensity units are commonly arbitrary. Detected in counts per second (cps) when using counting detectors, but measured in volts when using analog detectors.
</member>
        <member name="F:MS_peak_intensity">
peak intensity: Intensity of ions as measured by the height or area of a peak in a mass spectrum.
</member>
        <member name="F:MS_z">
z (charge state): The charge state of the ion, single or multiple and positive or negatively charged.
</member>
        <member name="F:MS_charge_state">
charge state: The charge state of the ion, single or multiple and positive or negatively charged.
</member>
        <member name="F:MS_thomson">
thomson (m/z): Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.
</member>
        <member name="F:MS_Th">
Th (m/z): Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.
</member>
        <member name="F:MS_mass_to_charge_ratio">
mass-to-charge ratio (m/z): Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.
</member>
        <member name="F:MS_m_z">
m/z: Three-character symbol m/z is used to denote the quantity formed by dividing the mass of an ion in unified atomic mass units by its charge number (regardless of sign). The symbol is written in italicized lower case letters with no spaces. Note 1: The term mass-to-charge-ratio is deprecated. Mass-to-charge ratio has been used for the abscissa of a mass spectrum, although the quantity measured is not the quotient of the ion's mass to its electric charge. The three-character symbol m/z is recommended for the quantity that is the independent variable in a mass spectrum Note 2: The proposed unit thomson (Th) is deprecated.
</member>
        <member name="F:MS_second_OBSOLETE">
second: Acquisition time in seconds.
</member>
        <member name="F:MS_minute_OBSOLETE">
minute: Acquisition time in minutes.
</member>
        <member name="F:MS_polarity">
polarity: Terms to describe the polarity setting of the instrument.
</member>
        <member name="F:MS_scan_mode_OBSOLETE">
scan mode: OBSOLETE
</member>
        <member name="F:MS_peak_picking">
peak picking: Spectral peak processing conducted on the acquired data to convert profile data to centroided data.
</member>
        <member name="F:MS_charge_deconvolution">
charge deconvolution: The determination of the mass of an ion based on the mass spectral peaks that represent multiple-charge ions.
</member>
        <member name="F:MS_deisotoping">
deisotoping: The removal of isotope peaks to represent the fragment ion as one data point and is commonly done to reduce complexity. It is done in conjunction with the charge state deconvolution.
</member>
        <member name="F:MS_customization">
customization: Free text description of a single customization made to the instrument; for several modifications, use several entries.
</member>
        <member name="F:MS_instrument_model">
instrument model: Instrument model name not including the vendor's name.
</member>
        <member name="F:MS_vendor_OBSOLETE">
vendor: Name of instrument vendor
</member>
        <member name="F:MS_sampling_frequency">
sampling frequency: The rate of signal sampling (measurement) with respect to time.
</member>
        <member name="F:MS_detector_resolution">
detector resolution: The resolving power of the detector to detect the smallest difference between two ions so that the valley between them is a specified fraction of the peak height.
</member>
        <member name="F:MS_detector_acquisition_mode">
detector acquisition mode: Method by which detector signal is acquired by the data system.
</member>
        <member name="F:MS_detector_type">
detector type: Type of detector used in the mass spectrometer.
</member>
        <member name="F:MS_B">
B (magnetic field strength): A property of space that produces a force on a charged particle equal to qv x B where q is the particle charge and v its velocity.
</member>
        <member name="F:MS_magnetic_field_strength">
magnetic field strength: A property of space that produces a force on a charged particle equal to qv x B where q is the particle charge and v its velocity.
</member>
        <member name="F:MS_final_MS_exponent">
final MS exponent: Final MS level achieved when performing PFF with the ion trap (e.g. MS E10).
</member>
        <member name="F:MS_isolation_width">
isolation width: The total width (i.e. not half for plus-or-minus) of the gate applied around a selected precursor ion.
</member>
        <member name="F:MS_TOF_Total_Path_Length">
TOF Total Path Length: The length of the field free drift space in a time of flight mass spectrometer.
</member>
        <member name="F:MS_reflectron_state">
reflectron state: Status of the reflectron, turned on or off.
</member>
        <member name="F:MS_scanning_method">
scanning method: Describes the acquisition data type produced by a tandem mass spectrometry experiment.
</member>
        <member name="F:MS_scan_law">
scan law: Describes the function in control of the m/z scan (for scanning instruments). Commonly the scan function is linear, but in principle any function can be used.
</member>
        <member name="F:MS_scan_direction">
scan direction: Direction in terms of m/z of the scan for scanning analyzers (low to high, or high to low).
</member>
        <member name="F:MS_Scan_Function">
Scan Function: Describes the type of mass analysis being performed. Two primary modes are: typical acquisition over a range of masses (Mass Scan), and Selected Ion Detection. The primary difference is that Selected Ion Detection produces a single value for the signal at the selected mass rather than producing a mass spectrum.
</member>
        <member name="F:MS_scan_start_time">
scan start time: The time that an analyzer started a scan, relative to the start of the MS run.
</member>
        <member name="F:MS_scan_rate">
scan rate: Rate in Th/sec for scanning analyzers.
</member>
        <member name="F:MS_accuracy">
accuracy: Accuracy is the degree of conformity of a measured mass to its actual value.
</member>
        <member name="F:MS_resolution_type">
resolution type: Specify the nature of resolution for the mass analyzer. Resolution is usually either constant with respect to m/z or proportional to m/z.
</member>
        <member name="F:MS_resolution_measurement_method">
resolution measurement method: Which of the available standard measures is used to define whether two peaks are separate.
</member>
        <member name="F:MS_mass_resolution">
mass resolution: Smallest mass difference between two equal magnitude peaks so that the valley between them is a specified fraction of the peak height.
</member>
        <member name="F:MS_analyzer_type">
analyzer type: The common name of the particular analyzer stage being described. Synonym of mass analyzer, should be obsoleted.
</member>
        <member name="F:MS_ionization_mode_OBSOLETE">
ionization mode: Whether positive or negative ions are selected for analysis by the spectrometer.
</member>
        <member name="F:MS_ionization_type">
ionization type: The method by which gas phase ions are generated from the sample.
</member>
        <member name="F:MS_inlet_type">
inlet type: The nature of the sample inlet.
</member>
        <member name="F:MS_sample_concentration">
sample concentration: Concentration of sample in picomol/ul, femtomol/ul or attomol/ul solution used.
</member>
        <member name="F:MS_sample_volume">
sample volume: Total volume of solution used.
</member>
        <member name="F:MS_sample_mass">
sample mass: Total mass of sample used.
</member>
        <member name="F:MS_sample_state">
sample state: The chemical phase of a pure sample, or the state of a mixed sample.
</member>
        <member name="F:MS_sample_name">
sample name: A reference string relevant to the sample under study.
</member>
        <member name="F:MS_sample_number">
sample number: A reference number relevant to the sample under study.
</member>
        <member name="F:MS_Proteomics_Standards_Initiative_Mass_Spectrometry_Vocabularies">
Proteomics Standards Initiative Mass Spectrometry Vocabularies: Proteomics Standards Initiative Mass Spectrometry Vocabularies.
</member>
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.tradata.TraData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.tradata.ReaderList'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.a(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.b(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.c(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.x(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.y(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.z(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.zRadical(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.basic_regex<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,boost.regex_traits<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.#ctor(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.testSite(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.proteome.ReaderList'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.a(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.b(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.c(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.x(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.y(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.z(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.zRadical(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.basic_regex<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,boost.regex_traits<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.#ctor(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.testSite(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.a(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.b(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.c(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.x(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.y(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.z(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.zRadical(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.basic_regex<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,boost.regex_traits<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.#ctor(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.testSite(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.SpectrumList'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ChromatogramList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.msdata.MSData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.id.parse(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_LogicalNot(boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_LogicalAnd(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_LogicalOr(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_Equality(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_Inequality(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.analysis.SpectrumList_Sorter.Predicate.less(pwiz.msdata.SpectrumIdentity!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.SpectrumIdentity!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.analysis.SpectrumList_Sorter.Predicate.less(pwiz.msdata.Spectrum!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.Spectrum!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.SpectrumList'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ChromatogramList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.msdata.MSData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.id.parse(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ReaderList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.SpectrumList'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ChromatogramList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.msdata.MSData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.id.parse(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.SpectrumList'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ChromatogramList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.msdata.MSData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.id.parse(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.tradata.TraData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.tradata.TraData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.tradata.ReaderList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.SpectrumList'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ChromatogramList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.msdata.MSData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.id.parse(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_LogicalNot(boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_LogicalAnd(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_LogicalOr(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_Equality(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:boost.logic.op_Inequality(boost.logic.tribool,boost.logic.tribool)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.analysis.SpectrumList_Sorter.Predicate.less(pwiz.msdata.SpectrumIdentity!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.SpectrumIdentity!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.analysis.SpectrumList_Sorter.Predicate.less(pwiz.msdata.Spectrum!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.msdata.Spectrum!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:ThresholdingBy_Count'. -->
        <!-- Discarding badly formed XML document comment for member 'F:ThresholdingBy_CountAfterTies'. -->
        <!-- Discarding badly formed XML document comment for member 'F:ThresholdingBy_AbsoluteIntensity'. -->
        <!-- Discarding badly formed XML document comment for member 'F:ThresholdingBy_FractionOfBasePeakIntensity'. -->
        <!-- Discarding badly formed XML document comment for member 'F:ThresholdingBy_FractionOfTotalIntensity'. -->
        <!-- Discarding badly formed XML document comment for member 'F:ThresholdingBy_FractionOfTotalIntensityCutoff'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.a(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.b(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.c(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.x(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.y(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.z(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.zRadical(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.basic_regex<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,boost.regex_traits<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.#ctor(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.testSite(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.SpectrumList'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ChromatogramList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.msdata.MSData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.id.parse(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.a(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.b(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.c(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.x(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.y(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.z(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.zRadical(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.basic_regex<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,boost.regex_traits<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.#ctor(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.testSite(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.proteome.ReaderList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.tradata.TraData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.a(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.b(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.c(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.x(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.y(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.z(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Fragmentation.zRadical(System.UInt32,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.#ctor(pwiz.proteome.Peptide!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,boost.basic_regex<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,boost.regex_traits<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,pwiz.proteome.Digestion.Config!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.#ctor(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.proteome.Digestion.Motif.testSite(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.tradata.TraData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Acetyl_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Propionyl_13C_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_3_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_6_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_GIST_Quat_2H_9_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_2H_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Succinyl_13C_4_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_Benzoyl'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ4plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex'. -->
        <!-- Discarding badly formed XML document comment for member 'F:UNIMOD_iTRAQ8plex_13C_6_15N_2_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____R____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWL_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____M_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______D_______D__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS_____K_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FL__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______FYWLKR_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______KR__'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______BDEZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.CLI.cv.CVID.MS______EZ_____P_'. -->
        <!-- Discarding badly formed XML document comment for member 'P:pwiz.CLI.cv.CVTermInfo.cvid'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIs'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.data.CVParamIsChildOf'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.source(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.analyzer(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.ComponentList.detector(System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.SpectrumList'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ChromatogramList'. -->
        <!-- Discarding badly formed XML document comment for member 'F:pwiz.msdata.MSData.cvs'. -->
        <!-- Discarding badly formed XML document comment for member 'M:pwiz.msdata.id.parse(std.basic_string<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator<System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte>>!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:pwiz.msdata.ReaderList'. -->
    </members>
</doc>